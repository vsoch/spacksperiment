{
    "url": "https://api.github.com/repos/spack/spack/issues/12437",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/12437/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/12437/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/12437/events",
    "html_url": "https://github.com/spack/spack/pull/12437",
    "id": 481360648,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA3ODc1ODMy",
    "number": 12437,
    "title": "camx: add version 6.50",
    "user": {
        "login": "omsai",
        "id": 166624,
        "node_id": "MDQ6VXNlcjE2NjYyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/166624?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/omsai",
        "html_url": "https://github.com/omsai",
        "followers_url": "https://api.github.com/users/omsai/followers",
        "following_url": "https://api.github.com/users/omsai/following{/other_user}",
        "gists_url": "https://api.github.com/users/omsai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/omsai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/omsai/subscriptions",
        "organizations_url": "https://api.github.com/users/omsai/orgs",
        "repos_url": "https://api.github.com/users/omsai/repos",
        "events_url": "https://api.github.com/users/omsai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/omsai/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-15T22:12:20Z",
    "updated_at": "2019-08-16T00:07:24Z",
    "closed_at": "2019-08-16T00:07:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/12437",
        "html_url": "https://github.com/spack/spack/pull/12437",
        "diff_url": "https://github.com/spack/spack/pull/12437.diff",
        "patch_url": "https://github.com/spack/spack/pull/12437.patch"
    },
    "body": "New CAMx package.\r\n\r\nNotes:\r\n1. Only tested with Intel compiler and Intel MPI and OpenMP; environment file below.\r\n2. The built `camx` executable needs to be run with 2 or more MPI tasks (even if your single MPI task has multiple CPUs per task) or you'll get a cryptic MPI crash.\r\n3. For some reason upstream compiles in their parameter limits into their `camx.prm.*` file.  This seems to be somewhat common practice in the atmospheric research Fortran community, but I still have to wonder why those parameter limits are not it a separate `/etc` configuration file?  It might be because upstream expects you to work inside of their source directory for all your computation, and expects you to edit source files; they have no \"install\" make rule.  I `patch()` that file to fix runtime errors my user observed with her EPA dataset.\r\n4. I have not added a variant for NetCDF 3 (!)  and 4 support because it looks fairly outdated and my HPC user is not using that functionality.  If NetCDF support is needed, that can be added in by a future contributor who has relevant test data to validate it.\r\n\r\nTest environment with empty branches omitted via `grep -vE '({}|\\[\\])' spack.yaml`:\r\n\r\n```yaml\r\n# This is a Spack Environment file.\r\n#\r\n# It describes a set of packages to be installed, along with\r\n# configuration settings.\r\nspack:\r\n  # add package specs to the `specs` list\r\n  specs: [camx threads=openmp]\r\n  view:\r\n    default:\r\n      root: /home/yul18051/src/camx/6.50/.spack-env/view\r\n  modules:\r\n  packages:\r\n    intel-mkl:\r\n      buildable: false\r\n      paths:\r\n        intel-mkl@16.1 +ilp64 threads=openmp: /apps2/intelics/2016.1-full-gcc/parallel_studio_xe_2016.1.056/compilers_and_libraries_2016/linux\r\n    intel-mpi:\r\n      buildable: false\r\n      paths:\r\n        intel-mpi@16.1: /apps2/intelics/2016.1-full-gcc/parallel_studio_xe_2016.1.056/compilers_and_libraries_2016/linux/mpi\r\n    all:\r\n      compiler: [intel@16.1]\r\n      providers:\r\n        blas: [intel-mkl]\r\n        lapack: [intel-mkl]\r\n        mkl: [intel-mkl]\r\n        mpi: [intel-mpi]\r\n      buildable: true\r\n  compilers:\r\n  - compiler:\r\n      operating_system: rhel6\r\n      paths:\r\n        cc: /apps2/intelics/2016.1-full-gcc/bin/icc\r\n        cxx: /apps2/intelics/2016.1-full-gcc/bin/icpc\r\n        f77: /apps2/intelics/2016.1-full-gcc/bin/ifort\r\n        fc: /apps2/intelics/2016.1-full-gcc/bin/ifort\r\n      # RHEL 6 gcc 4.4.7 does not support std=c++11\r\n      flags:\r\n        cflags: -gcc-name=/apps2/gcc/5.4.0-alt/bin/gcc\r\n        cxxflags: -gxx-name=/apps2/gcc/5.4.0-alt/bin/g++\r\n        fflags: -gcc-name=/apps2/gcc/5.4.0-alt/bin/gcc\r\n      extra_rpaths:\r\n      - /apps2/intelics/2016.1-full-gcc/parallel_studio_xe_2016.1.056/compilers_and_libraries_2016/linux/compiler/lib/intel64_lin\r\n      spec: intel@16.1\r\n      target: x86_64\r\n```",
    "performed_via_github_app": null
}