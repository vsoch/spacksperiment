{
    "url": "https://api.github.com/repos/spack/spack/issues/876",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/876/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/876/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/876/events",
    "html_url": "https://github.com/spack/spack/issues/876",
    "id": 152325722,
    "node_id": "MDU6SXNzdWUxNTIzMjU3MjI=",
    "number": 876,
    "title": "openmp link flags for compilers",
    "user": {
        "login": "davydden",
        "id": 8023934,
        "node_id": "MDQ6VXNlcjgwMjM5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8023934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davydden",
        "html_url": "https://github.com/davydden",
        "followers_url": "https://api.github.com/users/davydden/followers",
        "following_url": "https://api.github.com/users/davydden/following{/other_user}",
        "gists_url": "https://api.github.com/users/davydden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davydden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davydden/subscriptions",
        "organizations_url": "https://api.github.com/users/davydden/orgs",
        "repos_url": "https://api.github.com/users/davydden/repos",
        "events_url": "https://api.github.com/users/davydden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davydden/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-05-01T18:20:29Z",
    "updated_at": "2016-05-09T21:42:37Z",
    "closed_at": "2016-05-09T21:42:37Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The need to provide `openmp` link flags came up in a couple of place, see https://github.com/LLNL/spack/pull/875 or https://github.com/LLNL/spack/pull/845 .\n\nDifferent compilers need different flags (see https://www.dartmouth.edu/~rc/classes/intro_openmp/compile_run.html ):\n\n-- GNU (gcc, g++, gfortran) :   `-fopenmp`\n-- Intel (icc ifort):   `-openmp`\n-- Portland Group (pgcc,pgCC,pgf77,pgf90) : `-mp`\n\nAs far as i can tell, the flags are the same for C/C++ and Fortran. So we don't need to discriminate between those cases.\n\nObviously, this must be related to `Compiler` class, and those flags are to be implemented in `$SPACK_ROOT/lib/spack/spack/compilers/clang.py` and alike.\n\n(1) First approach, example for `gcc`\n\n```\n    @classmethod\n    def openmp_link_flags(self):\n        return '-fopenmp'\n```\n\nand for `clang`\n\n```\n    @classmethod\n    def openmp_link_flags(self):\n        # test that this is Apple's clang and then...\n        raise InstallError('Clang does not support OpenMP!')\n        return ' '\n```\n\nThen inside the `package.py` it would be used where needed as (if I am not mistaken)\n\n```\nself.compiler.openmp_link_flags\n```\n\n(2) Second approach: I don't know if this is possible, but a more flexible alternative (in the spirit of https://github.com/LLNL/spack/pull/657) would be to have in compiler class\n\n```\ndef setup_dependent_package(self, module, dspec):\n   if `+openmp` in dspec\n      self.spec.openmp_link_flags = '-fopenmp`\n```\n\nShall we need to add more dynamic checks based on specs, it would be much easier with (2) approach, as far as i understand the whole framework.\n\nEither of this should be very straightforward to add, and I will be happy to give it a go if we agree on the approach.\n\n@tgamblin @mathstuf @eschnett @adamjstewart  @alalazo @citibeth  : what do you think?\n",
    "performed_via_github_app": null
}