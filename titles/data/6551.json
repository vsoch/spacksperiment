{
    "url": "https://api.github.com/repos/spack/spack/issues/6551",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/6551/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/6551/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/6551/events",
    "html_url": "https://github.com/spack/spack/pull/6551",
    "id": 278609070,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU1OTY3MDkx",
    "number": 6551,
    "title": "Add more vtk options",
    "user": {
        "login": "scottwittenburg",
        "id": 6527504,
        "node_id": "MDQ6VXNlcjY1Mjc1MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6527504?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottwittenburg",
        "html_url": "https://github.com/scottwittenburg",
        "followers_url": "https://api.github.com/users/scottwittenburg/followers",
        "following_url": "https://api.github.com/users/scottwittenburg/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottwittenburg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottwittenburg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottwittenburg/subscriptions",
        "organizations_url": "https://api.github.com/users/scottwittenburg/orgs",
        "repos_url": "https://api.github.com/users/scottwittenburg/repos",
        "events_url": "https://api.github.com/users/scottwittenburg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottwittenburg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446620495,
            "node_id": "MDU6TGFiZWw0NDY2MjA0OTU=",
            "url": "https://api.github.com/repos/spack/spack/labels/WIP",
            "name": "WIP",
            "color": "ededed",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2017-12-01T21:59:16Z",
    "updated_at": "2018-01-22T18:46:51Z",
    "closed_at": "2018-01-22T18:46:45Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/6551",
        "html_url": "https://github.com/spack/spack/pull/6551",
        "diff_url": "https://github.com/spack/spack/pull/6551.diff",
        "patch_url": "https://github.com/spack/spack/pull/6551.patch"
    },
    "body": "After a lot of experimentation and messing around, I think I have settled on what I think are the goals for the VTK spack package.  Please chime in if you disagree or have different thoughts on the matter.\r\n\r\nWe need the following four *independent* options:\r\n\r\n1. python wrapping (yes or no)\r\n2. qt (yes or no)\r\n** should not imply software rendering by choosing qt\r\n3. hardware vs. software rendering\r\n** if doing software rendering, there is no reason not to use llvm by default to speed it up\r\n** down the road we might like to have offscreen hardware rendering (via EGL) when GPUs supporting it are available\r\n4. rendering backend (opengl1 or opengl2) will become less important as the opengl1 backend will be deprecated soon.\r\n\r\n~~I tried to achieve these goals by only changing the `vtk` package, but I'm not sure it's going to work that way.  Maybe changes will be needed to the `qt` and/or `mesa` packages.~~\r\n\r\nOne of the things this PR does is make qt optional for the VTK package, which was not the case before.\r\n\r\n~~This PR also contains a \"workaround\" commit to get VTK to build correctly.  VTK depends on a specific version of libtiff, and thus includes that specific version in it's ThirdParty directory.  That specific version indicates that it does not have JBIG_SUPPORT, and everything works fine.  When spack builds VTK, the libtiff built by spack is found first, and it *does* seem to have JBIG_SUPPORT, but then during the build process linking fails because the symbols related to JBIG cannot be found (see the commit message for that workaround commit).  In general, how should we make sure that VTK chooses it's own ThirdParty libraries over anything spack built?  I know my workaround probably isn't the way to go, but it let me get a lot of VTK build variants working and tested in the short term.~~\r\n\r\n~~Currently this PR attempts to make hardware rendering the default when `qt` and `-osmesa` are in the spec. However, that does not seem to work, as my simple VTK benchmark, which runs at -7K fps on my linux box normally, runs at only 10fps when built against the `vtk+qt` built by spack.  Also, when `+osmesa` is in the spec, it tries to use llvm, but that does not seem to work either.  I'm not sure if the package.py is wrong, or perhaps I just don't understand how the hashing works.  I kind of expected that if I changed a `depends_on` in the package.py, spack would notice that even though I'm asking to install a combination I've installed before, the dependencies are no longer met, and would decide to install again.~~\r\n\r\nAnd finally, I'm having real trouble getting any variants of VTK to build/work on Mac OSX.  This PR doesn't contain any fixes that will help with those issues.  I'm leaving that for a future PR when I've made more progress in that arena.\r\n\r\nI'm looking forward to iterate on this PR until everyone is happy with it.\r\n\r\n~~EDIT:~~\r\n\r\nI have reworked this PR so that VTK gets as many of its dependencies from spack as possible, rather than using it's own ThirdParty copies of them.  This did allow me to remove the \"workaround\" change reviewed by @davydden. \r\n\r\n~~Also, this PR \"punts\" on hardware rendering (it works on my system, but only if I *do not* enable `qt`, as VTK needs `qt+opengl`, which brings in mesa).  In the absence of a real hardware rendering solution, `qt` causes VTK to find the libGL provided by mesa and uses that, resulting in terrible rendering performance.~~\r\n\r\n~~In my next PR, I plan to create an `opengl` virtual package which the `mesa` package will `provide`.  Then I plan to create a `systemopengl` package (or maybe that's not the right name?), where the plan will be that users will always have to provide that via an external package.  Finally, when VTK is not requested with `osmesa`, it will depend on that `systemopengl` package. ~~\r\n\r\nEDIT\r\n\r\nThis PR should be added after #6662 makes it in, as it now depends on the `opengl` package created in that PR.  Once that is merged and I can rebase on it, this PR will only have a change to the `vtk` package.",
    "performed_via_github_app": null
}