{
    "url": "https://api.github.com/repos/spack/spack/issues/3117",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3117/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3117/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3117/events",
    "html_url": "https://github.com/spack/spack/issues/3117",
    "id": 206806308,
    "node_id": "MDU6SXNzdWUyMDY4MDYzMDg=",
    "number": 3117,
    "title": "Line that crashes does not match line pointed to",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-10T14:15:58Z",
    "updated_at": "2017-09-07T14:10:26Z",
    "closed_at": "2017-09-07T14:10:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I wasn't sure how to word the title, but I've seen something strange happen a couple times now. I tried building `libdwarf` on macOS, but it crashed (presumably during `make`):\r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"_elf32_getehdr\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf32_getshdr\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf64_getehdr\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf64_getshdr\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf_begin\", referenced from:\r\n      _dwarf_init in dwarf_original_elf_init.o\r\n  \"_elf_end\", referenced from:\r\n      _dwarf_elf_object_access_finish in dwarf_elf_access.o\r\n  \"_elf_getdata\", referenced from:\r\n      _dwarf_elf_object_access_load_section in dwarf_elf_access.o\r\n      _dwarf_elf_object_relocate_a_section in dwarf_elf_access.o\r\n  \"_elf_getident\", referenced from:\r\n      _dwarf_elf_object_access_init in dwarf_elf_access.o\r\n  \"_elf_getscn\", referenced from:\r\n      __dwarf_get_elf_flags_func in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n      _dwarf_elf_object_access_load_section in dwarf_elf_access.o\r\n      _dwarf_elf_object_relocate_a_section in dwarf_elf_access.o\r\n  \"_elf_strptr\", referenced from:\r\n      _dwarf_elf_object_access_get_section_info in dwarf_elf_access.o\r\n  \"_elf_version\", referenced from:\r\n      _dwarf_init in dwarf_original_elf_init.o\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake: *** [libdwarf.so] Error 1\r\n```\r\nBut, the stack trace for the crash shows it crashing during a completely different phase:\r\n```\r\n==> Error: ProcessError: Command exited with status 2:\r\n    'make' 'ARFLAGS=rcs'\r\n/Users/Adam/spack/var/spack/repos/builtin/packages/libdwarf/package.py:69, in install:\r\n     55       def install(self, spec, prefix):\r\n     56           # dwarf build does not set arguments for ar properly\r\n     57           make.add_default_arg('ARFLAGS=rcs')\r\n     58   \r\n     59           # Dwarf doesn't provide an install, so we have to do it.\r\n     60           mkdirp(prefix.bin, prefix.include, prefix.lib, prefix.man1)\r\n     61   \r\n     62           with working_dir('libdwarf'):\r\n     63               configure(\"--prefix=\" + prefix, \"--enable-shared\")\r\n     64               make()\r\n     65   \r\n     66               install('libdwarf.a',  prefix.lib)\r\n     67               install('libdwarf.so', prefix.lib)\r\n     68               install('libdwarf.h',  prefix.include)\r\n  >> 69               install('dwarf.h',     prefix.include)\r\n     70   \r\n     71           if spec.satisfies('@20130126:20130729'):\r\n     72               dwarfdump_dir = 'dwarfdump2'\r\n     73           else:\r\n     74               dwarfdump_dir = 'dwarfdump'\r\n     75           with working_dir(dwarfdump_dir):\r\n     76               configure(\"--prefix=\" + prefix)\r\n     77   \r\n     78               # This makefile has strings of copy commands that\r\n     79               # cause a race in parallel\r\n     80               make(parallel=False)\r\n     81   \r\n     82               install('dwarfdump',      prefix.bin)\r\n     83               install('dwarfdump.conf', prefix.lib)\r\n     84               install('dwarfdump.1',    prefix.man1)\r\n```\r\nYou'll notice that the ProcessError points to `'make' 'ARFLAGS=rcs'` as the culprit, but the line we point the user to is `install('dwarf.h', prefix.include)`. This makes it confusing as to which line actually crashed.\r\n\r\n#3115 is another example of this. ProcessError points to `make` but the line we say crashed is `make install`.",
    "performed_via_github_app": null
}