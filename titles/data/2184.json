{
    "url": "https://api.github.com/repos/spack/spack/issues/2184",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2184/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2184/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2184/events",
    "html_url": "https://github.com/spack/spack/issues/2184",
    "id": 186186529,
    "node_id": "MDU6SXNzdWUxODYxODY1Mjk=",
    "number": 2184,
    "title": "What config scope should be the default?",
    "user": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 471995122,
            "node_id": "MDU6TGFiZWw0NzE5OTUxMjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/commands",
            "name": "commands",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 446615135,
            "node_id": "MDU6TGFiZWw0NDY2MTUxMzU=",
            "url": "https://api.github.com/repos/spack/spack/labels/configuration",
            "name": "configuration",
            "color": "bfd4f2",
            "default": false,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 512483390,
            "node_id": "MDU6TGFiZWw1MTI0ODMzOTA=",
            "url": "https://api.github.com/repos/spack/spack/labels/impact-medium",
            "name": "impact-medium",
            "color": "fef2c0",
            "default": false,
            "description": ""
        },
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-10-31T02:00:39Z",
    "updated_at": "2019-07-04T01:35:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "It came up while documenting #2152 that Spack is inconsistent about which config scope is edited from command to command.  Currently, the sort-of-inconsistently-implemented default behavior is to edit the highest-precedence available scope, which used to be `user`, but as of #2030 it's the platform-specific scope for the current platform (e.g. `~/.spack/bgq/config.yaml`).\n\nI figure I should bounce this off of people before editing it.  See if you think what I'm proposing below is reasonable.\n\nCurrently there are 11 commands that take a scope argument.  I've labeled them as either \"read\" operations or \"modify\" operations.  I think they should behave as follows:\n\n**Read operations:**\n- `spack config get` \n- `spack compilers / spack compiler list`\n- `spack mirror list`\n- `spack repo list`\n\nI think all of these should show merged results by default, and allow the user to select a specific scope with `--scope=<scope>` if they want to.\n\n**Modify operations:**\n- `spack config edit`\n- `spack compiler add / spack compiler find`\n- `spack compiler remove`\n- `spack mirror add`\n- `spack mirror remove`\n- `spack repo add`\n- `spack repo remove`\n\nI think instead of taking the highest precedence scope (which among other things might change from spack version to spack version if we implement additional scopes), we should implement this policy:\n1. Introduce a `default_edit_scope` option in `config.yaml`, and out of the box it would be set to edit the `user` scope by default.\n2. If the option is set to `<scope>`, commands should edit the generic `<scope>` config by default, but it should edit an architecture-specific `<scope>/<platform>` config _if it exists_.  I think this is a) natural and b) prevents the user from getting confused if they, say, forgot they made a platform-specific config.\n3. Finally, compilers are a special case (in that they are actually platform-specific) and `spack compiler add/find` should modify the platform-specific scope by default.\n\nDoes this policy seem reasonable?  the other option would be to require a scope parameter for edit commands, but I think it's nice for users to be able to say, e.g., `spack config edit` or `spack repo add` without thinking about scopes.\n\n@alalazo @davydden @adamjstewart @citibeth \n",
    "performed_via_github_app": null
}