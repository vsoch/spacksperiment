{
    "url": "https://api.github.com/repos/spack/spack/issues/6067",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/6067/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/6067/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/6067/events",
    "html_url": "https://github.com/spack/spack/issues/6067",
    "id": 270103303,
    "node_id": "MDU6SXNzdWUyNzAxMDMzMDM=",
    "number": 6067,
    "title": "Allow to specify the configure line declaratively",
    "user": {
        "login": "certik",
        "id": 20568,
        "node_id": "MDQ6VXNlcjIwNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/20568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/certik",
        "html_url": "https://github.com/certik",
        "followers_url": "https://api.github.com/users/certik/followers",
        "following_url": "https://api.github.com/users/certik/following{/other_user}",
        "gists_url": "https://api.github.com/users/certik/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/certik/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/certik/subscriptions",
        "organizations_url": "https://api.github.com/users/certik/orgs",
        "repos_url": "https://api.github.com/users/certik/repos",
        "events_url": "https://api.github.com/users/certik/events{/privacy}",
        "received_events_url": "https://api.github.com/users/certik/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 475441813,
            "node_id": "MDU6TGFiZWw0NzU0NDE4MTM=",
            "url": "https://api.github.com/repos/spack/spack/labels/autotools",
            "name": "autotools",
            "color": "d93f0b",
            "default": false,
            "description": null
        },
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-10-31T20:12:42Z",
    "updated_at": "2020-08-23T18:24:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Most packages use coding in Python to build up the configure line. Let's take the `gcc` package as an example:\r\n\r\nhttps://github.com/LLNL/spack/blob/d98e337706352b0fc35ba2cf478d2b08e946513b/var/spack/repos/builtin/packages/gcc/package.py#L200\r\n\r\nit contains lines like:\r\n\r\n        # MPC\r\n        if 'mpc' in spec:\r\n            options.append('--with-mpc={0}'.format(spec['mpc'].prefix))\r\n\r\n        # ISL\r\n        if 'isl' in spec:\r\n            options.append('--with-isl={0}'.format(spec['isl'].prefix))\r\n\r\n        # macOS\r\n        if sys.platform == 'darwin':\r\n            options.append('--with-build-config=bootstrap-debug')\r\n\r\nAll these could be converted to a declarative way (in the class variables) as follows:\r\n\r\n    configure_option(\"--with-mpc={MPC_PREFIX}\", when=\"+mpc\")\r\n    configure_option(\"--with-isl={ISL_PREFIX}\", when=\"+isl\")\r\n    configure_option(\"--with-build-config=bootstrap-debug\", when=\"platform=darwin\")\r\n\r\nThis is using spack's mini-language in the `when` keyword. Specifying the prefix is also repetitive, so instead of the `.format(spec['mpc'].prefix)` idiom, spack would automatically create the `{MPC_PREFIX}` format variables, so that you can use it in the string.\r\n\r\nI think this will simplify a lot of packages. This moves along the direction of #5858, which @tgamblin said it's \"cool\", and at the same time addresses his main objection of \"it reduces the flexibility Python gives you for a lot of packages\", since this proposal does not reduce anything --- you can still use the old way and code the configure line in Python, but you can also (optionally) move to the shorter/simpler declarative way for packages that allow that.",
    "performed_via_github_app": null
}