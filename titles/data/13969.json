{
    "url": "https://api.github.com/repos/spack/spack/issues/13969",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/13969/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/13969/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/13969/events",
    "html_url": "https://github.com/spack/spack/issues/13969",
    "id": 532195989,
    "node_id": "MDU6SXNzdWU1MzIxOTU5ODk=",
    "number": 13969,
    "title": "cuda: g++ finds C++ std headers shipped by cuda sdk instead of its own libstdc++",
    "user": {
        "login": "nazavode",
        "id": 1379149,
        "node_id": "MDQ6VXNlcjEzNzkxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1379149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nazavode",
        "html_url": "https://github.com/nazavode",
        "followers_url": "https://api.github.com/users/nazavode/followers",
        "following_url": "https://api.github.com/users/nazavode/following{/other_user}",
        "gists_url": "https://api.github.com/users/nazavode/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nazavode/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nazavode/subscriptions",
        "organizations_url": "https://api.github.com/users/nazavode/orgs",
        "repos_url": "https://api.github.com/users/nazavode/repos",
        "events_url": "https://api.github.com/users/nazavode/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nazavode/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 446645732,
            "node_id": "MDU6TGFiZWw0NDY2NDU3MzI=",
            "url": "https://api.github.com/repos/spack/spack/labels/build-environment",
            "name": "build-environment",
            "color": "bfdadc",
            "default": false,
            "description": null
        },
        {
            "id": 618601843,
            "node_id": "MDU6TGFiZWw2MTg2MDE4NDM=",
            "url": "https://api.github.com/repos/spack/spack/labels/cuda",
            "name": "cuda",
            "color": "85b737",
            "default": false,
            "description": ""
        },
        {
            "id": 456144565,
            "node_id": "MDU6TGFiZWw0NTYxNDQ1NjU=",
            "url": "https://api.github.com/repos/spack/spack/labels/defaults",
            "name": "defaults",
            "color": "bfd4f2",
            "default": false,
            "description": null
        },
        {
            "id": 936777283,
            "node_id": "MDU6TGFiZWw5MzY3NzcyODM=",
            "url": "https://api.github.com/repos/spack/spack/labels/headers",
            "name": "headers",
            "color": "782caa",
            "default": false,
            "description": ""
        },
        {
            "id": 446630556,
            "node_id": "MDU6TGFiZWw0NDY2MzA1NTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/specs",
            "name": "specs",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "ax3l",
        "id": 1353258,
        "node_id": "MDQ6VXNlcjEzNTMyNTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1353258?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ax3l",
        "html_url": "https://github.com/ax3l",
        "followers_url": "https://api.github.com/users/ax3l/followers",
        "following_url": "https://api.github.com/users/ax3l/following{/other_user}",
        "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions",
        "organizations_url": "https://api.github.com/users/ax3l/orgs",
        "repos_url": "https://api.github.com/users/ax3l/repos",
        "events_url": "https://api.github.com/users/ax3l/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ax3l/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "ax3l",
            "id": 1353258,
            "node_id": "MDQ6VXNlcjEzNTMyNTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1353258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ax3l",
            "html_url": "https://github.com/ax3l",
            "followers_url": "https://api.github.com/users/ax3l/followers",
            "following_url": "https://api.github.com/users/ax3l/following{/other_user}",
            "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions",
            "organizations_url": "https://api.github.com/users/ax3l/orgs",
            "repos_url": "https://api.github.com/users/ax3l/repos",
            "events_url": "https://api.github.com/users/ax3l/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ax3l/received_events",
            "type": "User",
            "site_admin": false
        },
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        },
        {
            "login": "adamjstewart",
            "id": 12021217,
            "node_id": "MDQ6VXNlcjEyMDIxMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamjstewart",
            "html_url": "https://github.com/adamjstewart",
            "followers_url": "https://api.github.com/users/adamjstewart/followers",
            "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
            "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
            "repos_url": "https://api.github.com/users/adamjstewart/repos",
            "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-12-03T18:59:38Z",
    "updated_at": "2019-12-07T07:47:04Z",
    "closed_at": "2019-12-07T07:47:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "While trying to build *standard C++ sources (no device code)* with Spack's own `g++` wrapper from within a package's `build-env` that depends on `cuda`, C++ standard headers (e.g.: `vector`) vendored by the `cuda` SDK are found by `g++` before its own `libstdc++`, breaking any trivial compilation that involves C++ standard headers. \r\n\r\n### Steps to reproduce the issue\r\n\r\nAny package depending on `cuda` fits the purpose, I've been able to reproduce the issue with a bogus `package.py` like this:\r\n\r\n```python\r\nfrom spack import *\r\n\r\nclass Nvtest(Package):\r\n    version('0')\r\n    depends_on('cuda')\r\n```\r\n\r\nThe `test.cpp` source I'm trying to compile uses just one standard header and is as simple as possible:\r\n\r\n```cpp\r\n#include <vector>\r\n\r\nint main() {\r\n    std::vector<int> v;\r\n}\r\n```\r\n\r\nActual steps:\r\n\r\n```console\r\n$ spack install gcc@8.3.0\r\n$ spack compiler add $(spack location -i gcc@8.3.0)\r\n$ spack install cuda%gcc@8.3.0\r\n$ spack build-env nvtest%gcc@8.3.0 -- g++ test.cpp\r\nIn file included from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/stdlib.h:93,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/cstdlib:86,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/exception:81,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/typeinfo:60,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/memory:653,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/algorithm:643,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/__bit_reference:15,\r\n                 from /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4e\r\no6j6y/include/cuda/std/detail/libcxx/include/vector:274,\r\n                 from main.cpp:1:\r\n/spack/opt/spack/linux-centos7-power8le/gcc-4.8.5/gcc-8.3.0-kvs4zwy3ojuvmc43h4yf364ie2zy5gtk/include/c++/8.3.0/s\r\ntdlib.h:38:12: error: 'std::abort' has not been declared\r\n using std::abort;\r\n# lots of similar errors omitted\r\n```\r\n\r\nThe same behaviour is observed for both `gcc@9.2.0` (**not supported** by `cuda@10.2.89`) and system-shipped `gcc@4.8.5` (**supported** by `cuda@10.2.89`).\r\n\r\nI think that the issue stems from this:\r\n\r\n```console\r\n$ spack build-env nvtest%gcc@8.3.0 | grep SPACK_INCLUDE_DIRS\r\nSPACK_INCLUDE_DIRS=/spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4eo6j6y/include:/spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4eo6j6y/include/cuda/std/detail/libcxx/include\r\n```\r\n\r\nThe frontend confirms the inclusion search order:\r\n\r\n```console\r\n$ spack build-env nvtest%gcc@8.3.0 -- g++ -E -v -\r\nReading specs from /spack/opt/spack/linux-centos7-power8le/gcc-4.8.5/gcc-8.3.0-kvs4zwy3ojuvmc43h4yf364ie2zy5gtk/lib/gcc/powerpc64le-unknown-linux-gnu/8.3.0/specs\r\n#include \"...\" search starts here:\r\n#include <...> search starts here:\r\n /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4eo6j6y/include\r\n /spack/opt/spack/linux-centos7-power8le/gcc-8.3.0/cuda-10.2.89-zamew7asat3psayj22opj5xnm4eo6j6y/include/cuda/std/detail/libcxx/include\r\n /spack/opt/spack/linux-centos7-power8le/gcc-4.8.5/gcc-8.3.0-kvs4zwy3ojuvmc43h4yf364ie2zy5gtk/lib/gcc/powerpc64le-unknown-linux-gnu/8.3.0/include\r\n /usr/local/include\r\n /spack/opt/spack/linux-centos7-power8le/gcc-4.8.5/gcc-8.3.0-kvs4zwy3ojuvmc43h4yf364ie2zy5gtk/include\r\n /spack/opt/spack/linux-centos7-power8le/gcc-4.8.5/gcc-8.3.0-kvs4zwy3ojuvmc43h4yf364ie2zy5gtk/lib/gcc/powerpc64le-unknown-linux-gnu/8.3.0/include-fixed\r\n /usr/include\r\nEnd of search list.\r\n```\r\n\r\nWhile `<cuda>/include` provides SDK's own headers, `<cuda>/include/cuda/std/detail/libcxx/include` pulls in standard headers provided by a vendored implementation of the C++ standard library. The fact that a path component is called `/detail/` makes me think that it should be treated as an implementation detail (as is usually done in C++ code bases) and not explicitly injected in the inclusion search space.",
    "performed_via_github_app": null
}