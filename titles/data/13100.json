{
    "url": "https://api.github.com/repos/spack/spack/issues/13100",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/13100/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/13100/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/13100/events",
    "html_url": "https://github.com/spack/spack/pull/13100",
    "id": 504349876,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2MDIwODI0",
    "number": 13100,
    "title": "Distributed builds",
    "user": {
        "login": "tldahlgren",
        "id": 35777542,
        "node_id": "MDQ6VXNlcjM1Nzc3NTQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/35777542?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tldahlgren",
        "html_url": "https://github.com/tldahlgren",
        "followers_url": "https://api.github.com/users/tldahlgren/followers",
        "following_url": "https://api.github.com/users/tldahlgren/following{/other_user}",
        "gists_url": "https://api.github.com/users/tldahlgren/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tldahlgren/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tldahlgren/subscriptions",
        "organizations_url": "https://api.github.com/users/tldahlgren/orgs",
        "repos_url": "https://api.github.com/users/tldahlgren/repos",
        "events_url": "https://api.github.com/users/tldahlgren/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tldahlgren/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1445245539,
            "node_id": "MDU6TGFiZWwxNDQ1MjQ1NTM5",
            "url": "https://api.github.com/repos/spack/spack/labels/build",
            "name": "build",
            "color": "a83f25",
            "default": false,
            "description": "General build capability"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        },
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        },
        {
            "login": "tldahlgren",
            "id": 35777542,
            "node_id": "MDQ6VXNlcjM1Nzc3NTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/35777542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tldahlgren",
            "html_url": "https://github.com/tldahlgren",
            "followers_url": "https://api.github.com/users/tldahlgren/followers",
            "following_url": "https://api.github.com/users/tldahlgren/following{/other_user}",
            "gists_url": "https://api.github.com/users/tldahlgren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tldahlgren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tldahlgren/subscriptions",
            "organizations_url": "https://api.github.com/users/tldahlgren/orgs",
            "repos_url": "https://api.github.com/users/tldahlgren/repos",
            "events_url": "https://api.github.com/users/tldahlgren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tldahlgren/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 28,
    "created_at": "2019-10-09T00:50:51Z",
    "updated_at": "2020-02-20T19:58:30Z",
    "closed_at": "2020-02-19T08:04:24Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/13100",
        "html_url": "https://github.com/spack/spack/pull/13100",
        "diff_url": "https://github.com/spack/spack/pull/13100.diff",
        "patch_url": "https://github.com/spack/spack/pull/13100.patch"
    },
    "body": "Fixes #9394\r\nCloses #13217.\r\n\r\n## Background\r\nSpack provides the ability to enable/disable parallel builds through two options: package `parallel` and configuration `build_jobs`.  This PR changes the algorithm to allow multiple, simultaneous processes to coordinate the installation of the same spec (and specs with overlapping dependencies.).\r\n\r\nThe `parallel` (boolean) property sets the default for its package though the value can be overridden in the `install` method.\r\n\r\nSpack's current parallel builds are limited to build tools supporting `jobs` arguments (e.g., `Makefiles`).  The number of jobs actually used is calculated as`min(config:build_jobs, # cores, 16)`, which can be overridden in the package or on the command line (i.e., `spack install -j <# jobs>`).\r\n\r\nThis PR adds support for distributed (single- and multi-node) parallel builds.  The goals of this work include improving the efficiency of installing packages with many dependencies and reducing the repetition associated with concurrent installations of (dependency) packages.\r\n\r\n## Approach\r\n### File System Locks\r\nCoordination between concurrent installs of overlapping packages to a Spack instance is accomplished through bottom-up dependency DAG processing and file system locks.  The runs can be a combination of interactive and batch processes affecting the same file system.  Exclusive prefix locks are required to install a package while shared prefix locks are required to check if the package is installed.\r\n\r\nFailures are communicated through a separate exclusive prefix failure lock, for concurrent processes, combined with a persistent store, for separate, related build processes.  The resulting file contains the failing spec to facilitate manual debugging.\r\n\r\n### Priority Queue\r\nManagement of dependency builds changed from reliance on recursion to use of a priority queue where the priority of a spec is based on the number of its remaining uninstalled dependencies.  \r\n\r\nUsing a queue required a change to dependency build exception handling with the most visible issue being that the `install` method *must* install something in the prefix.  Consequently, packages can no longer get away with an install method consisting of `pass`, for example.\r\n\r\n## Caveats\r\n### Built-in Package's Provider Cache\r\nUpdate: The fix has been merged into this PR.\r\n\r\n~~This PR does *not* address contention related to the initial build of built-ins provider cache, which is performed on an as-needed basis as part of `spack install`.  Until that issue is addressed (in a separate PR), it is recommended that you ensure the cache, which can be found in `$HOME/.spack/cache`, exists before attempting `spack install` from more than one process.  The cache can be created by running `spack spec <spec>` from a single process before starting the installs.~~\r\n\r\n### Concretizing Environments\r\nUpdate: The fix, from #14621 , has been merged into this PR as of commit `032745b`.\r\n\r\n~~Distributed builds in environments encounter ``No such file or directory: '/<env>/.spack.lock.tmp'\\n==> Installing environment /<env>`` errors when attempting to run `spack install [-j<#>] &` in parallel.  This has been tracked down to `Environment.write()` not being thread-safe.~~\r\n\r\n### Requested Spec Failures\r\nThere appears to be a failure notification timing issue between processes should the requested spec fail to install.  This results in each process taking a turn at attempting to install the final spec.\r\n\r\n## TODO\r\n- [x] Adjust package lock timeout to correspond to value used in the demo\r\n- [x] Adjust database lock timeout to reduce contention on startup of concurrent `spack install <spec>` calls\r\n- [x] Replace (test) package's `install: pass` methods with file creation since post-install `sanity_check_prefix` will otherwise error out with `Install failed .. Nothing was installed!`\r\n- [x] Resolve remaining existing test failures\r\n- [x] Respond to alalazo's initial feedback\r\n- [x] Remove `bin/demo-locks.py`\r\n- [x] Add new tests to address new coverage issues\r\n- [x] Replace built-in package's `def install(..): pass` to \"install\" something (i.e., only `apple-libunwind`)\r\n- [x] Address tgamblin's feedback\r\n- [x] Increase code coverage\r\n~~- [ ] Update install docs~~",
    "performed_via_github_app": null
}