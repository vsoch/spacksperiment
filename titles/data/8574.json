{
    "url": "https://api.github.com/repos/spack/spack/issues/8574",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/8574/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/8574/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/8574/events",
    "html_url": "https://github.com/spack/spack/pull/8574",
    "id": 335759020,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3Mzc3NTA1",
    "number": 8574,
    "title": "add CombinatorialSpecSet class for taking cross-products of Specs.",
    "user": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446620495,
            "node_id": "MDU6TGFiZWw0NDY2MjA0OTU=",
            "url": "https://api.github.com/repos/spack/spack/labels/WIP",
            "name": "WIP",
            "color": "ededed",
            "default": false,
            "description": null
        },
        {
            "id": 560616785,
            "node_id": "MDU6TGFiZWw1NjA2MTY3ODU=",
            "url": "https://api.github.com/repos/spack/spack/labels/don't-merge-yet",
            "name": "don't-merge-yet",
            "color": "d93f0b",
            "default": false,
            "description": null
        },
        {
            "id": 519278357,
            "node_id": "MDU6TGFiZWw1MTkyNzgzNTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/releases",
            "name": "releases",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 456341797,
            "node_id": "MDU6TGFiZWw0NTYzNDE3OTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/tests",
            "name": "tests",
            "color": "b60205",
            "default": false,
            "description": "General test capability(ies)"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-06-26T10:39:34Z",
    "updated_at": "2019-06-30T00:11:04Z",
    "closed_at": "2019-06-30T00:02:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/8574",
        "html_url": "https://github.com/spack/spack/pull/8574",
        "diff_url": "https://github.com/spack/spack/pull/8574.diff",
        "patch_url": "https://github.com/spack/spack/pull/8574.patch"
    },
    "body": "@scottwittenburg: this is the class for specifying products of specs that I was mentioning.  There are some docs in here; some parts need a lot of refactoring, but other parts describe the file format and what it does.  \r\n\r\nTake a look at those and see if you can work this into your PR to specify what releases should look like.  currently, the format has two ways to specify the same thing.  You can use `packages` and `compilers` sections, or you can just have lists of `spec`s.  I think the latter should be sufficient so I'm tempted to take out the packages/compilers sections. The `include` and `exclude` lines would still be useful (for including/excluding by matching).\r\n\r\nThe schema format should probably should be renamed to something other than `test-suite` as it's useful for both releases and for tests.  If you can come up with a generic name that would be great.\r\n\r\nI think the way to start with this would be to have a YAML file that describes what is to be released, so that you can get an initial list of specs to check against in #8451.\r\n\r\n@zackgalbreath: there are some docs in here on how to use `spack install --log-format` that should probably be separated out, as well.  Maybe we could have a separate doc PR on CDash support?\r\n\r\n- add `CombinatorialSpecSet` in `spack.util.spec_set` module.\r\n  - class is iterable and encaspulated YAML parsing and validation.\r\n\r\n- Add a schema format for test-suites (which you can instantiate `CombinatorialSpecSet`s from)\r\n\r\n- YAML format supports:\r\n  - test-suite format has a `matrix` section, which can contain multiple lists of specs, generated different ways. Including:\r\n    - specs: a raw list of specs.\r\n    - packages: a list of package names and versions\r\n    - compilers: a list of compiler names and versions\r\n\r\n  - All of the elements of `matrix` are dimensions for the build matrix;\r\n    we take the cartesian product of these lists of specs to generate a\r\n    build matrix.  This means we can add things like [^mpich, ^openmpi]\r\n    to get builds with different MPI versions.  It also means we can\r\n    multiply the build matrix out with lots of different parameters.\r\n\r\n- Bug fixes:\r\n  - [x] fix bug with constraining an anonymous spec by name, add a test.",
    "performed_via_github_app": null
}