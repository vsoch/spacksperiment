{
    "url": "https://api.github.com/repos/spack/spack/issues/2898",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2898/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2898/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2898/events",
    "html_url": "https://github.com/spack/spack/pull/2898",
    "id": 202345413,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAyNTk5NDY3",
    "number": 2898,
    "title": "[WIP] Allow spack create to handle already downloaded tarballs",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446620495,
            "node_id": "MDU6TGFiZWw0NDY2MjA0OTU=",
            "url": "https://api.github.com/repos/spack/spack/labels/WIP",
            "name": "WIP",
            "color": "ededed",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-21T22:56:57Z",
    "updated_at": "2019-10-20T01:41:45Z",
    "closed_at": "2018-08-18T18:55:49Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/2898",
        "html_url": "https://github.com/spack/spack/pull/2898",
        "diff_url": "https://github.com/spack/spack/pull/2898.diff",
        "patch_url": "https://github.com/spack/spack/pull/2898.patch"
    },
    "body": "Fixes #2545 \r\n\r\nOk, here's the situation. Let's say you want to create a new package for your software, but it is licensed and cannot be fetched from a URL. Previous to #2707, you were SOL and had to create a package file manually. With #2707, you could at least create a generic package, but you would still have to specify the name, checksum the file, and add versions manually. With this PR, tarballs in your Downloads folder become equivalent to tarballs from the internet.\r\n\r\nFor the sake of allowing others to test this PR, let's take a non-licensed package like `py-nose` (which happens to be in my downloads folder). With `nose-1.3.7.tar.gz` in your current directory, simply run:\r\n```\r\n$ spack create -f nose-1.3.7.tar.gz\r\n```\r\n`spack create` is now smart enough to detect that this file is already downloaded and won't try to fetch it again. It will detect the name and version, notice that it is a `PythonPackage`, rename it from `nose` to `py-nose`, and create the following template (comments removed):\r\n```python\r\nfrom spack import *                                                             \r\nimport os                                                                       \r\n                                                                                \r\n                                                                                \r\nclass PyNose(PythonPackage):                                                    \r\n    \"\"\"FIXME: Put a proper description of your package here.\"\"\"                 \r\n                                                                                \r\n    # FIXME: Add a proper url for your package's homepage here.                 \r\n    homepage = \"http://www.example.com\"                                         \r\n    url      = \"file://{0}/nose-1.3.7.tar.gz\".format(os.getcwd())               \r\n                                                                                \r\n    version('1.3.7', '4d3ad0ff07b61373d2cefc89c5d0b20b')\r\n```\r\nThis template is similar to other licensed software in Spack, where Spack will first check to see if the tarball can be found in a mirror, and if not will search the current directory.\r\n\r\nTODO: There are a couple of additional features I want to add:\r\n\r\n1. If the tarball isn't in your current directory and you use `~/Downloads/nose-1.3.7.tar.gz` instead of `nose-1.3.7.tar.gz`, I think the URL will be messed up. Should be a simple fix.\r\n\r\n2. What if you have multiple versions of tarballs in the same folder? Much as `spack create` spiders the web searching for additional versions to checksum, `spack create` should do the same thing for directories.\r\n\r\n3. If I now run `spack checksum` on this package, it should search in the current directory for new versions. This is probably the same fix as 2.\r\n\r\nNow that I got most of this working, I'm starting to wonder if it would have just been easier to prepend `file://` to the abspath of the file and pretended it was a normal URL. Might have to go back and try that out...",
    "performed_via_github_app": null
}