{
    "url": "https://api.github.com/repos/spack/spack/issues/16978",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/16978/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/16978/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/16978/events",
    "html_url": "https://github.com/spack/spack/issues/16978",
    "id": 632068741,
    "node_id": "MDU6SXNzdWU2MzIwNjg3NDE=",
    "number": 16978,
    "title": "Installation issue: intel-mpi module sets FI_PROVIDER_PATH incorrectly",
    "user": {
        "login": "anderbubble",
        "id": 350294,
        "node_id": "MDQ6VXNlcjM1MDI5NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/350294?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anderbubble",
        "html_url": "https://github.com/anderbubble",
        "followers_url": "https://api.github.com/users/anderbubble/followers",
        "following_url": "https://api.github.com/users/anderbubble/following{/other_user}",
        "gists_url": "https://api.github.com/users/anderbubble/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/anderbubble/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anderbubble/subscriptions",
        "organizations_url": "https://api.github.com/users/anderbubble/orgs",
        "repos_url": "https://api.github.com/users/anderbubble/repos",
        "events_url": "https://api.github.com/users/anderbubble/events{/privacy}",
        "received_events_url": "https://api.github.com/users/anderbubble/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446616547,
            "node_id": "MDU6TGFiZWw0NDY2MTY1NDc=",
            "url": "https://api.github.com/repos/spack/spack/labels/build-error",
            "name": "build-error",
            "color": "ff3300",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T23:56:07Z",
    "updated_at": "2020-06-05T23:59:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The lmod modulefile generated by intel-mpi treats `FI_PROVIDER_PATH` as a `:`-separated list of paths; but it appears that this is not correct. When loading intel-mpi in hierarchy through an intel module, we end up with\r\n\r\n```\r\nFI_PROVIDER_PATH=/curc/sw/opt/spack/linux-rhel7-haswell/intel-19.0.5/intel-mpi-2019.7.217-426osfetyjjm3dqo555b3iu76tyziilb/compilers_and_libraries_2020.1.217/linux/mpi/intel64/libfabric/lib/prov:/curc/sw/opt/spack/linux-rhel7-x86_64/intel-0.0.0/intel-19.0.5-zyjyag74dxnxmdjsjqkgn3jwvuwty7j6/compilers_and_libraries_2019.5.281/linux/mpi/intel64/libfabric/lib/prov\r\n```\r\n\r\nBut this causes an error at runtime. e.g.,\r\n\r\n```\r\nCaught signal 11 (Segmentation fault: address not mapped to object at address 0x1a7728d4)\r\n==== backtrace ====\r\n    0  /usr/lib64/libucs.so.0(+0x174f0) [0x2aed19c4b4f0]\r\n    1  /usr/lib64/libucs.so.0(+0x176a2) [0x2aed19c4b6a2]\r\n    2  /lib64/libc.so.6(+0x147131) [0x2aed15dd3131]\r\n    3  /curc/sw/opt/spack/linux-rhel7-haswell/intel-19.0.5/intel-mpi-2019.6.166-eldtiy4vx4iqm6ayhse3yrbcmb5iizhl/com\r\npilers_and_libraries_2020.0.166/linux/mpi/intel64/libfabric/lib/libfabric.so.1(fi_param_get+0x31e) [0x2aed1606780e]\r\n===================\r\n```\r\n\r\nBut if I set the var to the correct value for intel-mpi, it works:\r\n\r\n```\r\nFI_PROVIDER_PATH=/curc/sw/opt/spack/linux-rhel7-haswell/intel-19.0.5/intel-mpi-2019.7.217-426osfetyjjm3dqo555b3iu76tyziilb/compilers_and_libraries_2020.1.217/linux/mpi/intel64/libfabric/lib/prov\r\n```\r\n\r\nNotably, it fails the same no matter what order these two paths are in; but if I completely unset `FI_PROVIDER_PATH` I get a different error.\r\n\r\n```\r\nMPIDI_OFI_mpi_init_hook(986): OFI addrinfo() failed (ofi_init.c:986:MPIDI_OFI_mpi_init_hook:No data available)\r\n```\r\n\r\nSo this implies to me that `:`-separation is meaningful, but not doing what we expect, i.e., using the lib from the first path in the list.\r\n\r\nI traced this behavior in module generation to this location:\r\n\r\nhttps://github.com/spack/spack/blob/76abf358138927be3ebeea2bead9fd1ccd087f41/lib/spack/spack/util/environment.py#L663-L664\r\n\r\nHere, `from_environment_diff` assumes that if a variable has `PATH` in its name that the value should be prepended and `:`-separated. As such, I don't know the best way to control this behavior differently, since I clearly don't just want to special-case this one variable.\r\n\r\nComments / suggestions welcome.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\n$ spack install intel-mpi%intel\r\n$ spack module lmod refresh --yes-to-all\r\n$ module load intel intel-mpi\r\n$ mpicc hello-world.c -o hello-world.bin\r\n$ mpirun hello-world.bin\r\n```\r\n\r\n### Information on your system\r\n\r\n```\r\n[develop] [rcops@shas0137 ~]$ spack debug report\r\n* **Spack:** 0.14.2-1280-3896a40\r\n* **Python:** 3.6.8\r\n* **Platform:** linux-rhel7-haswell\r\n```\r\n\r\n### General information\r\n\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have run `spack maintainers <name-of-the-package>` and @mentioned any maintainers\r\n- [ ] ~I have uploaded the build log and environment files~ (n/a)\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n",
    "performed_via_github_app": null
}