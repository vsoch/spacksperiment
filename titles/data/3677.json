{
    "url": "https://api.github.com/repos/spack/spack/issues/3677",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3677/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3677/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3677/events",
    "html_url": "https://github.com/spack/spack/issues/3677",
    "id": 219051016,
    "node_id": "MDU6SXNzdWUyMTkwNTEwMTY=",
    "number": 3677,
    "title": "Spack Database",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446625544,
            "node_id": "MDU6TGFiZWw0NDY2MjU1NDQ=",
            "url": "https://api.github.com/repos/spack/spack/labels/documentation",
            "name": "documentation",
            "color": "0d5977",
            "default": true,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-03T20:24:41Z",
    "updated_at": "2017-04-03T20:24:41Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Here is info from @tgamblin on the Spack database.\r\n\r\nOk here is a hastily written summary of the DB.\r\n\r\nIn `config.yaml`, there is this setting:\r\n\r\ninstall_tree: $spack/opt/spack\r\n\r\nThat tells Spack where all installs are rooted.  Installs are, by default, stored in their own $prefix.  Each $prefix directory looks like this:\r\n\r\n```\r\n$spack/opt/spack/<platform>-<os>-<target>/<compiler>-<compilerversion>/<pkg>-<version>-<hash>\r\n```\r\n\r\nAll that is really necessary to make install prefixes unique is the hash; the rest is to make things easier to debug.  In each $prefix/.spack, we store a spec.yaml file, which gives you the full spec of how things were built.  The DB is, to some extent, a cache of the information inside $prefix/.spack, though there is currently some stuff we ONLY keep in the DB.\r\n\r\nThe DB is just a list of records, keyed by hash, that look like this:\r\n\r\n```\r\ndatabase: {\r\nhash: {\r\nspec,\r\n# Spec from spec.yaml\r\npath,\r\n# path where this spec was installed\r\ninstalled,\r\n# whether this spec is actually installed anymore\r\nref_count,\r\n# number of packages that still need this one\r\nexplicit,\r\n# whether the user asked for the package explicitly or it was a dep of something\r\n},\r\n...\r\n}\r\n```\r\n\r\nThat lives in $spack/opt/spack/.spack-db/index.json.  There is a file called `lock` next to it that we use for synchronizing access (fcntl readers-writer semantics), and a file called prefix_lock which we use for locking all the prefixes.  Note that there is still a readers-writer lock per prefix; we use byte-range locking to get it. If you want the details on how that works, see here:\r\nhttps://github.com/harlowja/fasteners/issues/26#issuecomment-253543912\r\n\r\nEach $prefix/spec.yaml contains redundant information in that it contains information on the root and all dependencies (and so do its dependencies).  This is useful because we still know about missing dependencies if you blow away something that was needed by something else.  The DB is really designed to be a fast cache of the install tree so that we don\u2019t have to spider these spec.yaml files all the time. In the DB, there is only one record per hash.  In memory, that is stored as a proper DAG, and on disk, the spec field of each json record contains the hashes of its dependencies, so we can reconstruct the DAG when we read the DB in.\r\n\r\nThe `installed` field is there so that Spack can remember whether a dependency was installed or not. If Spack sees that an install prefix has been blown away, it will mark it uninstalled in the DB.  This is why rm -rf $prefix; spack reindex works.  The ref_count is also tracked when this happens.  We only remove records from the DB when they are uninstalled AND unneeded. So if you `uninstall -f` some dependency, Spack still knows about it if something else needs it (because it is in *that* thing\u2019s spec.yaml).\r\n\r\nCurrently we don\u2019t store the external packages in the DB, but Massimiliano has a PR for that which is soon to be merged:\r\n\r\nhttps://github.com/LLNL/spack/pull/1167\r\n\r\nWe use json because it is way faster than YAML to read in.  See here:\r\nhttps://github.com/LLNL/spack/pull/2189\r\n\r\nAfter Massimiliano\u2019s PR, the only thing that won\u2019t be stored redundantly is the \u201cexplicit\u201d field.  That records whether you `spack install`\u2019d something or whether it was dragged in as a dependency.  We preserve it during reindex, in that Spack reads it in from the old DB while reindexing, so you\u2019ll only really lose it if you completely blow away your index.yaml file.  But we cannot regenerate it from scratch.\r\n\r\nThe concept of `explicit` is a poor man\u2019s version of \u201csome environment and/or module needs this package\u201d, so I expect we will be fleshing that out and probably storing something like it per-environment when we flesh out the spack environments work.\r\n\r\nIs that helpful?\r\n\r\n-Todd",
    "performed_via_github_app": null
}