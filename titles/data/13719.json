{
    "url": "https://api.github.com/repos/spack/spack/issues/13719",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/13719/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/13719/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/13719/events",
    "html_url": "https://github.com/spack/spack/issues/13719",
    "id": 522320195,
    "node_id": "MDU6SXNzdWU1MjIzMjAxOTU=",
    "number": 13719,
    "title": "Compound versions for stand-alone compilers enabling reproducibility",
    "user": {
        "login": "fsimonis",
        "id": 13552216,
        "node_id": "MDQ6VXNlcjEzNTUyMjE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/13552216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fsimonis",
        "html_url": "https://github.com/fsimonis",
        "followers_url": "https://api.github.com/users/fsimonis/followers",
        "following_url": "https://api.github.com/users/fsimonis/following{/other_user}",
        "gists_url": "https://api.github.com/users/fsimonis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fsimonis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fsimonis/subscriptions",
        "organizations_url": "https://api.github.com/users/fsimonis/orgs",
        "repos_url": "https://api.github.com/users/fsimonis/repos",
        "events_url": "https://api.github.com/users/fsimonis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fsimonis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-11-13T16:08:13Z",
    "updated_at": "2019-11-15T14:15:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Compound versions for stand-alone compilers with their used standard library provider to enable reproducible spack builds.\r\n\r\n### Rationale\r\n\r\nSome compilers such as gcc or clang ship with their own implementations of C/C++ standard libraries. Other compilers such as intel or pgi, however use a GNU library present on the system.\r\n\r\nThis has implications on the reproducibility of software compiled with spack, as the version of the compiler does not identify the version of the used standard library.\r\n\r\nThus, building some software using `%gcc@5` will result in a consistent result among environments.\r\nThe result of building with `%intel@15` on the other hand depends on the version of `gcc` detected at runtime, which varies from system to system. Consequently, this leads to non-reproducible builds using spack.\r\n\r\nFurthermore, the version of a stand-alone compiler may give a guarantee on the compliance with respect to language standards, not however on the compliance of the used standard library.\r\n\r\nA common pitfall on clusters is the combination of a fairly new intel compiler and gcc with a default version of 4.8. In this case, both compilers are fully C++11 feature-compliant. The gcc standard library, however is not. This is difficult to debug as most build system only provide information about the compiler and its version.\r\n\r\n### Description\r\n\r\nA possible solution is a compound version for stand-alone compilers consisting of:\r\n1. The version of the compiler\r\n2. The version of the used standard library provider\r\n\r\nPossible format `%intel@15^gcc@9`\r\n\r\nIntel provides [options](https://software.intel.com/en-us/cpp-compiler-developer-guide-and-reference-gxx-name) and [environment variables](https://software.intel.com/en-us/cpp-compiler-developer-guide-and-reference-supported-environment-variables) to steer the gcc detection.\r\nThese could be used to direct intel to the suitable binary of the local install or a spack installation.",
    "performed_via_github_app": null
}