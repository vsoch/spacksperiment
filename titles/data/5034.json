{
    "url": "https://api.github.com/repos/spack/spack/issues/5034",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5034/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5034/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5034/events",
    "html_url": "https://github.com/spack/spack/issues/5034",
    "id": 248997576,
    "node_id": "MDU6SXNzdWUyNDg5OTc1NzY=",
    "number": 5034,
    "title": "Compiling libraries for each available compiler",
    "user": {
        "login": "samfux84",
        "id": 11944875,
        "node_id": "MDQ6VXNlcjExOTQ0ODc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/11944875?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/samfux84",
        "html_url": "https://github.com/samfux84",
        "followers_url": "https://api.github.com/users/samfux84/followers",
        "following_url": "https://api.github.com/users/samfux84/following{/other_user}",
        "gists_url": "https://api.github.com/users/samfux84/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/samfux84/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/samfux84/subscriptions",
        "organizations_url": "https://api.github.com/users/samfux84/orgs",
        "repos_url": "https://api.github.com/users/samfux84/repos",
        "events_url": "https://api.github.com/users/samfux84/events{/privacy}",
        "received_events_url": "https://api.github.com/users/samfux84/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446623646,
            "node_id": "MDU6TGFiZWw0NDY2MjM2NDY=",
            "url": "https://api.github.com/repos/spack/spack/labels/concretization",
            "name": "concretization",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 455855856,
            "node_id": "MDU6TGFiZWw0NTU4NTU4NTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/external-packages",
            "name": "external-packages",
            "color": "c5def5",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-08-09T11:17:31Z",
    "updated_at": "2019-12-09T14:24:23Z",
    "closed_at": "2019-12-09T14:24:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In our pre-Spack setup, we used to compile libraries like boost, fftw, metis, openblas etc. with multiple compilers (if the library has mpi support, then we would even compile all possible combinations compiler/mpi).\r\n\r\nFor instance:\r\n\r\n```\r\n[sfux@lo-login-02 x86_64]$ pwd\r\n/cluster/apps/boost/1.59.0/x86_64\r\n[sfux@lo-login-02 x86_64]$ ls\r\ngcc_4.4.7  gcc_4.8.2  gcc_4.9.2  gcc_5.2.0  intel_14.0.1  intel_15.0.0\r\n[sfux@lo-login-02 x86_64]$ cd gcc_4.8.2/\r\n[sfux@lo-login-02 gcc_4.8.2]$ ls\r\nmvapich2_2.1  openmpi_1.10.0  openmpi_1.6.5  serial\r\n```\r\n\r\nBut all of these builds where sharing the system libraries (autoconf, automake, m4, pkg-config etc.) which are not directly part of the compiler.\r\n\r\nWith my current spack setup, I would like to go for a similar setup, but it seems that there is no way of sharing \"system\" libraries. I compiled all \"system\" libraries with GCC 4.8.5 and if now I would like to compile for instance openmpi with GCC 5.4.0 (which was installed through spack) it seems that I need to recompile dependencies like m4, pkg-config, util-macros etc. also with GCC 5.4.0:\r\n\r\n```\r\nConcretized\r\n--------------------------------\r\nopenmpi@2.1.0%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" +cuda fabrics=verbs +java schedulers= +sqlite3+thread_multiple+vt arch=linux-centos7-x86_64 \r\n    ^hwloc@1.11.6%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" +cuda+libxml2+pci arch=linux-centos7-x86_64 \r\n        ^cuda@8.0.61%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n        ^libpciaccess@0.13.4%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n            ^libtool@2.4.6%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n                ^m4@1.4.18%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" +sigsegv arch=linux-centos7-x86_64 \r\n                    ^libsigsegv@2.11%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n            ^pkg-config@0.29.2%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" +internal_glib arch=linux-centos7-x86_64 \r\n            ^util-macros@1.19.1%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n        ^libxml2@2.9.4%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" ~python arch=linux-centos7-x86_64 \r\n            ^xz@5.2.3%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64 \r\n            ^zlib@1.2.11%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" +pic+shared arch=linux-centos7-x86_64 \r\n    ^jdk@8u92%gcc@5.4.0 cflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cppflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\" cxxflags=\"-ftree-vectorize -O2 -march=core-avx2 -fPIC -mavx2\"  arch=linux-centos7-x86_64\r\n```\r\n\r\nI see a need to recompile libraries with all compilers, but I think recompiling m4 or pkg-config with all compilers is a bit of an overkill.\r\n\r\nHow do you handle these cases ? \r\n\r\nAre there any best practices ?\r\n",
    "performed_via_github_app": null
}