{
    "url": "https://api.github.com/repos/spack/spack/issues/4005",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4005/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4005/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4005/events",
    "html_url": "https://github.com/spack/spack/issues/4005",
    "id": 224565817,
    "node_id": "MDU6SXNzdWUyMjQ1NjU4MTc=",
    "number": 4005,
    "title": "spack install broken on python3",
    "user": {
        "login": "junghans",
        "id": 439483,
        "node_id": "MDQ6VXNlcjQzOTQ4Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/439483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junghans",
        "html_url": "https://github.com/junghans",
        "followers_url": "https://api.github.com/users/junghans/followers",
        "following_url": "https://api.github.com/users/junghans/following{/other_user}",
        "gists_url": "https://api.github.com/users/junghans/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/junghans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/junghans/subscriptions",
        "organizations_url": "https://api.github.com/users/junghans/orgs",
        "repos_url": "https://api.github.com/users/junghans/repos",
        "events_url": "https://api.github.com/users/junghans/events{/privacy}",
        "received_events_url": "https://api.github.com/users/junghans/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908755,
            "node_id": "MDU6TGFiZWw3MzkwODc1NQ==",
            "url": "https://api.github.com/repos/spack/spack/labels/duplicate",
            "name": "duplicate",
            "color": "cccccc",
            "default": true,
            "description": null
        },
        {
            "id": 574328447,
            "node_id": "MDU6TGFiZWw1NzQzMjg0NDc=",
            "url": "https://api.github.com/repos/spack/spack/labels/python3",
            "name": "python3",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-26T18:53:44Z",
    "updated_at": "2017-04-27T14:35:04Z",
    "closed_at": "2017-04-27T14:35:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Using 1e18ace6472c94893cc567ca757032269e02460f and python3 I still get:\r\n```\r\n$ spack install pax-utils\r\n==> Installing pax-utils\r\n==> Fetching https://dev.gentoo.org/~vapier/dist/pax-utils-1.2.2.tar.xz\r\n######################################################################## 100.0%\r\n==> Staging archive: /Users/junghans/spack/var/spack/stage/pax-utils-1.2.2-xiaxjymvkqyzqrlkwwxr33nggcitgidv/pax-utils-1.2.2.tar.xz\r\n==> Created stage in /Users/junghans/spack/var/spack/stage/pax-utils-1.2.2-xiaxjymvkqyzqrlkwwxr33nggcitgidv\r\n==> Ran patch() for pax-utils\r\n==> Building pax-utils [AutotoolsPackage]\r\n==> Executing phase : 'autoreconf'\r\n==> Executing phase : 'configure'\r\n==> Executing phase : 'build'\r\n==> Executing phase : 'install'\r\n==> Error: UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf8 in position 40: invalid start byte\r\n/Users/junghans/spack/lib/spack/spack/package.py:1291, in build_process:\r\n     1219         def build_process(input_stream):\r\n     1220             \"\"\"Forked for each build. Has its own process and python\r\n     1221                module space set up by build_environment.fork().\"\"\"\r\n     1222\r\n     1223             # We are in the child process. This means that our sys.stdin is\r\n     1224             # equal to open(os.devnull). Python did this to prevent our process\r\n     1225             # and the parent process from possible simultaneous reading from\r\n     1226             # the original standard input. But we assume that the parent\r\n     1227             # process is not going to read from it till we are done here,\r\n     1228             # otherwise it should not have passed us the copy of the stream.\r\n     1229             # Thus, we are free to work with the the copy (input_stream)\r\n     1230             # however we want. For example, we might want to call functions\r\n     1231             # (e.g. input()) that implicitly read from whatever stream is\r\n     1232             # assigned to sys.stdin. Since we want them to work with the\r\n     1233             # original input stream, we are making the following assignment:\r\n     1234             sys.stdin = input_stream\r\n     1235\r\n     1236             start_time = time.time()\r\n     1237             if not fake:\r\n     1238                 if not skip_patch:\r\n     1239                     self.do_patch()\r\n     1240                 else:\r\n     1241                     self.do_stage()\r\n     1242\r\n     1243             tty.msg(\r\n     1244                 'Building {0} [{1}]'.format(self.name, self.build_system_class)\r\n     1245             )\r\n     1246\r\n     1247             self.stage.keep = keep_stage\r\n     1248             with self._stage_and_write_lock():\r\n     1249                 # Run the pre-install hook in the child process after\r\n     1250                 # the directory is created.\r\n     1251                 spack.hooks.pre_install(self.spec)\r\n     1252                 if fake:\r\n     1253                     self.do_fake_install()\r\n     1254                 else:\r\n     1255                     # Do the real install in the source directory.\r\n     1256                     self.stage.chdir_to_source()\r\n     1257\r\n     1258                     # Save the build environment in a file before building.\r\n     1259                     env_path = join_path(os.getcwd(), 'spack-build.env')\r\n     1260\r\n     1261                     # Redirect I/O to a build log (and optionally to\r\n     1262                     # the terminal)\r\n     1263                     log_path = join_path(os.getcwd(), 'spack-build.out')\r\n     1264\r\n     1265                     # FIXME : refactor this assignment\r\n     1266                     self.log_path = log_path\r\n     1267                     self.env_path = env_path\r\n     1268                     dump_environment(env_path)\r\n     1269\r\n     1270                     # Spawn a daemon that reads from a pipe and redirects\r\n     1271                     # everything to log_path\r\n     1272                     redirection_context = log_output(\r\n     1273                         log_path,\r\n     1274                         echo=verbose,\r\n     1275                         force_color=sys.stdout.isatty(),\r\n     1276                         debug=True,\r\n     1277                         input_stream=input_stream\r\n     1278                     )\r\n     1279                     with redirection_context as log_redirection:\r\n     1280                         for phase_name, phase in zip(\r\n     1281                                 self.phases, self._InstallPhase_phases):\r\n     1282                             tty.msg(\r\n     1283                                 'Executing phase : \\'{0}\\''.format(phase_name)\r\n     1284                             )\r\n     1285                             # Redirect stdout and stderr to daemon pipe\r\n     1286                             with log_redirection:\r\n     1287                                 getattr(self, phase)(\r\n     1288                                     self.spec, self.prefix)\r\n     1289                     self.log()\r\n     1290                 # Run post install hooks before build stage is removed.\r\n  >> 1291                 spack.hooks.post_install(self.spec)\r\n     1292\r\n     1293             # Stop timer.\r\n     1294             self._total_time = time.time() - start_time\r\n     1295             build_time = self._total_time - self._fetch_time\r\n     1296\r\n     1297             tty.msg(\"Successfully installed %s\" % self.name,\r\n     1298                     \"Fetch: %s.  Build: %s.  Total: %s.\" %\r\n     1299                     (_hms(self._fetch_time), _hms(build_time),\r\n     1300                      _hms(self._total_time)))\r\n     1301             print_pkg(self.prefix)\r\n\r\nSee build log for details:\r\n  /tmp/junghans/spack-stage/spack-stage-vsdhukt3/pax-utils-1.2.2/spack-build.out\r\n```",
    "performed_via_github_app": null
}