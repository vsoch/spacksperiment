{
    "url": "https://api.github.com/repos/spack/spack/issues/2308",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2308/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2308/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2308/events",
    "html_url": "https://github.com/spack/spack/pull/2308",
    "id": 188724106,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTMzMDYwODI=",
    "number": 2308,
    "title": "install: fixed choices for `--only` (removed the default)",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 471995122,
            "node_id": "MDU6TGFiZWw0NzE5OTUxMjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/commands",
            "name": "commands",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-11T09:56:29Z",
    "updated_at": "2016-11-13T11:45:29Z",
    "closed_at": "2016-11-13T11:45:29Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/2308",
        "html_url": "https://github.com/spack/spack/pull/2308",
        "diff_url": "https://github.com/spack/spack/pull/2308.diff",
        "patch_url": "https://github.com/spack/spack/pull/2308.patch"
    },
    "body": "The value for the option is checked only if given, so we can set `package,dependencies` as a default and limit the choices to either `package` or `dependencies` if the option is given explicitly. The help will look like:\r\n```console\r\n$ spack install --help\r\nusage: spack install [-h] [--only {package,dependencies}] [-j JOBS]\r\n                     [--keep-prefix] [--keep-stage] [-n] [-v] [--fake]\r\n                     [--clean | --dirty] [--run-tests] [--log-format {junit}]\r\n                     [--log-file LOG_FILE]\r\n                     ...\r\n\r\npositional arguments:\r\n  package               spec of the package to install\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --only {package,dependencies}\r\n                        Select the mode of installation. The default is to\r\n                        install the package along with all its dependencies.\r\n                        Alternatively one can decide to install only the\r\n                        package or only the dependencies.\r\n  -j JOBS, --jobs JOBS  Explicitly set number of make jobs. Default is #cpus.\r\n  --keep-prefix         Don't remove the install prefix if installation fails.\r\n  --keep-stage          Don't remove the build stage if installation succeeds.\r\n  -n, --no-checksum     Do not check packages against checksum\r\n  -v, --verbose         Display verbose build output while installing.\r\n  --fake                Fake install. Just remove prefix and create a fake\r\n                        file.\r\n  --clean               Clean environment before installing package.\r\n  --dirty               Do NOT clean environment before installing.\r\n  --run-tests           Run package level tests during installation.\r\n  --log-format {junit}  Format to be used for log files.\r\n  --log-file LOG_FILE   Filename for the log file. If not passed a default\r\n                        will be used.\r\n```\r\nfixes #2303 ",
    "performed_via_github_app": null
}