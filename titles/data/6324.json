{
    "url": "https://api.github.com/repos/spack/spack/issues/6324",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/6324/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/6324/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/6324/events",
    "html_url": "https://github.com/spack/spack/issues/6324",
    "id": 274146202,
    "node_id": "MDU6SXNzdWUyNzQxNDYyMDI=",
    "number": 6324,
    "title": "Higher Dependency A if Dependency B at Version",
    "user": {
        "login": "ax3l",
        "id": 1353258,
        "node_id": "MDQ6VXNlcjEzNTMyNTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1353258?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ax3l",
        "html_url": "https://github.com/ax3l",
        "followers_url": "https://api.github.com/users/ax3l/followers",
        "following_url": "https://api.github.com/users/ax3l/following{/other_user}",
        "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions",
        "organizations_url": "https://api.github.com/users/ax3l/orgs",
        "repos_url": "https://api.github.com/users/ax3l/repos",
        "events_url": "https://api.github.com/users/ax3l/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ax3l/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1893105003,
            "node_id": "MDU6TGFiZWwxODkzMTA1MDAz",
            "url": "https://api.github.com/repos/spack/spack/labels/concretizer-use-case",
            "name": "concretizer-use-case",
            "color": "1d76db",
            "default": false,
            "description": "interesting dependency hierarchy that would challenge the current concretizer"
        },
        {
            "id": 446630669,
            "node_id": "MDU6TGFiZWw0NDY2MzA2Njk=",
            "url": "https://api.github.com/repos/spack/spack/labels/dependencies",
            "name": "dependencies",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 73908758,
            "node_id": "MDU6TGFiZWw3MzkwODc1OA==",
            "url": "https://api.github.com/repos/spack/spack/labels/question",
            "name": "question",
            "color": "cc317c",
            "default": true,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-11-15T12:53:54Z",
    "updated_at": "2021-03-19T22:58:12Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "In C++ header-only libraries (#2378) one often combines two libraries that do not have a common dependency. E.g. a template metaprogramming library such as `Boost::MPL` can be used inside CUDA kernels, but boost has no dependency on CUDA.\r\n\r\nUnfortunately, there can still be downstream constrains, e.g. since headers use new or unsupported C++ keywords etc. that are not yet supported by the cuda compiler and vice versa.\r\n\r\nIs there a way to express in a package a constrain that says:\r\n\r\n    I depend on library A and B.\r\n    A needs a different version if B is used in version X.\r\n\r\n?\r\n\r\nA package could look like this:\r\n```python\r\n    depends_on(\r\n        'cuda@7.0:',\r\n        type='link'\r\n    )\r\n\r\n    depends_on(\r\n        'boost@1.56.0:',\r\n        type='link'\r\n    )\r\n    depends_on(\r\n        'boost@1.65.1:',\r\n        type='link',\r\n        when='^cuda@9:'  # this is not valid syntax yet but I would like to express that\r\n                         # btw: it is accepted syntax right now, it just does not work as expected\r\n    )\r\n```\r\n\r\nDo you have any idea how we can express such constrains?",
    "performed_via_github_app": null
}