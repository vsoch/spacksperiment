{
    "url": "https://api.github.com/repos/spack/spack/issues/11620",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11620/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11620/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11620/events",
    "html_url": "https://github.com/spack/spack/issues/11620",
    "id": 452120045,
    "node_id": "MDU6SXNzdWU0NTIxMjAwNDU=",
    "number": 11620,
    "title": "Un-relocatable package in DAG prevents binary cache creation for other packages in DAG",
    "user": {
        "login": "mpbelhorn",
        "id": 1690817,
        "node_id": "MDQ6VXNlcjE2OTA4MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1690817?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mpbelhorn",
        "html_url": "https://github.com/mpbelhorn",
        "followers_url": "https://api.github.com/users/mpbelhorn/followers",
        "following_url": "https://api.github.com/users/mpbelhorn/following{/other_user}",
        "gists_url": "https://api.github.com/users/mpbelhorn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mpbelhorn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mpbelhorn/subscriptions",
        "organizations_url": "https://api.github.com/users/mpbelhorn/orgs",
        "repos_url": "https://api.github.com/users/mpbelhorn/repos",
        "events_url": "https://api.github.com/users/mpbelhorn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mpbelhorn/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-04T17:32:51Z",
    "updated_at": "2019-08-06T20:43:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In the OLCF's software management workflow, we would like to generate binary caches for packages built in a staging/testing/preview environment that can be used to rapidly deploy packages in another \"production\" environment.\r\n\r\nIn our fork of spack (from [v0.12.1](https://github.com/spack/spack/commit/efa381c256b2267770c9bc3e4e2c6b691beb8042)), spack generates build caches for each package in the DAG sequentially. It will generate a build cache for each dependency until it encounters the first package which is not relocatable. At that point, `spack buildcache create` will exit; the remaining packages in the DAG are not processed. This leaves any relocatable but unprocessed packages without a build cache unless created explicitly for each relocatable dependency.\r\n\r\nWe would like spack to generate as many build caches for dependencies as possible and allow them to be used to satisfy dependencies in later re-use by other spack instances that would only need to build from source packages that are not relocatable.\r\n\r\nIn the reproducer example that follows, the first dependency spack processes in the DAG in non-relocatable causing no binary caches to be produced at all. However, we've seen cases where two or three of the first dependencies processed *are* relocatable and spack successfully produces binary caches for them before encountering a non-relocatable dependency and exiting before processing all the dependencies. This leads me to believe it's not important that all the dependencies in a DAG be cache-able for the relocatable ones to still be usefully cached. Is this belief correct? And if so, can we have spack generate as many caches as possible for a given input spec?\r\n\r\n### Steps to reproduce the issue\r\n\r\n```sh\r\n$ spack spec -lINt netcdf@4.6.1%gcc@6.4.0     \r\n```\r\n```console                                                                                                                                                                                                                     \r\nInput spec\r\n--------------------------------\r\n -   [    ]  netcdf@4.6.1%gcc@6.4.0\r\n\r\nConcretized\r\n--------------------------------\r\n[+]  gzpquhc  [    ]  builtin.netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n[+]  6rzaif5  [bl  ]      ^builtin.hdf5@1.10.3%gcc@6.4.0+cxx~debug+fortran+hl+mpi+pic+shared~szip~threadsafe arch=linux-rhel7-ppc64le \r\n[+]  acsucgh  [bl  ]          ^builtin.numactl@2.0.11%gcc@6.4.0 patches=592f30f7f5f757dfc239ad0ffd39a9a048487ad803c26b419e0f96b8cda08c1a arch=linux-rhel7-ppc64le \r\n[+]  4um5hjo  [bl  ]          ^olcf.spectrum-mpi@10.3.0.0-20190419%gcc@6.4.0 arch=linux-rhel7-ppc64le \r\n[+]  fvgnqf6  [bl  ]          ^builtin.zlib@1.2.11%gcc@6.4.0+optimize+pic+shared arch=linux-rhel7-ppc64le \r\n[+]  sbessrn  [b   ]      ^builtin.m4@1.4.18%gcc@6.4.0 patches=3877ab548f88597ab2327a2230ee048d2d07ace1062efe81fc92e91b7f39cd00,c0a408fbffb7255fcc75e26bd8edab116fc81d216bfd18b473668b7739a4158e,fc9b61654a3ba1a8d6cd78ce087e7c96366c290bc8d2c299f09828d793b853c8 +sigsegv arch=linux-rhel7-ppc64le \r\n[+]  hdr43hr  [bl  ]      ^builtin.parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le \r\n```\r\n```bash\r\nspack buildcache create \\\r\n    -d ${build_cache_dir} \\\r\n    -k \"${signing_key}\" \\\r\n    /gzpquhc\r\n```\r\n```console\r\n==> Found at least one matching spec\r\n==> examining match netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> adding matching spec netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> recursing dependencies\r\n==> skipping external or virtual dependency numactl@2.0.11%gcc@6.4.0 patches=592f30f7f5f757dfc239ad0ffd39a9a048487ad803c26b419e0f96b8cda08c1a arch=linux-rhel7-ppc64le \r\n==> adding dependency spectrum-mpi@10.3.0.0-20190419%gcc@6.4.0 arch=linux-rhel7-ppc64le \r\n==> adding dependency zlib@1.2.11%gcc@6.4.0+optimize+pic+shared arch=linux-rhel7-ppc64le \r\n==> adding dependency hdf5@1.10.3%gcc@6.4.0+cxx~debug+fortran+hl+mpi+pic+shared~szip~threadsafe arch=linux-rhel7-ppc64le \r\n==> adding dependency parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le \r\n==> adding dependency netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> writing tarballs to ./build_cache\r\n==> creating binary cache file for package parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le  \r\n==> Error: \r\n /tmp/tmpAtrpKQ/parallel-netcdf-1.8.1-hdr43hrl4opcz2yagwqk4k5zjxmg2bep/bin/pnetcdf_version \r\ncontains string\r\n /autofs/nccs-svm1_sw/.b2/.swci/1-compute/opt/spack/20180914 \r\nafter replacing it in rpaths.\r\nPackage should not be relocated.\r\n Use -a to override.\r\n```\r\n\r\n```bash\r\nls -l \"${build_cache_dir}\"\r\n```\r\n```console\r\ntotal 4\r\ndrwxrwsr-x 3 <REDACTED> <REDACTED> 4096 Jun  4 12:35 linux-rhel7-ppc64le\r\n```\r\n\r\nNo binary caches are produced for any of the packages, even the ones that are relocatable.\r\n\r\n#### Expected result\r\n\r\nThe hdf5 and parallel-netcdf dependencies are the only packages which are not relocatable and numactl here is an external package. So we expect binary caches to be produced for everything else. What follows is the output of a run using the proposed fix patch that is described further below.\r\n\r\n```bash\r\nspack buildcache create /gzpquhc\r\n```\r\n```console\r\n==> Found at least one matching spec\r\n==> examining match netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> adding matching spec netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> recursing dependencies\r\n==> skipping external or virtual dependency numactl@2.0.11%gcc@6.4.0 patches=592f30f7f5f757dfc239ad0ffd39a9a048487ad803c26b419e0f96b8cda08c1a arch=linux-rhel7-ppc64le \r\n==> adding dependency spectrum-mpi@10.3.0.0-20190419%gcc@6.4.0 arch=linux-rhel7-ppc64le \r\n==> adding dependency zlib@1.2.11%gcc@6.4.0+optimize+pic+shared arch=linux-rhel7-ppc64le \r\n==> adding dependency hdf5@1.10.3%gcc@6.4.0+cxx~debug+fortran+hl+mpi+pic+shared~szip~threadsafe arch=linux-rhel7-ppc64le \r\n==> adding dependency parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le \r\n==> adding dependency netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n==> writing tarballs to ./build_cache\r\n==> creating binary cache file for package parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le  \r\n==> Warning: \r\n /tmp/tmpd6qqWI/parallel-netcdf-1.8.1-hdr43hrl4opcz2yagwqk4k5zjxmg2bep/bin/pnetcdf_version \r\ncontains string\r\n /autofs/nccs-svm1_sw/.b2/.swci/1-compute/opt/spack/20180914 \r\nafter replacing it in rpaths.\r\nPackage should not be relocated.\r\n Use -a to override.\r\n==> creating binary cache file for package hdf5@1.10.3%gcc@6.4.0+cxx~debug+fortran+hl+mpi+pic+shared~szip~threadsafe arch=linux-rhel7-ppc64le  \r\n==> Warning: \r\n /tmp/tmpYecsFk/hdf5-1.10.3-6rzaif5azberzazrue4ryftlk5g4vcp4/lib/libhdf5.so.103.0.0 \r\ncontains string\r\n /autofs/nccs-svm1_sw/.b2/.swci/1-compute/opt/spack/20180914 \r\nafter replacing it in rpaths.\r\nPackage should not be relocated.\r\n Use -a to override.\r\n==> creating binary cache file for package netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le  \r\ngpg: using \"<REDACTED>\" as default secret key for signing\r\n==> creating binary cache file for package spectrum-mpi@10.3.0.0-20190419%gcc@6.4.0 arch=linux-rhel7-ppc64le  \r\ngpg: using \"<REDACTED>\" as default secret key for signing\r\n==> creating binary cache file for package zlib@1.2.11%gcc@6.4.0+optimize+pic+shared arch=linux-rhel7-ppc64le  \r\ngpg: using \"<REDACTED>\" as default secret key for signing\r\n```\r\n```bash\r\nls -l \"${build_cache_dir}\"\r\n```\r\n\r\n```console\r\ntotal 20K\r\ndrwxrwsr-x 3 <REDACTED> <REDACTED> 4.0K Jun  4 12:35 linux-rhel7-ppc64le/\r\n-rw-rw-r-- 1 <REDACTED> <REDACTED>  754 Jun  4 12:44 index.html\r\n-rw-rw-r-- 1 <REDACTED> <REDACTED> 3.8K Jun  4 12:44 linux-rhel7-ppc64le-gcc-6.4.0-netcdf-4.6.1-gzpquhcgd7zvrohl4f7l4c5dg7ysgrlq.spec.yaml\r\n-rw-rw-r-- 1 <REDACTED> <REDACTED>  636 Jun  4 12:44 linux-rhel7-ppc64le-gcc-6.4.0-spectrum-mpi-10.3.0.0-20190419-4um5hjogm3tepg4xe23hrptlrs2y7ez6.spec.yaml\r\n-rw-rw-r-- 1 <REDACTED> <REDACTED>  657 Jun  4 12:44 linux-rhel7-ppc64le-gcc-6.4.0-zlib-1.2.11-fvgnqf6k3ffhltldndu7pmntzvoyfsk4.spec.yaml\r\n\r\n```\r\n### Error Message\r\n\r\nThe unexpected behavior appears to be in `spack.binary_distribution::build_tarball` as called by `spack.cmd.buildcache::createtarball`:\r\n\r\n```console\r\n$ spack --stacktrace buildcache create /gzpquhc                                                                                                                                                                                                                    \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:299 ==> Found at least one matching spec\r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:302 ==> examining match netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:307 ==> adding matching spec netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:309 ==> recursing dependencies\r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:315 ==> skipping external or virtual dependency numactl@2.0.11%gcc@6.4.0 patches=592f30f7f5f757dfc239ad0ffd39a9a048487ad803c26b419e0f96b8cda08c1a arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:317 ==> adding dependency spectrum-mpi@10.3.0.0-20190419%gcc@6.4.0 arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:317 ==> adding dependency zlib@1.2.11%gcc@6.4.0+optimize+pic+shared arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:317 ==> adding dependency hdf5@1.10.3%gcc@6.4.0+cxx~debug+fortran+hl+mpi+pic+shared~szip~threadsafe arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:317 ==> adding dependency parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:317 ==> adding dependency netcdf@4.6.1%gcc@6.4.0~dap~hdf4 maxdims=1024 maxvars=8192 +mpi+parallel-netcdf+pic+shared arch=linux-rhel7-ppc64le \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:320 ==> writing tarballs to ./build_cache\r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/cmd/buildcache.py:323 ==> creating binary cache file for package parallel-netcdf@1.8.1%gcc@6.4.0+cxx+fortran+pic arch=linux-rhel7-ppc64le  \r\n/autofs/nccs-svm1_sw/.b2/.swci/1-compute/lib/spack/spack/binary_distribution.py:337 ==> Error: \r\n /tmp/tmpOLsaPk/parallel-netcdf-1.8.1-hdr43hrl4opcz2yagwqk4k5zjxmg2bep/bin/pnetcdf_version \r\ncontains string\r\n /autofs/nccs-svm1_sw/.b2/.swci/1-compute/opt/spack/20180914 \r\nafter replacing it in rpaths.\r\nPackage should not be relocated.\r\n Use -a to override.\r\n```\r\n\r\nIn particular, [this block](https://github.com/spack/spack/blob/a7776972ad365367aadfbf2a826000006c66c76b/lib/spack/spack/binary_distribution.py#L326-L339) calls `tty.die` on the first general exception rather than raising a more generic exception that could be caught in the [`cmd.buildcache::createtarball`](https://github.com/spack/spack/blob/develop/lib/spack/spack/cmd/buildcache.py#L334-L338) function's loop over dependency specs.\r\n\r\n### Proposed solution\r\n\r\nAllow `spack.binary_distribution::build_tarball` to log any errors and raise the exceptions. Any `NoOverwriteException` [thrown earlier](https://github.com/spack/spack/blob/a7776972ad365367aadfbf2a826000006c66c76b/lib/spack/spack/binary_distribution.py#L299-L303) simply be ignored by `cmd.buildcache::createtarball` to continue processing dependency specs. Any `InstallRootStringException` exception thrown by non-relocatable packages can also be ignored to continue processing dependency specs.\r\n\r\n```diff\r\ndiff --git a/lib/spack/spack/binary_distribution.py b/lib/spack/spack/binary_distribution.py\r\nindex 46ac7790e..09967b180 100644\r\n--- a/lib/spack/spack/binary_distribution.py\r\n+++ b/lib/spack/spack/binary_distribution.py\r\n@@ -321,20 +321,15 @@ def build_tarball(spec, outdir, force=False, rel=False, unsigned=False,\r\n\r\n     # optinally make the paths in the binaries relative to each other\r\n     # in the spack install tree before creating tarball\r\n-    if rel:\r\n-        try:\r\n+    try:\r\n+        if rel:\r\n             make_package_relative(workdir, spec.prefix, allow_root)\r\n-        except Exception as e:\r\n-            shutil.rmtree(workdir)\r\n-            shutil.rmtree(tarfile_dir)\r\n-            tty.die(str(e))\r\n-    else:\r\n-        try:\r\n+        else:\r\n             make_package_placeholder(workdir, spec.prefix, allow_root)\r\n-        except Exception as e:\r\n-            shutil.rmtree(workdir)\r\n-            shutil.rmtree(tarfile_dir)\r\n-            tty.die(str(e))\r\n+    except Exception as e:\r\n+        shutil.rmtree(workdir)\r\n+        shutil.rmtree(tarfile_dir)\r\n+        raise e\r\n     # create compressed tarball of the install prefix\r\n     with closing(tarfile.open(tarfile_path, 'w:gz')) as tar:\r\n         tar.add(name='%s' % workdir,\r\ndiff --git a/lib/spack/spack/cmd/buildcache.py b/lib/spack/spack/cmd/buildcache.py\r\nindex fe91312c4..5c35fc9f2 100644\r\n--- a/lib/spack/spack/cmd/buildcache.py\r\n+++ b/lib/spack/spack/cmd/buildcache.py\r\n@@ -20,6 +20,8 @@ from spack.spec import Spec, save_dependency_spec_yamls\r\n from spack.spec_set import CombinatorialSpecSet\r\n\r\n import spack.binary_distribution as bindist\r\n+from spack.binary_distribution import NoOverwriteException\r\n+from spack.relocate import InstallRootStringException\r\n import spack.cmd.common.arguments as arguments\r\n from spack.cmd import display_specs\r\n\r\n@@ -321,9 +323,14 @@ def createtarball(args):\r\n\r\n     for spec in specs:\r\n         tty.msg('creating binary cache file for package %s ' % spec.format())\r\n-        bindist.build_tarball(spec, outdir, args.force, args.rel,\r\n-                              args.unsigned, args.allow_root, signkey,\r\n-                              not args.no_rebuild_index)\r\n+        try:\r\n+            bindist.build_tarball(spec, outdir, args.force, args.rel,\r\n+                                  args.unsigned, args.allow_root, signkey,\r\n+                                  not args.no_rebuild_index)\r\n+        except (NoOverwriteException, InstallRootStringException) as _err:\r\n+            tty.warn(str(e))\r\n+        except Exception as e:\r\n+            tty.die(str(e))\r\n\r\n\r\n def installtarball(args):\r\n```\r\n\r\nCan someone more familiar with the caveats and gotchas regarding binary distribution caches weigh in on whether this is a bad idea?",
    "performed_via_github_app": null
}