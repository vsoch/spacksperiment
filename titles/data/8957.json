{
    "url": "https://api.github.com/repos/spack/spack/issues/8957",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/8957/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/8957/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/8957/events",
    "html_url": "https://github.com/spack/spack/issues/8957",
    "id": 349737005,
    "node_id": "MDU6SXNzdWUzNDk3MzcwMDU=",
    "number": 8957,
    "title": "Inconsistent handling of shortened versions",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446623646,
            "node_id": "MDU6TGFiZWw0NDY2MjM2NDY=",
            "url": "https://api.github.com/repos/spack/spack/labels/concretization",
            "name": "concretization",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 446630556,
            "node_id": "MDU6TGFiZWw0NDY2MzA1NTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/specs",
            "name": "specs",
            "color": "b60205",
            "default": false,
            "description": null
        },
        {
            "id": 474580738,
            "node_id": "MDU6TGFiZWw0NzQ1ODA3Mzg=",
            "url": "https://api.github.com/repos/spack/spack/labels/versions",
            "name": "versions",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2018-08-11T14:14:17Z",
    "updated_at": "2019-12-09T05:39:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Spack seems to be inconsistently handling shorted versions.\r\n\r\n### `depends_on`\r\n\r\nWhen used in a `depends_on` statement, if I say:\r\n```python\r\ndepends_on('python@2.7')\r\n```\r\nSpack will install _exactly_ Python 2.7, which will crash because 2.7 doesn't exist. I would instead expect it to install the latest 2.7.X. This is a long-standing bug documented in #921 and #1035.\r\n\r\nAs of now, the workaround has been to explicitly turn this into a version range:\r\n```python\r\ndepends_on('python@2.7.0:2.7.999')\r\n```\r\nThis works, but is unnecessarily wordy.\r\n\r\n### `when=`\r\n\r\nWhen used in a `when=` argument, if I say:\r\n```python\r\ndepends_on('r@3.4.0:3.4.9', when='@0.2')\r\n```\r\nthis will apply to both versions 0.2 and 0.2.2, as documented in #8950. Similarly, if I say:\r\n```python\r\npatch('foo.patch', when='@3.2')\r\n```\r\nthis patch will be applied to both versions 3.2 and 3.2.1, as documented in #8320 and #8432.\r\n\r\nAs of now, there is no workaround for this problem. This may be fixed by #8320.\r\n\r\n### Compiler versions\r\n\r\nThis one is the worst of all. Let's say I have a GCC 7.2.0 compiler in my `compilers.yaml`. There are many other GCC compilers, but this is the only GCC 7 compiler I have. If I say:\r\n```console\r\n$ spack install zlib %gcc@7\r\n```\r\nSpack will correctly deduce that I want it to use my GCC 7.2.0 compiler, but it will resolve the compiler as `%gcc@7` in my spec, and install to the `darwin-highsierra-x86_64/gcc-7` directory. The installation succeeds, but if I rerun:\r\n```console\r\n$ spack install foo %gcc@7.2.0 ^zlib\r\n```\r\nSpack needs to reinstall `zlib` with the new GCC 7.2.0 compiler. I believe this bug is undocumented. In fact, I think it used to work properly. I used it all the time when I had multiple GCC compilers installed and I wanted to specify one.\r\n\r\nThe workaround is to use a version range, like `%gcc@7:`.\r\n\r\n### Proposal\r\n\r\nAll of these situations should be handled identically. Otherwise, it's confusing what behavior to expect. I propose the following behavior.\r\n\r\nIf a `package.py`/`compilers.yaml` contains both 3.2 and 3.2.1, 3.2 should refer to _exactly_ 3.2 only.\r\n\r\nIf a `package.py`/`compilers.yaml` only contains 3.2.1, 3.2 should refer to any 3.2.X version.\r\n\r\n@tgamblin @baberlevi @PDoakORNL @cyrush @davydden @goxberry @eschnett ",
    "performed_via_github_app": null
}