{
    "url": "https://api.github.com/repos/spack/spack/issues/7774",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/7774/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/7774/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/7774/events",
    "html_url": "https://github.com/spack/spack/pull/7774",
    "id": 314775979,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxOTU2Mzg4",
    "number": 7774,
    "title": "Refactor initialization and configuration to remove globals",
    "user": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615135,
            "node_id": "MDU6TGFiZWw0NDY2MTUxMzU=",
            "url": "https://api.github.com/repos/spack/spack/labels/configuration",
            "name": "configuration",
            "color": "bfd4f2",
            "default": false,
            "description": null
        },
        {
            "id": 932844303,
            "node_id": "MDU6TGFiZWw5MzI4NDQzMDM=",
            "url": "https://api.github.com/repos/spack/spack/labels/initialization",
            "name": "initialization",
            "color": "cad660",
            "default": false,
            "description": ""
        },
        {
            "id": 456121338,
            "node_id": "MDU6TGFiZWw0NTYxMjEzMzg=",
            "url": "https://api.github.com/repos/spack/spack/labels/refactoring",
            "name": "refactoring",
            "color": "f28f2a",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-04-16T18:53:26Z",
    "updated_at": "2018-05-17T23:27:38Z",
    "closed_at": "2018-05-17T21:10:32Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/7774",
        "html_url": "https://github.com/spack/spack/pull/7774",
        "diff_url": "https://github.com/spack/spack/pull/7774.diff",
        "patch_url": "https://github.com/spack/spack/pull/7774.patch"
    },
    "body": "This is still WIP but it's almost done, so feel free to start reviewing.  It hurt a lot but it's needed. \ud83d\ude04\r\n\r\nSpack's `__init__.py` has served us well but it's time to get rid of all the stuff in it.  It's essentially a small set of global variables to manage the state of a Spack run.  The fact that they are all in one top-level `__init__.py` has some serious negatives as Spack scales.  Specifically:\r\n\r\n1. `spack` is loaded when `spack.anything` is imported.  This means everything in `__init__.py` has to be imported for every Spack run, which causes startup time to suffer (see #7585 and #7587).\r\n2. All the imports mean that we have very little control over initialization order in Spack, and it's easy to get circular dependencies among the top-level modules. It also means we can't force certain imports to after before certain command-line options (see #6903 and #7692).\r\n3. The imports in `__init__.py` pollute the top-level Spack namespace.  This will be dealt with in a future PR.\r\n\r\nThe way `spack.config` is currently written, it suffers from some of the same problems as (2), so it also needs to be made more lazy.\r\n\r\nThis PR will do the following:\r\n\r\n- [x] Remove all module-scope initialization from `__init__.py`, so that pieces of spack can be imported selectively.\r\n- [x] Rework `spack.config` so that module-scope state is in a `Configuration` class.  This makes it easy to override \r\n- [x] Simplify the `spack.config` interface to allow getting/setting either entire YAML files or specific parts (single variables).\r\n- [x] Make it possible to handle command-line configuration settings and defaults through `spack.config`, by adding new, internal-only configuration scopes (i.e. scopes that don't correspond to files).  This unifies the way Spack handles user configuration settings and its own.\r\n- [x] Replace all globals in `__init__.py` with configuration options via `spack.config`\r\n- [x] Convert significant module-scope initialization in submodules into lazy initialization through functions or classes.\r\n\r\nThe last TODO was to make `__init__.py` load lazily for the `from spack import *` case used by `package.py` files, but I will continue this in another PR.\r\n\r\nThis should allow #6903 and #7692 to move forward and should hopefully help reduce the remaining startup latency discussed in #7587.  It should also make internal Spack code more clear, and give us more control going forward.  Finally, it moves us a little closer to #1385.\r\n\r\n@alalazo @scheibelp @becker33 @mwkrentel @cyrush FYI",
    "performed_via_github_app": null
}