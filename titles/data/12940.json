{
    "url": "https://api.github.com/repos/spack/spack/issues/12940",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/12940/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/12940/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/12940/events",
    "html_url": "https://github.com/spack/spack/pull/12940",
    "id": 498011184,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzIxMDMxODM5",
    "number": 12940,
    "title": "`mirror create --all` can mirror everything",
    "user": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446643530,
            "node_id": "MDU6TGFiZWw0NDY2NDM1MzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/fetching",
            "name": "fetching",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 446756736,
            "node_id": "MDU6TGFiZWw0NDY3NTY3MzY=",
            "url": "https://api.github.com/repos/spack/spack/labels/mirrors",
            "name": "mirrors",
            "color": "ade2f2",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-09-25T02:22:37Z",
    "updated_at": "2019-10-31T19:56:58Z",
    "closed_at": "2019-10-26T04:47:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/12940",
        "html_url": "https://github.com/spack/spack/pull/12940",
        "diff_url": "https://github.com/spack/spack/pull/12940.diff",
        "patch_url": "https://github.com/spack/spack/pull/12940.patch"
    },
    "body": "Add support for mirroring all packages with `spack mirror create --all`. In this mode there is no concretization: Spack pulls every version of every package into a mirror. It makes multiple attempts for each package/version combination (in case there is a temporary build failure for a given version) but also continues if all attempts fail (if there is a permanent build failure for a given version).\r\n\r\nThis includes an update to mirroring logic to prefer storing sources to a name that is derived entirely from the source and is unique (i.e. not including the package name in the cached source). For example\r\n\r\n* For archives with checksums, the name is the sha256 sum (`where before it might be <package-name>-package-version>.tar.gz`)\r\n* For SCM repositories, it is a concatenation of the hash of the full repository URL and the branch/tag/commit\r\n\r\nThis allows different packages to refer to the same resource or source without duplicating that download in the mirror/cache. This change is not essential to mirroring everything but is expected to save space when mirroring many versions of packages which all use the same resource.\r\n\r\nThe new structure of the mirror is:\r\n\r\n```\r\n<base directory>/\r\n  _source-cache/   <-- the _source-cache directory is new\r\n    archive/\r\n      sldkfjasldkfjs9djsldkfjs0sjdkflsjf0.tar.gz        <-- not human-readable\r\n    git/\r\n      slkdjf98dej2j0s-develop.tar.gz     <-- the mirror can store the latest commit of a repository branch\r\n    svn/      <-- each fetch strategy has its own subdirectory\r\n      ...\r\n  openmpi/   <-- the remaining package directories have the old format\r\n    openmpi-1.10.1.tar.gz   <-- these human-readable names are symlinks into _source-cache\r\n```\r\n\r\nWhen creating a mirror with archive names as described above, the mirror creation logic now also creates symlinks with the old format in order to help users understand which package each mirrored archive is associated with; the symlinks are relative so the mirror directory can still itself be archived.\r\n\r\nOther changes include:\r\n\r\n* `spack mirror create` will not re-download resources that have already been placed in it\r\n* When creating a mirror, the resources downloaded to the mirror will not be cached\r\n\r\nTODOs:\r\n\r\n- [x] (possibly in a later PR) The logic for caching patches is separate from package source/resource caching: applying the caching updates here to patches will take additional work (which is considered worthwhile but less of an impact since patches are generally small).\r\n- [x] Make the mirror optionally output traditional source code paths by default (since it can be difficult to map a machine-generated filename to the associated package, and users may want to actually peruse these files to understand them).\r\n- [x] (update 10/15: there is now an `--all-versions` option which you can use to collect all versions/dependencies of a set of root packages, which offers an alternative to caching everything) (possibly in a later PR) I presume that users likely don't want every version of every package by default, but this is difficult to determine up front without concretizing packages (which would be expensive when we are talking about all packages). If a decent approximate solution can be found I'd like to add it in as an option (but still also allow downloading all versions as an option).\r\n- [ ] (new: 10/14) Print stats while doing the mirroring (right now stats are only printed at the end which is a long time to wait when mirroring everything)\r\n- [x] (new 10/14) globally-cached resources should not all be stored in a single directory (e.g. one directory for all git resources): in order to keep the directory size small, they should be stored in an intermediate directory that is randomly selected based on the file name",
    "performed_via_github_app": null
}