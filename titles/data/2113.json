{
    "url": "https://api.github.com/repos/spack/spack/issues/2113",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2113/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2113/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2113/events",
    "html_url": "https://github.com/spack/spack/issues/2113",
    "id": 185076391,
    "node_id": "MDU6SXNzdWUxODUwNzYzOTE=",
    "number": 2113,
    "title": "a bug in GMP package",
    "user": {
        "login": "davydden",
        "id": 8023934,
        "node_id": "MDQ6VXNlcjgwMjM5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8023934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davydden",
        "html_url": "https://github.com/davydden",
        "followers_url": "https://api.github.com/users/davydden/followers",
        "following_url": "https://api.github.com/users/davydden/following{/other_user}",
        "gists_url": "https://api.github.com/users/davydden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davydden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davydden/subscriptions",
        "organizations_url": "https://api.github.com/users/davydden/orgs",
        "repos_url": "https://api.github.com/users/davydden/repos",
        "events_url": "https://api.github.com/users/davydden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davydden/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-10-25T10:21:34Z",
    "updated_at": "2016-10-25T15:04:28Z",
    "closed_at": "2016-10-25T14:08:52Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Our system administrator hit a bug today:\n\n```\n==> Staging archive: /calculate/spack/var/spack/stage/gmp-6.1.1-uq52e2ngj75qjzhuvlfk7ssvbeicaduj/gmp-6.1.1.tar.bz2\n==> Created stage in /calculate/spack/var/spack/stage/gmp-6.1.1-uq52e2ngj75qjzhuvlfk7ssvbeicaduj\n==> No patches needed for gmp\n==> Building gmp [AutotoolsPackage]\n==> Executing phase : 'autoreconf'\n==> Executing phase : 'configure'\nTraceback (most recent call last):\n File \"./spack\", line 202, in <module>\n   main()\n File \"./spack\", line 179, in main\n   return_val = command(parser, args)\n File \"/calculate/spack/lib/spack/spack/cmd/install.py\", line 117, in install\n   package.do_install(**kwargs)\n File \"/calculate/spack/lib/spack/spack/package.py\", line 1183, in do_install\n   dirty=dirty)\n File \"/calculate/spack/lib/spack/spack/package.py\", line 1183, in do_install\n   dirty=dirty)\n File \"/calculate/spack/lib/spack/spack/package.py\", line 1183, in do_install\n   dirty=dirty)\n File \"/calculate/spack/lib/spack/spack/package.py\", line 1183, in do_install\n   dirty=dirty)\n File \"/calculate/spack/lib/spack/spack/package.py\", line 1268, in do_install\n   spack.build_environment.fork(self, build_process, dirty=dirty)\n File \"/calculate/spack/lib/spack/spack/build_environment.py\", line 542, in fork\n   raise exception\nNameError: global name 'spec' is not defined\n\n--------------------------------\ngmp: package.py has the content:\n--------------------------------\nfrom spack import *\n\n\nclass Gmp(AutotoolsPackage):\n   \"\"\"GMP is a free library for arbitrary precision arithmetic,\n      operating on signed integers, rational numbers, and\n      floating-point numbers.\"\"\"\n   homepage = \"https://gmplib.org\"\n   url = \"https://gmplib.org/download/gmp/gmp-6.0.0a.tar.bz2\"\n\n   version('6.1.1',  '4c175f86e11eb32d8bf9872ca3a8e11d')\n   version('6.1.0',  '86ee6e54ebfc4a90b643a65e402c4048')\n   version('6.0.0a', 'b7ff2d88cae7f8085bd5006096eed470')\n   version('6.0.0',  '6ef5869ae735db9995619135bd856b84')\n\n   depends_on('m4', type='build')\n\n   def configure_args(self):\n       args = ['--enable-cxx']\n       # We need this flag if we want all the following checks to pass.\n       if spec.compiler.name == 'intel':\n           args.append('CXXFLAGS=-no-ftz')\n\n       return args\n~\n```\n\nFrom a quick glance it looks like a bug.\n",
    "performed_via_github_app": null
}