{
    "url": "https://api.github.com/repos/spack/spack/issues/17238",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/17238/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/17238/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/17238/events",
    "html_url": "https://github.com/spack/spack/issues/17238",
    "id": 644983750,
    "node_id": "MDU6SXNzdWU2NDQ5ODM3NTA=",
    "number": 17238,
    "title": "\"spack install\" command core-dumps while installing a particular package within a hybrid Spack environment",
    "user": {
        "login": "quellyn",
        "id": 33294773,
        "node_id": "MDQ6VXNlcjMzMjk0Nzcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/33294773?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/quellyn",
        "html_url": "https://github.com/quellyn",
        "followers_url": "https://api.github.com/users/quellyn/followers",
        "following_url": "https://api.github.com/users/quellyn/following{/other_user}",
        "gists_url": "https://api.github.com/users/quellyn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/quellyn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/quellyn/subscriptions",
        "organizations_url": "https://api.github.com/users/quellyn/orgs",
        "repos_url": "https://api.github.com/users/quellyn/repos",
        "events_url": "https://api.github.com/users/quellyn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/quellyn/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-24T21:18:25Z",
    "updated_at": "2021-04-17T00:10:54Z",
    "closed_at": "2021-04-17T00:10:53Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `spack find` to list all the installed packages and ...\" -->\r\n\r\n### Steps to reproduce the issue\r\n\r\nOur site has a complex code with many dependencies. In the past we've generally stuck to compiling with Intel or GCC on an x86_64 architecture, but we are attempting to expand our reach onto more platforms and toolchains. Case in point:  the IBM XL 16.1.1 compiler and Spectrum MPI.\r\n\r\nBecause it's proven impossible to build out the entire dependency tree using XL, we've adopted a hybrid approach that consists of two anonymous Spack environments, with a structure like this:\r\n\r\n```console\r\n|-- ENV\r\n|   |-- common\r\n|   |   |-- config.yaml\r\n|   |   |-- mirrors.yaml\r\n|   |   |-- modules.yaml\r\n|   |   |-- repos.yaml\r\n|   |-- GCC\r\n|   |   |-- compilers.yaml\r\n|   |   |-- packages.yaml\r\n|   |   |-- spack.yaml\r\n|   |-- XL\r\n|       |-- compilers.yaml\r\n|       |-- packages.yaml\r\n|       |-- spack.yaml\r\n|-- spack\r\n|   |-- bin\r\n|   |-- CHANGELOG.md\r\n|   |-- COPYRIGHT\r\n.\r\n.\r\n.\r\n|-- local-spack-repo.\r\n|   |-- packages\r\n|   |-- README.md\r\n.\r\n.\r\n.\r\n```\r\n\r\nThe two directories \"GCC\" and \"XL\" contain environment-specific information (compilers, packages to install, etc.), while the directory \"common\" contains files that are referenced by all environments. In practice, we do this:\r\n\r\n1. Activate a Spack environment and build all the packages we possibly can with GCC 9.2.0:\r\n```console\r\n$ spack env activate -d ./ENV/GCC/\r\n$ spack env status\r\n==> In environment /projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/ENV/GCC\r\n\r\n$ spack concretize\r\n$ spack install -v\r\n.\r\n.\r\n.\r\n$ spack env loads \r\n$ spack env deactivate\r\n```\r\n\r\n2. Amend the XL environment's `packages.yaml` so that it loads all possible dependencies from the GCC environment, e.g.:\r\n\r\n```console\r\n trilinos:\r\n    buildable: False\r\n    modules:\r\n      trilinos@12.18.1: trilinos/12.18.1-gcc-9.2.0-iaq2qoo\r\n    variants: ['+amesos2', '~muelu', '~mumps', '+nox', '~suite-sparse', '+superlu-dist']\r\n```\r\n3. Repeat Step 1 for the XL environment\r\n\r\n### Error Message\r\n\r\n<!-- If Spack reported an error, provide the error message. If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\n\r\nThe above approach works well up until we hit a particular homegrown package, shapo. When we activate our XL environment and attempt to install it, spack errors out with:\r\n\r\n```console\r\n==> Error: Failed to install shapo due to ChildError: JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/build_environment.py:830, in child_process:\r\n        827            tb_string = traceback.format_exc()\r\n        828\r\n        829            # build up some context from the offending package so we can\r\n  >>    830            # show that, too.\r\n        831            package_context = get_package_context(tb)\r\n        832\r\n        833            build_log = None\r\n\r\nTraceback (most recent call last):\r\n  File \"/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/build_environment.py\", line 812, in child_process\r\n    setup_package(pkg, dirty=dirty)\r\n  File \"/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/build_environment.py\", line 734, in setup_package\r\n    load_external_modules(pkg)\r\n  File \"/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/build_environment.py\", line 682, in load_external_modules\r\n    load_module(dep.external_module)\r\n  File \"/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/util/module_cmd.py\", line 109, in load_module\r\n    module('load', mod)\r\n  File \"/projects/shavano/dev/quellyn/dw/DWP9X/spack-environments/DWP9X_16.1.1/1.0/spack/lib/spack/spack/util/module_cmd.py\", line 72, in module\r\n    env_dict = json.loads(env_json)\r\n  File \"/usr/lib64/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib64/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib64/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\n[shapo-install-debug.xl_r.txt](https://github.com/spack/spack/files/4827894/shapo-install-debug.xl_r.txt)\r\n\r\nI can install this same package within the GCC environment without issue. But inside the XL environment, Spack doesn't even complete the staging portion of the shapo source.\r\n\r\nI should also say that I have a nearly identical setup with GCC 9.2.0 and PGI 19.7, and the same error occurs there when I try to build shapo under PGI.\r\n\r\nCan someone give me some pointers on how to troubleshoot this?\r\n\r\nThanks!\r\nQuellyn\r\n\r\n\r\n### Information on your system\r\n\r\n<!-- Please include the output of `spack debug report` -->\r\n```console\r\n$ spack debug report\r\n* **Spack:** 0.14.2-1284-de63e1c2a\r\n* **Python:** 3.6.8\r\n* **Platform:** linux-centos7-haswell\r\n```\r\n\r\n<!-- If you have any relevant configuration detail (custom `packages.yaml` or `modules.yaml`, etc.) you can add that here as well. -->\r\n\r\n[ENV.tar.gz](https://github.com/spack/spack/files/4827914/ENV.tar.gz)\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [X] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [X] I have searched the issues of this repo and believe this is not a duplicate\r\n- [X] I have run the failing commands in debug mode and reported the output\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack! -->\r\n",
    "performed_via_github_app": null
}