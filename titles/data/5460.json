{
    "url": "https://api.github.com/repos/spack/spack/issues/5460",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5460/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5460/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5460/events",
    "html_url": "https://github.com/spack/spack/pull/5460",
    "id": 260018242,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQyNzE5MzEy",
    "number": 5460,
    "title": "module files: system paths are excluded from path inspection",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        },
        {
            "id": 446620033,
            "node_id": "MDU6TGFiZWw0NDY2MjAwMzM=",
            "url": "https://api.github.com/repos/spack/spack/labels/ready",
            "name": "ready",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-09-23T16:10:11Z",
    "updated_at": "2017-09-25T17:33:55Z",
    "closed_at": "2017-09-25T16:47:50Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/5460",
        "html_url": "https://github.com/spack/spack/pull/5460",
        "diff_url": "https://github.com/spack/spack/pull/5460.diff",
        "patch_url": "https://github.com/spack/spack/pull/5460.patch"
    },
    "body": "closes #5201\r\n\r\nCurrently, if a user sets an external package to have a prefix that is one of the system paths (like `/usr`) the module files that are generated will prepend `/usr/bin` to `PATH`, etc. This is particularly nasty at the time when a module file is unloaded, and e.g. paths like `/usr/bin` will be discarded from `PATH`.\r\n\r\nThis PR solves the issue skipping system paths when a prefix inspection is made to generate module files.",
    "performed_via_github_app": null
}