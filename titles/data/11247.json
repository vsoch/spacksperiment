{
    "url": "https://api.github.com/repos/spack/spack/issues/11247",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11247/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11247/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11247/events",
    "html_url": "https://github.com/spack/spack/issues/11247",
    "id": 435464717,
    "node_id": "MDU6SXNzdWU0MzU0NjQ3MTc=",
    "number": 11247,
    "title": "Spack compiler wrappers confuse both CMake and nvcc",
    "user": {
        "login": "jjwilke",
        "id": 106969,
        "node_id": "MDQ6VXNlcjEwNjk2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/106969?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jjwilke",
        "html_url": "https://github.com/jjwilke",
        "followers_url": "https://api.github.com/users/jjwilke/followers",
        "following_url": "https://api.github.com/users/jjwilke/following{/other_user}",
        "gists_url": "https://api.github.com/users/jjwilke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jjwilke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jjwilke/subscriptions",
        "organizations_url": "https://api.github.com/users/jjwilke/orgs",
        "repos_url": "https://api.github.com/users/jjwilke/repos",
        "events_url": "https://api.github.com/users/jjwilke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jjwilke/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-04-21T01:42:07Z",
    "updated_at": "2019-07-19T23:49:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I have been unable to get Spack to correctly configure any CUDA projects using GCC 7.2.0 and CUDA 9.2.88.  These are defined in packages.yaml and compilers.yaml (not installed via Spack). I have validated that Spack is correctly loading all necessary modules for these during the configure/build.\r\n\r\nI have a CMake project with CMakeLists.txt\r\n````\r\nProject(KokkosThing CXX CUDA)\r\n````\r\nCMake dies in the CUDA tests reporting nvcc is unable to compile a test program. There is no error message from CMake. Just 'nvcc is broken'. I manually run cmake with `--debug-trycompile` so I can compile the test `main.cu` with `nvcc` myself. I try the following:\r\n\r\n1. System environment with no Spack. Compiles just fine\r\n1. Source the Spack environment file. nvcc does nothing. Literally nothing. It prints no errors or messages (even with -v) and simply exits with return code 1.\r\n1. Source the Spack environment, but remove the Spack compilers from the PATH. Compiles just fine.\r\n1. Source the Spack environment AND leave the compilers in the PATH. Pass a -ccbin flag to nvcc pointing to gcc 7.2.0. Compiles just fine.\r\n1. Source the Spack environment. Pass -ccbin POINTING TO THE SPACK COMPILER WRAPPER. Compiles just fine.\r\n\r\nThe compiler wrappers are clearly confusing nvcc in some way. Almost impossible to guess why that would be. In some sense this might be an nvcc issue... but the Spack compiler wrappers are clearly causing the problem. For the time being, I can avoid this by setting in my package.py:\r\n````\r\noptions = [\r\n  \"-DCMAKE_CUDA_HOST_COMPILER=%s\" % os.environ[\"SPACK_CXX\"],\r\n]\r\n````\r\nwhich then forces the -ccbin flag and makes nvcc work.\r\n\r\nThis is one of several cases where the compiler wrappers are annoying. For our CMake workflow, I don't really understand why they are even necessary. I don't need and really don't want a compiler wrapper adding a bunch of flags I didn't ask for. \r\n\r\nIs there or has there been considered a \"no compiler wrapper\" option that just trusts people to know what they're doing with CMake? Or is there something else the compiler wrappers are accomplishing?\r\n",
    "performed_via_github_app": null
}