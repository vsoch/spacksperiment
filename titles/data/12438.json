{
    "url": "https://api.github.com/repos/spack/spack/issues/12438",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/12438/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/12438/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/12438/events",
    "html_url": "https://github.com/spack/spack/pull/12438",
    "id": 481367142,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA3ODgxMTg4",
    "number": 12438,
    "title": "Only ever return a string from get_path_from_module_contents",
    "user": {
        "login": "sleak-lbl",
        "id": 17708445,
        "node_id": "MDQ6VXNlcjE3NzA4NDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17708445?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleak-lbl",
        "html_url": "https://github.com/sleak-lbl",
        "followers_url": "https://api.github.com/users/sleak-lbl/followers",
        "following_url": "https://api.github.com/users/sleak-lbl/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleak-lbl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleak-lbl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleak-lbl/subscriptions",
        "organizations_url": "https://api.github.com/users/sleak-lbl/orgs",
        "repos_url": "https://api.github.com/users/sleak-lbl/repos",
        "events_url": "https://api.github.com/users/sleak-lbl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleak-lbl/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-15T22:36:28Z",
    "updated_at": "2020-08-20T09:41:38Z",
    "closed_at": "2020-08-20T09:41:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/12438",
        "html_url": "https://github.com/spack/spack/pull/12438",
        "diff_url": "https://github.com/spack/spack/pull/12438.diff",
        "patch_url": "https://github.com/spack/spack/pull/12438.patch"
    },
    "body": "This function returns a string, unless it can't find a suitable one, in which case it returns `None`. But other code using it expects a string, and does operations like `rpaths = ';'.join(spack.build_environment.get_rpaths(pkg))`. `join` requires a sequence of strings, so if a package has no relevant rpath, we get a runtime exception\r\n\r\nReturning an empty string instead of `None` bypasses the problem. More generally, I think it is more robust for methods to either return a valid object of a given type, or raise an exception - returning `None` some-of-the-time requires every call to the method to be guarded with a check of the return value\r\n\r\nThis PR replaces the None return with an empty string, for this one routine",
    "performed_via_github_app": null
}