{
    "url": "https://api.github.com/repos/spack/spack/issues/5241",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5241/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5241/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5241/events",
    "html_url": "https://github.com/spack/spack/issues/5241",
    "id": 253857812,
    "node_id": "MDU6SXNzdWUyNTM4NTc4MTI=",
    "number": 5241,
    "title": "dependency DAG is too fragile",
    "user": {
        "login": "sleak-lbl",
        "id": 17708445,
        "node_id": "MDQ6VXNlcjE3NzA4NDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17708445?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleak-lbl",
        "html_url": "https://github.com/sleak-lbl",
        "followers_url": "https://api.github.com/users/sleak-lbl/followers",
        "following_url": "https://api.github.com/users/sleak-lbl/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleak-lbl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleak-lbl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleak-lbl/subscriptions",
        "organizations_url": "https://api.github.com/users/sleak-lbl/orgs",
        "repos_url": "https://api.github.com/users/sleak-lbl/repos",
        "events_url": "https://api.github.com/users/sleak-lbl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleak-lbl/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446623646,
            "node_id": "MDU6TGFiZWw0NDY2MjM2NDY=",
            "url": "https://api.github.com/repos/spack/spack/labels/concretization",
            "name": "concretization",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 73908755,
            "node_id": "MDU6TGFiZWw3MzkwODc1NQ==",
            "url": "https://api.github.com/repos/spack/spack/labels/duplicate",
            "name": "duplicate",
            "color": "cccccc",
            "default": true,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-08-30T02:16:21Z",
    "updated_at": "2017-11-23T15:17:36Z",
    "closed_at": "2017-11-23T15:17:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This overlaps a number of other issues around dependencies, and maybe the new concretizer will help.\r\n\r\nIt seems that any small change anywhere changes the hash of anything remotely dependent on it, and this causes a cascade of issues:\r\n\r\n - updating a package.py file with a new version of a package changes the hash, now nothing will use the previously-installed version. Installing anything new that directly or indirectly uses this package triggers a rebuild of everything in the dependency tree. We've effectively turned an O(n) problem into an O(n^2) one ...\r\n\r\n - If a \"lower level\" package turns out to have an error, I can't rebuild it without first uninstalling it, which means either forcing the uninstall or uninstalling everything that uses it too. Then when I try to rebuild it, I can't get the original hash (presumably something else has changed somewhere in the system), so I need to uninstall and reinstall everything anyway. But the impact is that a problem in a rarely-used library breaks more important packages that \"depend\" on it\r\n\r\n - there is also a reproducibility problem, 2 days later I can't recreate a build exactly as it was. I'm not sure what changed in the meantime (maybe because of updates to my packages.yaml file? or to other package.py files?). But \"spack spec\" shows a different hash, and an attempt to reinstall a package rebuilds the entire tree\r\n\r\n - another ticket has raised the \"new install of cmake for every package that uses cmake\" - I think this stems from the same underlying issue\r\n\r\nThe effect is that the system seems very fragile, a minor change can break a large installed base of software. I'm a bit stuck for ideas on how to get around it - maybe getting the concretizer to favor already-installed versions will help?\r\n\r\n(edit: fix typo)",
    "performed_via_github_app": null
}