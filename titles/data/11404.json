{
    "url": "https://api.github.com/repos/spack/spack/issues/11404",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11404/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11404/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11404/events",
    "html_url": "https://github.com/spack/spack/pull/11404",
    "id": 442273458,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3NDIxNDc0",
    "number": 11404,
    "title": "Trilinos - Attempt to provide a +cuda variant",
    "user": {
        "login": "KineticTheory",
        "id": 17579601,
        "node_id": "MDQ6VXNlcjE3NTc5NjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/17579601?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KineticTheory",
        "html_url": "https://github.com/KineticTheory",
        "followers_url": "https://api.github.com/users/KineticTheory/followers",
        "following_url": "https://api.github.com/users/KineticTheory/following{/other_user}",
        "gists_url": "https://api.github.com/users/KineticTheory/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KineticTheory/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KineticTheory/subscriptions",
        "organizations_url": "https://api.github.com/users/KineticTheory/orgs",
        "repos_url": "https://api.github.com/users/KineticTheory/repos",
        "events_url": "https://api.github.com/users/KineticTheory/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KineticTheory/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 618601843,
            "node_id": "MDU6TGFiZWw2MTg2MDE4NDM=",
            "url": "https://api.github.com/repos/spack/spack/labels/cuda",
            "name": "cuda",
            "color": "85b737",
            "default": false,
            "description": ""
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2019-05-09T14:41:41Z",
    "updated_at": "2020-08-22T19:07:30Z",
    "closed_at": "2020-08-22T19:07:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/11404",
        "html_url": "https://github.com/spack/spack/pull/11404",
        "diff_url": "https://github.com/spack/spack/pull/11404.diff",
        "patch_url": "https://github.com/spack/spack/pull/11404.patch"
    },
    "body": "+ One of the projects I support needs `trilinos+cuda`.  We have worked with the SNL trilinos team to come up with a cmake command that builds trilinos in a way that meets our needs.  I have updated spack's trilinos recipe to allow this particular configuration (the content of this PR).\r\n+ It is likely that a more complex set of variants is needed, but this first cut should provide a good starting place for other teams who need `trilinos+cuda`.\r\n+ This was tested on x86+volta and power9+volta with cuda/9.2 and cuda/10.1. When using cuda/10.1 I ran into trilinos/trilinos#4936 that required `cxxflags='-fpermissive'` to allow the build to complete.\r\n+ A lot of the new code in `trilinos/package.py` was lifted from `kokkos/package.py` (`gpu_values`, `host_values`, kokkos options).\r\n+ I needed to add the CMake option `-DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON` for `+shared` variants to avoid link warnings about non-relocatable code.\r\n+ I needed to manually install trilinos' `nvcc_wrapper` since their build system doesn't do this for us.\r\n",
    "performed_via_github_app": null
}