{
    "url": "https://api.github.com/repos/spack/spack/issues/5938",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5938/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5938/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5938/events",
    "html_url": "https://github.com/spack/spack/issues/5938",
    "id": 268237631,
    "node_id": "MDU6SXNzdWUyNjgyMzc2MzE=",
    "number": 5938,
    "title": "Dependency Namespace isn't carried down a dependency chain",
    "user": {
        "login": "FrankD412",
        "id": 3429989,
        "node_id": "MDQ6VXNlcjM0Mjk5ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3429989?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FrankD412",
        "html_url": "https://github.com/FrankD412",
        "followers_url": "https://api.github.com/users/FrankD412/followers",
        "following_url": "https://api.github.com/users/FrankD412/following{/other_user}",
        "gists_url": "https://api.github.com/users/FrankD412/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/FrankD412/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/FrankD412/subscriptions",
        "organizations_url": "https://api.github.com/users/FrankD412/orgs",
        "repos_url": "https://api.github.com/users/FrankD412/repos",
        "events_url": "https://api.github.com/users/FrankD412/events{/privacy}",
        "received_events_url": "https://api.github.com/users/FrankD412/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446630669,
            "node_id": "MDU6TGFiZWw0NDY2MzA2Njk=",
            "url": "https://api.github.com/repos/spack/spack/labels/dependencies",
            "name": "dependencies",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 583316991,
            "node_id": "MDU6TGFiZWw1ODMzMTY5OTE=",
            "url": "https://api.github.com/repos/spack/spack/labels/repos",
            "name": "repos",
            "color": "e99695",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-10-25T01:25:07Z",
    "updated_at": "2017-10-25T19:18:38Z",
    "closed_at": "2017-10-25T19:17:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When creating a new namespace containing custom repositories, if a repository within the new namespace depends on (in the literal Spack context of ```depends_on(x)```) a builtin package, spack throws the following error:\r\n\r\n```\r\n[fdinatal@machine]~/mynamespace% spack install mypackage\r\n==> Error: Invalid namespace for mynamespace repo: builtin\r\n```\r\n\r\nThis is after setting up the namespace such that spack is reporting the following:\r\n```\r\n[fdinatal@quartz1922]~/mynamespace% spack repo list\r\n==> 2 package repositories.\r\nmynamespace       ~/mynamespace\r\nbuiltin                    spack/var/spack/repos/builtin\r\n```\r\n\r\nCommenting out the error check\r\n```\r\nif namespace and (namespace != self.namespace):\r\n                raise InvalidNamespaceError(\u2018Invalid namespace for %s repo: %s\u2019\r\n                                                                        % (self.namespace, namespace))\r\n```\r\nusing the ```spack edit \u2013m repository``` command results in the following error (in this case my custom repository depends on ```mpi``` and ```boost```:\r\n```\r\n[fdinatal@machine]~/mynamespace% spack install conveyorlc\r\n==> Error: Package libyogrt not found in repository [Repo 'mynamespace' at '~/mynamespace']\r\n```\r\n\r\nAdding my custom packages to the ```builtin`` directory fixes the issue after removing my custom namespace. It almost seems from the errors that the builtin namespace is not propagated down the dependency chain when a dependency is found to depend on something else. That's a best guess though.",
    "performed_via_github_app": null
}