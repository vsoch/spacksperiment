{
    "url": "https://api.github.com/repos/spack/spack/issues/2281",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2281/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2281/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2281/events",
    "html_url": "https://github.com/spack/spack/issues/2281",
    "id": 188026805,
    "node_id": "MDU6SXNzdWUxODgwMjY4MDU=",
    "number": 2281,
    "title": "Fix PyPI Downloads --- The Right Way",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        },
        {
            "id": 446619758,
            "node_id": "MDU6TGFiZWw0NDY2MTk3NTg=",
            "url": "https://api.github.com/repos/spack/spack/labels/python",
            "name": "python",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 446620033,
            "node_id": "MDU6TGFiZWw0NDY2MjAwMzM=",
            "url": "https://api.github.com/repos/spack/spack/labels/ready",
            "name": "ready",
            "color": "0e8a16",
            "default": false,
            "description": null
        },
        {
            "id": 459174375,
            "node_id": "MDU6TGFiZWw0NTkxNzQzNzU=",
            "url": "https://api.github.com/repos/spack/spack/labels/revisit",
            "name": "revisit",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "adamjstewart",
            "id": 12021217,
            "node_id": "MDQ6VXNlcjEyMDIxMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamjstewart",
            "html_url": "https://github.com/adamjstewart",
            "followers_url": "https://api.github.com/users/adamjstewart/followers",
            "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
            "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
            "repos_url": "https://api.github.com/users/adamjstewart/repos",
            "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2016-11-08T15:46:41Z",
    "updated_at": "2020-12-29T08:03:09Z",
    "closed_at": "2020-12-29T08:03:09Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@alalazo @adamjstewart \r\n\r\nWe can't do this for every crazy download site out there.  But PyPI is important and provides lots of stuff to Spack.  So let's get it right... here is the link describing their XMLRPC API:\r\n    https://wiki.python.org/moin/PyPIXmlRpc\r\n\r\n1. We can use this to create a `url_for_version()` method that will call the API's `release_urls(package_name, version)` to determine the download URL.  It should NOT download the checksum at install time, since the whole point is to CHECK it at install time.\r\n\r\n2. This new `url_for_version` would come standard in the `PyPIPackage` base class.  Or... we provide it as a method and ask Package authors to write `url_for_version = pypi_url_for_version` as needed.\r\n\r\n3. We can use the API to improve automagic generation of PyPI packages.  The auto-generator would query it for a bunch of URLs and checksums.  If we're clever enough with picking apart `package.py` files, we could even have a procedure that auto-updates a `package.py` file for new versions of the package.\r\n\r\n",
    "performed_via_github_app": null
}