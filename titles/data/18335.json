{
    "url": "https://api.github.com/repos/spack/spack/issues/18335",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/18335/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/18335/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/18335/events",
    "html_url": "https://github.com/spack/spack/issues/18335",
    "id": 687599445,
    "node_id": "MDU6SXNzdWU2ODc1OTk0NDU=",
    "number": 18335,
    "title": "dev-build: cflags not propagated to CMake",
    "user": {
        "login": "omor1",
        "id": 4326436,
        "node_id": "MDQ6VXNlcjQzMjY0MzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4326436?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/omor1",
        "html_url": "https://github.com/omor1",
        "followers_url": "https://api.github.com/users/omor1/followers",
        "following_url": "https://api.github.com/users/omor1/following{/other_user}",
        "gists_url": "https://api.github.com/users/omor1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/omor1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/omor1/subscriptions",
        "organizations_url": "https://api.github.com/users/omor1/orgs",
        "repos_url": "https://api.github.com/users/omor1/repos",
        "events_url": "https://api.github.com/users/omor1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/omor1/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-27T23:12:03Z",
    "updated_at": "2020-08-27T23:51:54Z",
    "closed_at": "2020-08-27T23:51:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I'm trying to build a development package with Spack. Initially, following documentation in \"Workflows - Developing Software with Spack\", I used `spack setup`, but after a discussion with @adamjstewart I was informed that it is severely unmaintained and that #18240 is deprecating the command, suggesting `build-env` or `dev-build` instead.\r\n\r\nCFLAGS I supply to the spec (e.g. `cflags=\"-xHASWELL\"`) are not propagated over to CMake (`-DCMAKE_C_FLAGS`). I haven't tested this with anything other than `setup` and `dev-build`, both of which encounter this issue. The standard CMake variant `build_type` _is_ correctly propagated.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\n$ spack dev-build lci@local %intel@18.0.1 +ipo build_type=Release cflags=\"-xHASWELL\" fabric=ibv completion=\"sync,am\" devices=4 endpoints=32 max_rcvs=256 packets=3840 med_pkt_ret_sz=0 ~long_pkt_ret ^rdma-core@system\r\n...\r\n/home/omor1/spack/lib/spack/env/intel/icc -DAFF_DEBUG -DUSE_AFFI -D_GNU_SOURCE -I/home/omor1/icl/LC/include -I/home/omor1/icl/LC/src/include -I/home/omor1/icl/LC/spack-build/src/include  -O3 -DNDEBUG -ipo -fPIC -fvisibility=hidden   -pthread -std=gnu99 -o CMakeFiles/lci-obj.dir/src/cq.c.o   -c /home/omor1/icl/LC/src/cq.c\r\n...\r\n```\r\n\r\n### Error Message\r\n\r\nAs shown above, when compiling my package, the supplied `-xHASWELL` flag is not used.\r\n`SPACK_CFLAGS` _is_ set correctly in spack-build-env.txt, but this is not a variable CMake is looking for.\r\nThe full command Spack runs is:\r\n```\r\ncmake' '-G' 'Unix Makefiles' '-DCMAKE_INSTALL_PREFIX:STRING=/home/omor1/spack/opt/spack/linux-centos7-haswell/intel-18.0.1/lci-local-nx5r3ohyil2b73qkrklwthqoriggim3t' '-DCMAKE_BUILD_TYPE:STRING=Release' '-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-DCMAKE_INSTALL_RPATH:STRING=/home/omor1/spack/opt/spack/linux-centos7-haswell/intel-18.0.1/lci-local-nx5r3ohyil2b73qkrklwthqoriggim3t/lib;/home/omor1/spack/opt/spack/linux-centos7-haswell/intel-18.0.1/lci-local-nx5r3ohyil2b73qkrklwthqoriggim3t/lib64' '-DCMAKE_PREFIX_PATH:STRING=/share/apps/compute/cmake/3.17.0/gnu/4.8.5/gnu' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=ON' '-DLC_SERVER:STRING=ibv' '-DLC_USE_DREG:BOOL=ON' '-DLC_EP_AR:STRING=dynamic;explicit' '-DLC_EP_CE:STRING=am;sync' '-DLC_MAX_DEV:STRING=4' '-DLC_MAX_EP:STRING=32' '-DLC_SERVER_MAX_RCVS:STRING=256' '-DLC_SERVER_NUM_PKTS:STRING=3840' '-DLC_PKT_RET_MED_SIZE:STRING=0' '-DLC_PKT_RET_LONG:BOOL=OFF' '/home/omor1/icl/LC'\r\n```\r\n\r\n### Information on your system\r\n\r\nSDSC Comet\r\n\r\n* **Spack:** 0.15.4-710-125191931\r\n* **Python:** 2.7.5\r\n* **Platform:** linux-centos7-haswell\r\n\r\n```yaml\r\npackages:\r\n  rdma-core:\r\n    externals:\r\n    - spec: rdma-core@system\r\n      prefix: /usr\r\n  cmake:\r\n    externals:\r\n    - spec: cmake@3.17.0\r\n      modules:\r\n      - applications/cmake/3.17.0\r\n````\r\n\r\n`rdma-core@system` is a bogus version of rdma-core; technically Mellanox OFED is installed, not rdma-core, so there is no consistent versioning, but all components are there, and (for now) I want to use the system installation. LCI really only needs libibverbs, not the rest of rdma-core...\r\n\r\nThe package used is reproduced below. My understanding is that `cmake_args` extends the arguments to CMake, not replaces them; indeed, the remainder of the standard CMake arguments provided by Spack are present.\r\n\r\n```python\r\nclass Lci(CMakePackage):\r\n    \"\"\"Lightweight Communication Interface\"\"\"\r\n\r\n    def is_positive_int(val):\r\n        try:\r\n            return int(val) > 0\r\n        except ValueError:\r\n            return val == 'auto'\r\n    \r\n    def is_nonnegative_int(val):\r\n        try:\r\n            return int(val) >= 0\r\n        except ValueError:\r\n            return val == 'auto'\r\n\r\n    variant('ipo', default=False, description='Interprocedural Optimization')\r\n    variant('fabric', default='ibv',\r\n            values=('ofi', 'ibv', 'psm'), multi=False,\r\n            description='Communication fabric')\r\n    variant('dreg', default=True, description='Use registration cache')\r\n    variant('addressing', default='dynamic,explicit',\r\n            values=('dynamic', 'explicit', 'immediate'), multi=True,\r\n            description='Endpoint addressing mode')\r\n    variant('completion', default='sync,cq',\r\n            values=('sync', 'cq', 'am', 'glob'), multi=True,\r\n            description='Completion mechanism')\r\n    variant('devices', default='1', values=is_positive_int,\r\n            description='Number of NICs')\r\n    variant('endpoints', default='8', values=is_positive_int,\r\n            description='Number of endpoints')\r\n    variant('max_rcvs', default='auto', values=is_positive_int,\r\n            description='Max posted recieves')\r\n    variant('packets', default='auto', values=is_positive_int,\r\n            description='Number of packets')\r\n    variant('med_pkt_ret_sz', default='auto', values=is_nonnegative_int,\r\n            description='Min size of medium packet to return to sender pool')\r\n    variant('long_pkt_ret', default=False,\r\n            description='Return long packets to sender pool')\r\n\r\n    depends_on('cmake@3.13:', type='build')\r\n    depends_on('libfabric', when='fabric=ofi')\r\n    depends_on('rdma-core', when='fabric=ibv')\r\n    depends_on('opa-psm2',  when='fabric=psm')\r\n\r\n    def cmake_args(self):\r\n        args = [\r\n            self.define_from_variant('CMAKE_INTERPROCEDURAL_OPTIMIZATION', 'ipo'),\r\n            self.define_from_variant('LC_SERVER', 'fabric'),\r\n            self.define_from_variant('LC_USE_DREG', 'dreg'),\r\n            self.define_from_variant('LC_EP_AR', 'addressing'),\r\n            self.define_from_variant('LC_EP_CE', 'completion'),\r\n            self.define_from_variant('LC_MAX_DEV', 'devices'),\r\n            self.define_from_variant('LC_MAX_EP', 'endpoints')\r\n        ]\r\n\r\n        if self.spec.variants['max_rcvs'].value != 'auto':\r\n            arg = self.define_from_variant('LC_SERVER_MAX_RCVS', 'max_rcvs')\r\n            args.append(arg)\r\n\r\n        if self.spec.variants['packets'].value != 'auto':\r\n            arg = self.define_from_variant('LC_SERVER_NUM_PKTS', 'packets')\r\n            args.append(arg)\r\n\r\n        if self.spec.variants['med_pkt_ret_sz'].value != 'auto':\r\n            arg = self.define_from_variant('LC_PKT_RET_MED_SIZE', 'med_pkt_ret_sz')\r\n            args.append(arg)\r\n\r\n        if self.spec.variants['long_pkt_ret'].value != 'auto':\r\n            arg = self.define_from_variant('LC_PKT_RET_LONG', 'long_pkt_ret')\r\n            args.append(arg)\r\n\r\n        return args\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [ ] I have run the failing commands in debug mode and reported the output\r\n",
    "performed_via_github_app": null
}