{
    "url": "https://api.github.com/repos/spack/spack/issues/896",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/896/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/896/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/896/events",
    "html_url": "https://github.com/spack/spack/issues/896",
    "id": 153004479,
    "node_id": "MDU6SXNzdWUxNTMwMDQ0Nzk=",
    "number": 896,
    "title": "make compilers a build dependency without using depends_on()",
    "user": {
        "login": "davydden",
        "id": 8023934,
        "node_id": "MDQ6VXNlcjgwMjM5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8023934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davydden",
        "html_url": "https://github.com/davydden",
        "followers_url": "https://api.github.com/users/davydden/followers",
        "following_url": "https://api.github.com/users/davydden/following{/other_user}",
        "gists_url": "https://api.github.com/users/davydden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davydden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davydden/subscriptions",
        "organizations_url": "https://api.github.com/users/davydden/orgs",
        "repos_url": "https://api.github.com/users/davydden/repos",
        "events_url": "https://api.github.com/users/davydden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davydden/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 446630669,
            "node_id": "MDU6TGFiZWw0NDY2MzA2Njk=",
            "url": "https://api.github.com/repos/spack/spack/labels/dependencies",
            "name": "dependencies",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-05-04T12:54:58Z",
    "updated_at": "2016-09-21T13:10:04Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "this idea materialised in numerous discussions [1] : https://github.com/LLNL/spack/pull/882#discussion_r61910236 https://github.com/LLNL/spack/issues/876#issuecomment-216241450\n\nEssentially, each package should know which compilers it needs. Same applies to `mpi`. We may need just C/C++ part of the `mpi` library, or we may need both `c/c++` and `fortran` compiler wrappers. \n~~For `opempi` one could have~~\n\n```\nvariant ('cc', default=True, 'build with C compilers')\nvariant ('cxx', default=True, 'build with CXX compilers')\ndepends_on('cc', when='+cc');\ndepends_on('cc', when='+cxx');\n```\n\n~~and then in some package~~\n\n```\ndepends_on('mpi+cc+cxx+f77+fc')\n```\n\n~~or alike.~~ (**update**: see https://github.com/LLNL/spack/issues/896#issuecomment-216933187).\n\n That's how it is done in Homebrew (see for example Hypre https://github.com/Homebrew/homebrew-science/blob/master/hypre.rb#L17). I think it is a good idea to adopt a similar approach.\n\nI see several reasons why this is important, here is one. I am currently helping our sysadmin to use `spack`. On some Linuxes `gfortran` was not available when he first run `spack isntall dealii`. `dealii` has a lot of dependencies and quite big DAG was created. `openmpi` together with some other packages were installed successfully. Luckily for us, `openblas` failed due to missing fortran compilers. I helped him to debug the issue, we removed `compilers.yaml` and everything went fine with `openblas`. However `hypre` failed even when `compilers.yaml` had proper links to fortran compilers. That is because `openmpi` happened to be installed **before** we fixed `gfortran` issue and thus did not compile Fortran part of the library. Obviously a fix is to reinstall `openmpi`.\n\nYou can imagine that for newcomers those errors would be very difficult to track down. What is worse is that DAG fails to build somewhere in the middle. Such issues could be made more transparent if packages would declare which compilers they need. In this case, the whole DAG would probably have failed to conretize as no fortran compiler would be found. This would be a much easier to fix even for a newcomer to `spack`.\n\nAdditionally once compilers are made dependencies of packages, their mixing `c/c++` and `fortran` from different families (clang/gcc) would probably be easier as one would search for a working fortran compiler among all compilers known to spack. Of course, the whole conretization logic would be more complicated, probably with restrictions to use at maximum two different compiler suites for `c/c++` and `f77/fc` each.\n\n[1] i will update the links if I find more\n",
    "performed_via_github_app": null
}