{
    "url": "https://api.github.com/repos/spack/spack/issues/10479",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/10479/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/10479/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/10479/events",
    "html_url": "https://github.com/spack/spack/issues/10479",
    "id": 404672369,
    "node_id": "MDU6SXNzdWU0MDQ2NzIzNjk=",
    "number": 10479,
    "title": "How to find the name of module to build before it gets installed",
    "user": {
        "login": "gweodoo",
        "id": 2736934,
        "node_id": "MDQ6VXNlcjI3MzY5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2736934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gweodoo",
        "html_url": "https://github.com/gweodoo",
        "followers_url": "https://api.github.com/users/gweodoo/followers",
        "following_url": "https://api.github.com/users/gweodoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/gweodoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gweodoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gweodoo/subscriptions",
        "organizations_url": "https://api.github.com/users/gweodoo/orgs",
        "repos_url": "https://api.github.com/users/gweodoo/repos",
        "events_url": "https://api.github.com/users/gweodoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gweodoo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        },
        {
            "id": 73908758,
            "node_id": "MDU6TGFiZWw3MzkwODc1OA==",
            "url": "https://api.github.com/repos/spack/spack/labels/question",
            "name": "question",
            "color": "cc317c",
            "default": true,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-01-30T09:16:25Z",
    "updated_at": "2019-02-04T16:16:59Z",
    "closed_at": "2019-02-04T16:16:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hi all,\r\n\r\nThis may be a dumb question/suggestion, but I did not find anywhere a way to get the actual package name that will be effectively created. In my case, I use environment-modules and I would like to have the module name BEFORE it gets actually installed.\r\n\r\n### Rationale\r\n\r\nI understand it needs the package to be concretized beforehand and that's not a problem. I can also understand that concretization may fail if the actual recipe is updated with new versions and/or defaults. But, given a recipe, with known version, how hard would it be to get the module name early enough?\r\n\r\n### Description\r\n\r\nI'm currently building software to run tasks remotely on a supercomputer, especially for the parallel testing purpose. For example, I want to test a runtime with the OSU benchmark. I have to create my batch before actually running it. Two tasks will then be generated : \r\n- a command like `spack install osu-micro-benchmarks ^mpi@...`\r\n- a command like `spack load osu-micro-benchmarks...` depending on the above task.\r\nI agree this package is not the best illustration of my situation as it does not expose any binary in PATH but consider a Corals app. It that case, I'm currently relying on `spack location --install-dir` instead.\r\n\r\nUsing `spack load`(as for some others commands) is not optimal because it requires Shell integration and each task being run into its own shell. It means `setup-env.sh` would have to be loaded before each task starts, leading to an important overhead. At this point, I would like to use the actual module name, but at the `task generating` step, the concretization has not been done yet and I did not find how to get it without effectively installing the package.\r\n\r\nIf such a thing was possible, building Spack commands could be separated from their actual execution, without paying the price of loading the whole Spack environment just to run an MPI application.\r\n\r\n### Notes\r\nClearly, this is specific, maybe a public API to help program-to-program communication (through JSON, for instance) could clearly achieve that and would standardize a lot of things (the fact that Spack is not always returning a non-zero value when an error occurs can also be frustrating).\r\n\r\nI'm sure such an interface already came to your minds and I might have missed something from the documentation. \r\n\r\nLet me know if something is unclear, I would be happy to provide additional information. \r\nThanks for your help and sorry for any English typo.",
    "performed_via_github_app": null
}