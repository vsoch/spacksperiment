{
    "url": "https://api.github.com/repos/spack/spack/issues/19163",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/19163/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/19163/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/19163/events",
    "html_url": "https://github.com/spack/spack/issues/19163",
    "id": 715561282,
    "node_id": "MDU6SXNzdWU3MTU1NjEyODI=",
    "number": 19163,
    "title": "using a non-default OS compiler for building images with Spack",
    "user": {
        "login": "ravil-mobile",
        "id": 19637079,
        "node_id": "MDQ6VXNlcjE5NjM3MDc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19637079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ravil-mobile",
        "html_url": "https://github.com/ravil-mobile",
        "followers_url": "https://api.github.com/users/ravil-mobile/followers",
        "following_url": "https://api.github.com/users/ravil-mobile/following{/other_user}",
        "gists_url": "https://api.github.com/users/ravil-mobile/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ravil-mobile/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ravil-mobile/subscriptions",
        "organizations_url": "https://api.github.com/users/ravil-mobile/orgs",
        "repos_url": "https://api.github.com/users/ravil-mobile/repos",
        "events_url": "https://api.github.com/users/ravil-mobile/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ravil-mobile/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 719256466,
            "node_id": "MDU6TGFiZWw3MTkyNTY0NjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/containers",
            "name": "containers",
            "color": "c5def5",
            "default": false,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 73908758,
            "node_id": "MDU6TGFiZWw3MzkwODc1OA==",
            "url": "https://api.github.com/repos/spack/spack/labels/question",
            "name": "question",
            "color": "cc317c",
            "default": true,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-10-06T10:53:54Z",
    "updated_at": "2021-03-18T13:56:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Description\r\n\r\nHi all, \r\n\r\nI would like to create a docker image and build a set of packages with Spack using a non-default OS compiler. In short, I would like Spack to install a compiler first, add it to a list of compilers and use it to install the rest of a spec. Unfortunately, I can not find an example. \r\n\r\nBuilding Images with Spack is based on the environment concept. However, the concept assumes that a desired compiler has already been installed and added to Spack before an environment is concretized. My question is whether there is a solution for such a problem?\r\n\r\nThe one that I personally found is the following: 1) Create a docker file which is going be based of the Spack builder-image 2) install and add a compiler to Spack inside of my builder-image 3) build the image and use it as my custom builder for the rest of a spec\r\n\r\nHowever, the last part of step 3 would require to use a regular expression in order to find and substitute *FROM **spack/ubuntu-bionic:latest** as builder* to something like *FROM **builder-image:latest** as builder*\r\n\r\n\r\n### General information\r\n\r\n- [ ] I have run `spack --version` and reported the version of Spack\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n\r\n\r\n\r\n<!--If you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack!\r\n-->",
    "performed_via_github_app": null
}