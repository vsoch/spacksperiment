{
    "url": "https://api.github.com/repos/spack/spack/issues/20430",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/20430/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/20430/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/20430/events",
    "html_url": "https://github.com/spack/spack/issues/20430",
    "id": 769192058,
    "node_id": "MDU6SXNzdWU3NjkxOTIwNTg=",
    "number": 20430,
    "title": "consider bootstrapping spack as a standalone PEX to avoid interpreter clashes",
    "user": {
        "login": "cosmicexplorer",
        "id": 1305167,
        "node_id": "MDQ6VXNlcjEzMDUxNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1305167?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cosmicexplorer",
        "html_url": "https://github.com/cosmicexplorer",
        "followers_url": "https://api.github.com/users/cosmicexplorer/followers",
        "following_url": "https://api.github.com/users/cosmicexplorer/following{/other_user}",
        "gists_url": "https://api.github.com/users/cosmicexplorer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cosmicexplorer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cosmicexplorer/subscriptions",
        "organizations_url": "https://api.github.com/users/cosmicexplorer/orgs",
        "repos_url": "https://api.github.com/users/cosmicexplorer/repos",
        "events_url": "https://api.github.com/users/cosmicexplorer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cosmicexplorer/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2542559486,
            "node_id": "MDU6TGFiZWwyNTQyNTU5NDg2",
            "url": "https://api.github.com/repos/spack/spack/labels/bootstrap",
            "name": "bootstrap",
            "color": "743ec4",
            "default": false,
            "description": "Issues occurring while spack builds its own dependencies."
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 446619758,
            "node_id": "MDU6TGFiZWw0NDY2MTk3NTg=",
            "url": "https://api.github.com/repos/spack/spack/labels/python",
            "name": "python",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-16T18:58:30Z",
    "updated_at": "2020-12-16T19:00:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "*Summary:* Expose the [`pex`](https://github.com/pantsbuild/pex) python tool as a spack package. This allows creating [hermetic python environments as executable zip files](https://github.com/spack/spack/pull/20159), otherwise known as *PEX files.*\r\n\r\n### Rationale\r\n\r\n- Even after #20207, the version of python used to bootstrap clingo *must* remain the first python executable on the `PATH` -- otherwise another python executable is used to execute spack, which will then fail to import clingo.\r\n    - If the user wants to use a different python version, they then lose the ability to concretize with clingo.\r\n- If spack's source files and bootstrapped python dependencies from #20207 are made into a PEX file, the correct interpreter will be selected each time, just for that PEX process, and **we can remove the shell loop at the top of `bin/spack`!**\r\n- It would also allow bootstrapping spack on a remote machine without `git` installed, by `cp`ing the PEX file \r\n\r\n### Description\r\n\r\n1. [ ] Add a `PexPackage` class which exposes the `pex` package.\r\n    - It should probably download it from github releases, as that avoids any dependency on a specific python version at install time.\r\n2. [ ] Create a PEX file for spack itself after bootstrapping with #20207.\r\n    - This should not modify the bootstrap process from that PR whatsoever.\r\n3. [ ] Fix the spack PEX so spack executes from its checkout directory, not in `~/.pex`.\r\n    - The spack PEX will use the unpack directory within `~/.pex` as its checkout directory by default, since that is where pex puts the actual files.\r\n    - Can \"hardcode\" a `__main__` script which makes spack execute in the correct checkout directory.\r\n        - This *should* be doable without editing `bin/spack` at all, but that could also work.",
    "performed_via_github_app": null
}