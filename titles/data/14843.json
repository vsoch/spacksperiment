{
    "url": "https://api.github.com/repos/spack/spack/issues/14843",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/14843/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/14843/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/14843/events",
    "html_url": "https://github.com/spack/spack/issues/14843",
    "id": 561777382,
    "node_id": "MDU6SXNzdWU1NjE3NzczODI=",
    "number": 14843,
    "title": "Allow non-existent upstreams to fail gracefully",
    "user": {
        "login": "berquist",
        "id": 727571,
        "node_id": "MDQ6VXNlcjcyNzU3MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/727571?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/berquist",
        "html_url": "https://github.com/berquist",
        "followers_url": "https://api.github.com/users/berquist/followers",
        "following_url": "https://api.github.com/users/berquist/following{/other_user}",
        "gists_url": "https://api.github.com/users/berquist/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/berquist/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/berquist/subscriptions",
        "organizations_url": "https://api.github.com/users/berquist/orgs",
        "repos_url": "https://api.github.com/users/berquist/repos",
        "events_url": "https://api.github.com/users/berquist/events{/privacy}",
        "received_events_url": "https://api.github.com/users/berquist/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 1685802635,
            "node_id": "MDU6TGFiZWwxNjg1ODAyNjM1",
            "url": "https://api.github.com/repos/spack/spack/labels/spack-chains",
            "name": "spack-chains",
            "color": "eda4a3",
            "default": false,
            "description": "Related to chaining Spack"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-02-07T17:36:42Z",
    "updated_at": "2020-02-10T15:09:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "If an entry under `upstreams:` in my `~/.spack/upstreams.yaml` doesn't exist, optionally fail without making too much noise and don't return non-zero error codes at any step.\r\n\r\n### Rationale\r\n\r\nI'm administering a cluster where there is a Spack install local to each compute and submit node, but the node where the controller is doesn't have this install. With my current `~/.spack/upstreams.yaml`,\r\n```yaml\r\n---\r\nupstreams:\r\n  global:\r\n    install_tree: /scratch/spack/opt/spack\r\n    modules:\r\n      tcl: /scratch/spack/share/spack/modules\r\n```\r\nI get `PermissionError: [Errno 13] Permission denied: '/scratch'` because that directory doesn't exist on this machine. This is annoying but generally ok when logging on interactively, but it causes more problems when I use Ansible to access this machine. Users won't have this problem, only myself and other admins.\r\n\r\n### Description\r\n\r\nI'd like an option under each upstream block that lets me silently ignore that upstream if it doesn't exist. That option should print a short warning to stderr and return zero, rather than fail with a Python exception.\r\n\r\nThe alternatives are:\r\n- try and implement it myself\r\n- don't set up the \"cluster-wide\" install this way. We have multiple projects using the cluster, each with their own NAS, but I'm not sure I want to go down that route. Generally I'm still in the experimental stage of figuring out how our user-facing install should work.",
    "performed_via_github_app": null
}