{
    "url": "https://api.github.com/repos/spack/spack/issues/4189",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4189/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4189/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4189/events",
    "html_url": "https://github.com/spack/spack/issues/4189",
    "id": 227595977,
    "node_id": "MDU6SXNzdWUyMjc1OTU5Nzc=",
    "number": 4189,
    "title": "Question: Dependency resolution",
    "user": {
        "login": "healther",
        "id": 4048699,
        "node_id": "MDQ6VXNlcjQwNDg2OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4048699?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/healther",
        "html_url": "https://github.com/healther",
        "followers_url": "https://api.github.com/users/healther/followers",
        "following_url": "https://api.github.com/users/healther/following{/other_user}",
        "gists_url": "https://api.github.com/users/healther/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/healther/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/healther/subscriptions",
        "organizations_url": "https://api.github.com/users/healther/orgs",
        "repos_url": "https://api.github.com/users/healther/repos",
        "events_url": "https://api.github.com/users/healther/events{/privacy}",
        "received_events_url": "https://api.github.com/users/healther/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        },
        {
            "id": 73908758,
            "node_id": "MDU6TGFiZWw3MzkwODc1OA==",
            "url": "https://api.github.com/repos/spack/spack/labels/question",
            "name": "question",
            "color": "cc317c",
            "default": true,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-05-10T07:57:41Z",
    "updated_at": "2020-09-29T07:36:03Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Even though I still didn't manage to reproduce the behavior in a minimal example, here is what we observed: \r\n\r\n```\r\n$ spack load --dependencies py-cython py-pytest py-setuptools cmake py-multiarray py-numpy py-matplotlib \"^python +ucs4\"\r\n$ module list 2>&1 | grep mock\r\n 17) py-mock-2.0.0-gcc-4.9.2-itikmwv\r\n 76) py-mock-2.0.0-gcc-4.9.2-5lzv2ds\r\n```\r\nand\r\n```\r\n$ spack find -fdv /5lzv2ds > out5lzv\r\n$ spack find -fdv /itikmwv > outitik\r\n$ diff out5lzv outitik \r\n3c3\r\n<         ^py-pbr@1.10.0%gcc cflags=\"-O2 -march=core2 -pipe\" cxxflags=\"-O2 -march=core2 -pipe\" fflags=\"-O2 -march=core2 -pipe\" \r\n---\r\n>         ^py-pbr@1.8.1%gcc cflags=\"-O2 -march=core2 -pipe\" cxxflags=\"-O2 -march=core2 -pipe\" fflags=\"-O2 -march=core2 -pipe\"\r\n```\r\n\r\nMy guess is that this problem occured, because ```py-pbr``` got a new version between the install of two of the loaded packages, so that one of those now depends on ```@1.8.1``` and the other on ```@1.10.0```.  \r\n\r\nThere are now two questions: \r\n1. Is this intended behavior? I.e. should a package with ```depends_on(\"py-pbr@1.8:\")``` resolve to ```py-pbr@1.8.1``` or to ```@1.10.0``` if ```py-pbr@1.8.1``` is already installed and ```@1.8.1``` and ```@1.10.0``` are known to ```spack```?\r\n2. Should ```spack load``` perform a sanity check, i.e. check that the modules that are loaded only contain exactly one module per package?\r\n\r\nIn our case this wasn't a problem, and manually unloading ```py-pbr@1.8.1``` made the environment consistent. However, that may not always be possible (think about ```depends_on(\"A@:1.10\")``` and ```depends_on(\"A@0.9:\")```). I'll mark #3827 as WIP until question 2) is answered.",
    "performed_via_github_app": null
}