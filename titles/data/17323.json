{
    "url": "https://api.github.com/repos/spack/spack/issues/17323",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/17323/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/17323/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/17323/events",
    "html_url": "https://github.com/spack/spack/pull/17323",
    "id": 648637173,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQyNDEyNzk2",
    "number": 17323,
    "title": "Fix hashlib function capitalization",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446626162,
            "node_id": "MDU6TGFiZWw0NDY2MjYxNjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/hashes",
            "name": "hashes",
            "color": "9a69b7",
            "default": false,
            "description": null
        },
        {
            "id": 456341797,
            "node_id": "MDU6TGFiZWw0NTYzNDE3OTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/tests",
            "name": "tests",
            "color": "b60205",
            "default": false,
            "description": "General test capability(ies)"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-07-01T03:13:08Z",
    "updated_at": "2020-07-01T14:50:27Z",
    "closed_at": "2020-07-01T14:46:20Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/17323",
        "html_url": "https://github.com/spack/spack/pull/17323",
        "diff_url": "https://github.com/spack/spack/pull/17323.diff",
        "patch_url": "https://github.com/spack/spack/pull/17323.patch"
    },
    "body": "Fixes a bug I discovered on BW (Cray CNL5) when running with Python 2.6.9.\r\n\r\nAccording to the [hashlib documentation](https://docs.python.org/3/library/hashlib.html#hashlib.hash.name):\r\n\r\n> The canonical name of this hash, always lowercase and always suitable as a parameter to new() to create another hash of this type.\r\n> \r\n> _Changed in version 3.4:_ The name attribute has been present in CPython since its inception, but until Python 3.4 was not formally specified, so may not exist on some platforms.\r\n\r\nOn Python 3.4+, things work as expected:\r\n```console\r\n$ python\r\nPython 3.7.7 (default, May  5 2020, 22:46:17) \r\n>>> import hashlib\r\n>>> hashlib.sha256\r\n<built-in function openssl_sha256>\r\n>>> hashlib.sha256().name\r\n'sha256'\r\n```\r\nOn Python 2.6.9, the name attribute exists, but is capitalized:\r\n```console\r\n$ python\r\nPython 2.6.9 (unknown, Sep 14 2018, 10:54:25) \r\n>>> import hashlib\r\n>>> hashlib.sha256\r\n<built-in function sha256>\r\n>>> hashlib.sha256().name\r\n'SHA256'\r\n```\r\nConverting the name to lowercase makes things consistent with Python 3.4+.\r\n\r\n### Before\r\n\r\n```console\r\n$ spack test lib/spack/spack/test/url_fetch.py::test_hash_detection\r\n...\r\n________________________________________________________________ test_hash_detection[sha224] _________________________________________________________________\r\n\r\nchecksum_type = 'sha224'\r\n\r\n    def test_hash_detection(checksum_type):\r\n        algo = crypto.hash_fun_for_algo(checksum_type)()\r\n        h = 'f' * (algo.digest_size * 2)  # hex -> bytes\r\n        checker = crypto.Checker(h)\r\n>       assert checker.hash_name == checksum_type\r\nE       AssertionError: assert 'SHA224' == 'sha224'\r\nE         - SHA224\r\nE         + sha224\r\n\r\nlib/spack/spack/test/url_fetch.py:168: AssertionError\r\n________________________________________________________________ test_hash_detection[sha384] _________________________________________________________________\r\n\r\nchecksum_type = 'sha384'\r\n\r\n    def test_hash_detection(checksum_type):\r\n        algo = crypto.hash_fun_for_algo(checksum_type)()\r\n        h = 'f' * (algo.digest_size * 2)  # hex -> bytes\r\n        checker = crypto.Checker(h)\r\n>       assert checker.hash_name == checksum_type\r\nE       AssertionError: assert 'SHA384' == 'sha384'\r\nE         - SHA384\r\nE         + sha384\r\n\r\nlib/spack/spack/test/url_fetch.py:168: AssertionError\r\n________________________________________________________________ test_hash_detection[sha256] _________________________________________________________________\r\n\r\nchecksum_type = 'sha256'\r\n\r\n    def test_hash_detection(checksum_type):\r\n        algo = crypto.hash_fun_for_algo(checksum_type)()\r\n        h = 'f' * (algo.digest_size * 2)  # hex -> bytes\r\n        checker = crypto.Checker(h)\r\n>       assert checker.hash_name == checksum_type\r\nE       AssertionError: assert 'SHA256' == 'sha256'\r\nE         - SHA256\r\nE         + sha256\r\n\r\nlib/spack/spack/test/url_fetch.py:168: AssertionError\r\n________________________________________________________________ test_hash_detection[sha512] _________________________________________________________________\r\n\r\nchecksum_type = 'sha512'\r\n\r\n    def test_hash_detection(checksum_type):\r\n        algo = crypto.hash_fun_for_algo(checksum_type)()\r\n        h = 'f' * (algo.digest_size * 2)  # hex -> bytes\r\n        checker = crypto.Checker(h)\r\n>       assert checker.hash_name == checksum_type\r\nE       AssertionError: assert 'SHA512' == 'sha512'\r\nE         - SHA512\r\nE         + sha512\r\n\r\nlib/spack/spack/test/url_fetch.py:168: AssertionError\r\n```\r\n\r\n### After\r\n\r\nAll tests pass on BW now!",
    "performed_via_github_app": null
}