{
    "url": "https://api.github.com/repos/spack/spack/issues/11159",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11159/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11159/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11159/events",
    "html_url": "https://github.com/spack/spack/issues/11159",
    "id": 431459623,
    "node_id": "MDU6SXNzdWU0MzE0NTk2MjM=",
    "number": 11159,
    "title": "Namespace arguments broken in spack.repo API",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 574967592,
            "node_id": "MDU6TGFiZWw1NzQ5Njc1OTI=",
            "url": "https://api.github.com/repos/spack/spack/labels/directives",
            "name": "directives",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 512483297,
            "node_id": "MDU6TGFiZWw1MTI0ODMyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/impact-low",
            "name": "impact-low",
            "color": "fef2c0",
            "default": false,
            "description": ""
        },
        {
            "id": 583316991,
            "node_id": "MDU6TGFiZWw1ODMzMTY5OTE=",
            "url": "https://api.github.com/repos/spack/spack/labels/repos",
            "name": "repos",
            "color": "e99695",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-10T11:51:05Z",
    "updated_at": "2019-04-19T01:41:23Z",
    "closed_at": "2019-04-19T01:41:23Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "While coding towards #11158 I tried to use a custom namespace for the temporary repository being used. This caused strange errors, as for repositories that are not in the `spack.pkg` namespace directives won't be executed on their packages.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\n$ spack-python\r\nSpack version 0.12.1\r\nPython 2.7.15rc1, Linux x86_64\r\n>>> import spack.repo\r\n>>> import spack.spec\r\n# Any repository path will be fine below\r\n>>> repo = spack.repo.Repo('/tmp/tmp4yoo27fk', namespace='custom')\r\n>>> spack.repo.path.put_first(repo)\r\n# Choose a package in the custom repo\r\n>>> s = spack.spec.Spec('concretizationroot')\r\n>>> s.concretize()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/spec.py\", line 1909, in concretize\r\n    user_spec_deps=user_spec_deps),\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/spec.py\", line 2322, in normalize\r\n    self.validate_or_raise()\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/spec.py\", line 2374, in validate_or_raise\r\n    spack.repo.get(spec.fullname)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 1198, in get\r\n    return path.get(spec)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 85, in converter\r\n    return function(self, spec_like, *args, **kwargs)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 644, in get\r\n    return self.repo_for_pkg(spec).get(spec)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 85, in converter\r\n    return function(self, spec_like, *args, **kwargs)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 906, in get\r\n    raise FailedConstructorError(spec.fullname, *sys.exc_info())\r\nFailedConstructorError: Class constructor failed for package 'concretizationroot'.\r\n    \r\nCaused by:\r\nAttributeError: 'Concretizationroot' object has no attribute 'versions'\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/repo.py\", line 897, in get\r\n    return package_class(spec)\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/package.py\", line 488, in __init__\r\n    for v in self.versions:\r\n```\r\n\r\n### Additional information\r\n\r\nThis bug apparently was introduced in 39c9bbfbb which added this check:\r\n\r\nhttps://github.com/spack/spack/blob/b2611c80862628046556c73e1e9da6ec69060428/lib/spack/spack/directives.py#L102-L104\r\n\r\nto `DirectivesMeta`, which results in directives being executed only if the namespace of a repository is the default one. As a solution we could either relax this check, or simplify the repository interface by removing its optional `namespace` argument.",
    "performed_via_github_app": null
}