{
    "url": "https://api.github.com/repos/spack/spack/issues/1341",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/1341/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/1341/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/1341/events",
    "html_url": "https://github.com/spack/spack/issues/1341",
    "id": 167113514,
    "node_id": "MDU6SXNzdWUxNjcxMTM1MTQ=",
    "number": 1341,
    "title": "Replace mutually exclusive variants with non-boolean variants",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 493969518,
            "node_id": "MDU6TGFiZWw0OTM5Njk1MTg=",
            "url": "https://api.github.com/repos/spack/spack/labels/variants",
            "name": "variants",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-07-22T19:18:08Z",
    "updated_at": "2017-05-01T20:08:48Z",
    "closed_at": "2017-05-01T20:08:48Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@becker33 just informed me that we've been able to handle non-boolean variants since the cflags support was merged. Now that this is possible, I propose we start using them. Let's start with the MPI packages. For example, MVAPICH2 has the following variants that control the process manager:\n\n```\n    gforker         off       Sets gforker as one of the process managers\n    hydra           off       Sets hydra as one of the process managers\n    remshell        off       Sets remshell as one of the process managers\n    slurm           off       Sets slurm as the only process manager\n```\n\nIt also has the following variants for network type:\n\n```\n    mrail           off       Configures a build for OFA-IB-CH3\n    nemesis         off       Configures a build for TCP/IP-Nemesis\n    nemesisib       off       Configures a build for OFA-IB-Nemesis\n    nemesisibtcp    off       Configures a build for both OFA-IB-Nemesis and TCP/IP-Nemesis\n    psm             off       Configures a build for QLogic PSM-CH3\n    sock            off       Configures a build for TCP/IP-CH3\n```\n\nKeep in mind that both of these sets are mutually exclusive (you can't use multiple process managers). By collapsing all of these variants into two non-boolean variants, we can remove a lot of mutual exclusion logic.\n\nWhat would this look like? Instead of `mvapich2@2.2b~debug~gforker+hydra~mrail~nemesis~nemesisib~nemesisibtcp+psm~remshell~slurm~sock`, we would have `mvapich2@2.2b~debug procman=hydra network=psm`\n\n@becker33 There are still a lot of things I don't understand or that may need to be added in terms of support. What would the variant initialization look like in a package.py? How can I specify a list of possible values for this non-boolean variant? I would like `spack info` to list each possible value as well.\n",
    "performed_via_github_app": null
}