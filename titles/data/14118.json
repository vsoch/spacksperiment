{
    "url": "https://api.github.com/repos/spack/spack/issues/14118",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/14118/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/14118/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/14118/events",
    "html_url": "https://github.com/spack/spack/pull/14118",
    "id": 536582666,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyMDg4NDYz",
    "number": 14118,
    "title": "TensorFlow: must specify CUDA compute capabilities",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 881436839,
            "node_id": "MDU6TGFiZWw4ODE0MzY4Mzk=",
            "url": "https://api.github.com/repos/spack/spack/labels/conflicts",
            "name": "conflicts",
            "color": "92efd2",
            "default": false,
            "description": ""
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-11T19:57:13Z",
    "updated_at": "2019-12-12T02:16:56Z",
    "closed_at": "2019-12-12T02:16:53Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/14118",
        "html_url": "https://github.com/spack/spack/pull/14118",
        "diff_url": "https://github.com/spack/spack/pull/14118.diff",
        "patch_url": "https://github.com/spack/spack/pull/14118.patch"
    },
    "body": "This error was reported by @s-sajid-ali over Slack:\r\n```\r\n==> Installing py-tensorflow\r\n==> Searching for binary cache of py-tensorflow\r\n==> No binary for py-tensorflow found: installing from source\r\n==> Error: ValueError: could not convert string to float: 'none'\r\n/home/sajid/packages/spack/var/spack/repos/builtin/packages/py-tensorflow/package.py:428, in setup_build_environment:\r\n        425            # only supports compute capabilities >= 3.5\r\n        426            if spec.variants['cuda_arch'].value != 'none':\r\n        427                capabilities = ','.join('{0:.1f}'.format(\r\n  >>    428                    float(i) / 10.0) for i in spec.variants['cuda_arch'].value)\r\n        429                env.set('TF_CUDA_COMPUTE_CAPABILITIES', capabilities)\r\n        430        else:\r\n        431            env.set('TF_NEED_CUDA', '0')\r\n```\r\nIt seems I didn't correctly check for `'none'` in the `cuda_arch` values. In hindsight, I'm pretty sure `configure` will hang without any warning message if `TF_CUDA_COMPUTE_CAPABILITIES` isn't set (maybe @Sinan81 or @healther can confirm), so the right thing to do is crash if `+cuda cuda_arch=none`.\r\n\r\nAlso added checks for supported CUDA compute capability versions.\r\n\r\n@tgamblin @becker33 @scheibelp @alalazo are there any plans to automatically detect GPU versions and include that information in the spec someday?",
    "performed_via_github_app": null
}