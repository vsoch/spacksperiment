{
    "url": "https://api.github.com/repos/spack/spack/issues/3141",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3141/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3141/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3141/events",
    "html_url": "https://github.com/spack/spack/pull/3141",
    "id": 207360284,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA1OTk0NDc1",
    "number": 3141,
    "title": "Provide new package Random123",
    "user": {
        "login": "KineticTheory",
        "id": 17579601,
        "node_id": "MDQ6VXNlcjE3NTc5NjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/17579601?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KineticTheory",
        "html_url": "https://github.com/KineticTheory",
        "followers_url": "https://api.github.com/users/KineticTheory/followers",
        "following_url": "https://api.github.com/users/KineticTheory/following{/other_user}",
        "gists_url": "https://api.github.com/users/KineticTheory/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KineticTheory/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KineticTheory/subscriptions",
        "organizations_url": "https://api.github.com/users/KineticTheory/orgs",
        "repos_url": "https://api.github.com/users/KineticTheory/repos",
        "events_url": "https://api.github.com/users/KineticTheory/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KineticTheory/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-13T22:35:08Z",
    "updated_at": "2017-04-18T15:05:31Z",
    "closed_at": "2017-02-17T19:40:15Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/3141",
        "html_url": "https://github.com/spack/spack/pull/3141",
        "diff_url": "https://github.com/spack/spack/pull/3141.diff",
        "patch_url": "https://github.com/spack/spack/pull/3141.patch"
    },
    "body": "[Random123](http://www.deshawresearch.com/resources_random123.html)\r\n\r\nRandom123 is a library of \"counter-based\" random number generators (CBRNGs), in which the Nth random number can be obtained by applying a stateless mixing function to N instead of the conventional approach of using N iterations of a stateful transformation. CBRNGs were originally developed for use in MD applications on Anton, but they are ideal for a wide range of applications on modern multi-core CPUs, GPUs, clusters, and special-purpose hardware. Three families of non-cryptographic CBRNGs are described in a paper presented at the SC11 conference: ARS (based on the Advanced Encryption System (AES)), Threefry (based on the Threefish encryption function), and Philox (based on integer multiplication). They all satisfy rigorous statistical testing (passing BigCrush in TestU01), vectorize and parallelize well (each generator can produce at least 264 independent streams), have long periods (the period of each stream is at least 2128), require little or no memory or state, and have excellent performance (a few clock cycles per byte of random output). The Random123 library can be used with CPU (C and C++) and GPU (CUDA and OpenCL) applications.\r\n\r\nRandom123 source code is available without cost for both non-commercial and commercial use.",
    "performed_via_github_app": null
}