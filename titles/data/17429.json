{
    "url": "https://api.github.com/repos/spack/spack/issues/17429",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/17429/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/17429/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/17429/events",
    "html_url": "https://github.com/spack/spack/pull/17429",
    "id": 653474684,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2Mzg2NzMy",
    "number": 17429,
    "title": "remove one-shot entrypoint/switch default entrypoint to spack-env",
    "user": {
        "login": "opadron",
        "id": 2837854,
        "node_id": "MDQ6VXNlcjI4Mzc4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2837854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/opadron",
        "html_url": "https://github.com/opadron",
        "followers_url": "https://api.github.com/users/opadron/followers",
        "following_url": "https://api.github.com/users/opadron/following{/other_user}",
        "gists_url": "https://api.github.com/users/opadron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/opadron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/opadron/subscriptions",
        "organizations_url": "https://api.github.com/users/opadron/orgs",
        "repos_url": "https://api.github.com/users/opadron/repos",
        "events_url": "https://api.github.com/users/opadron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/opadron/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 832208203,
            "node_id": "MDU6TGFiZWw4MzIyMDgyMDM=",
            "url": "https://api.github.com/repos/spack/spack/labels/docker",
            "name": "docker",
            "color": "77b9d6",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-07-08T17:33:52Z",
    "updated_at": "2020-08-22T19:24:27Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/17429",
        "html_url": "https://github.com/spack/spack/pull/17429",
        "diff_url": "https://github.com/spack/spack/pull/17429.diff",
        "patch_url": "https://github.com/spack/spack/pull/17429.patch"
    },
    "body": "(Further) simplifies the `ENTRYPOINT` for the docker images.  This change removes the `one-shot` default entrypoint and replaces it with the `spack-env` entrypoint.  Combined with the `interactive-shell` default `CMD`, these changes yield the following behavior:\r\n\r\n - Before these changes: when running the image with no `ENTRYPOINT` or `CMD` override, an interactive shell session was created.  This session had spack loaded and ready for immediate use.  This behavior is preserved by the changes.\r\n\r\n - Before these changes: when running the image with a `CMD` override, the `CMD` was taken as a set of arguments to spack, itself (i.e.: `spack '...'`).  These changes remove this behavior.  Instead, the `CMD` is ran as in `/usr/bin/env sh -c '...'`, except that the passed commands can use Spack without the need to source its loading script. Existing uses of the prior behavior can accomplish the same by just adding `spack` to the beginning of the `CMD`:\r\n\r\n```bash\r\n $ docker run --rm ... spack/ubuntu-bionic spec hdf5  # before\r\n $ docker run --rm ... spack/ubuntu-bionic spack spec hdf5  # after\r\n```\r\n\r\n - The `docker-shell` variant continues to work as before.  `RUN` commands in a `Dockerfile` that use our image as a base can still run spack commands without needing to source spack's loading script.\r\n\r\nWithout these changes, `spack ci` users would need to explicitly override the `ENTRYPOINT` of jobs that run using our images.  This requirement precluded use in environments where entrypoint overrides were disabled, or ignored, such as with the Kubernetes executor (see [this issue](https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125)).  With these changes, the `ENTRYPOINT` now works, by default, in a manner compatible with all Gitlab CI use cases.",
    "performed_via_github_app": null
}