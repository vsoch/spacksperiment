{
    "url": "https://api.github.com/repos/spack/spack/issues/25048",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/25048/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/25048/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/25048/events",
    "html_url": "https://github.com/spack/spack/issues/25048",
    "id": 951081651,
    "node_id": "MDU6SXNzdWU5NTEwODE2NTE=",
    "number": 25048,
    "title": "spack prereq",
    "user": {
        "login": "shahzebsiddiqui",
        "id": 12942230,
        "node_id": "MDQ6VXNlcjEyOTQyMjMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12942230?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shahzebsiddiqui",
        "html_url": "https://github.com/shahzebsiddiqui",
        "followers_url": "https://api.github.com/users/shahzebsiddiqui/followers",
        "following_url": "https://api.github.com/users/shahzebsiddiqui/following{/other_user}",
        "gists_url": "https://api.github.com/users/shahzebsiddiqui/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shahzebsiddiqui/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shahzebsiddiqui/subscriptions",
        "organizations_url": "https://api.github.com/users/shahzebsiddiqui/orgs",
        "repos_url": "https://api.github.com/users/shahzebsiddiqui/repos",
        "events_url": "https://api.github.com/users/shahzebsiddiqui/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shahzebsiddiqui/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2021-07-22T21:37:51Z",
    "updated_at": "2021-07-31T21:17:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "<!--*Please add a concise summary of your suggestion here.*-->\r\n\r\n\r\nIt would be cool if spack can have a command like `spack check` to  run checks on a HPC system to verify [spack prerequisites](https://spack.readthedocs.io/en/latest/getting_started.html#prerequisites) are met. The `spack check` command is not sub-command so i think we can use this subcommand. \r\n\r\n```\r\nsiddiq90@cori04> spack check\r\n==> Error: check is not a recognized Spack command or extension command; check with `spack commands`.\r\n```\r\n\r\nBy default it will run the required checks at the facility to ensure pre-req are met in order to use spack properly. We want to make sure that commands like `wget`, `curl`, `tar`, `unzip`, `bzip2` are working. Some of these commands were not found on Spock system reported by @sameershende. \r\n\r\n\r\n\r\n### Rationale\r\n\r\nA user can just git clone spack and run `spack check` on their system to ensure all the checks are passing. The tests should cover basic functionality of spack which we assume is provided by the Operating System however it may not be the case for instance if user is running spack in a container that is a minimal OS without development libraries you can get into weird issues. \r\n\r\n<!--*Is your feature request related to a problem? Please describe it!*-->\r\n\r\n### Description\r\n\r\n<!--*Describe the solution you'd like and the alternatives you have considered.*-->\r\n\r\nThe output of `spack check` could be implemented using pytest if it makes sense with one-line per test that shows `PASS` or `FAIL` with one test per method. Let's say we have a test name **check_bzip2** which could run  `which bzip2`. The `spack check` command should exit with a non-zero returncode if any of the test fails. This can be useful if one was to add `spack check` as part of their script before running some commands. \r\n\r\n### Additional information\r\n<!--*Add any other context about the feature request here.*-->\r\n\r\n\r\n### General information\r\n\r\n- [ ] I have run `spack --version` and reported the version of Spack\r\n- [ ] I have searched the issues of this repo and believe this is not a duplicate\r\n\r\n\r\n\r\n<!--If you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack!\r\n-->",
    "performed_via_github_app": null
}