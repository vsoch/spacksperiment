{
    "url": "https://api.github.com/repos/spack/spack/issues/8159",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/8159/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/8159/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/8159/events",
    "html_url": "https://github.com/spack/spack/pull/8159",
    "id": 323704311,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4NDk2OTM4",
    "number": 8159,
    "title": "nco: Find NetCDF",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446630669,
            "node_id": "MDU6TGFiZWw0NDY2MzA2Njk=",
            "url": "https://api.github.com/repos/spack/spack/labels/dependencies",
            "name": "dependencies",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-16T16:52:43Z",
    "updated_at": "2018-05-18T12:51:22Z",
    "closed_at": "2018-05-18T12:51:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/8159",
        "html_url": "https://github.com/spack/spack/pull/8159",
        "diff_url": "https://github.com/spack/spack/pull/8159.diff",
        "patch_url": "https://github.com/spack/spack/pull/8159.patch"
    },
    "body": "Previously, `nco` was not able to find Spack-installed NetCDF; presumably relying on system-installed NetCDF instead.  If no system-installed NetCDF, this resulted in the error below.  This PR fixes the problem.\r\n\r\n\r\n```\r\n==> Installing nco\r\n==> Using cached archive: /gpfsm/dnb53/rpfische/spack6/var/spack/cache/nco/nco-4.6.7.tar.gz\r\n==> Staging archive: /gpfsm/dnb53/rpfische/spack6/var/spack/stage/nco-4.6.7-cmbb6euq3cyv25t6t47cu6snbfbrthqz/4.6.7.tar.gz\r\n==> Created stage in /gpfsm/dnb53/rpfische/spack6/var/spack/stage/nco-4.6.7-cmbb6euq3cyv25t6t47cu6snbfbrthqz\r\n==> Applied patch NUL-0-NULL.patch\r\n==> Building nco [AutotoolsPackage]\r\n==> Executing phase: 'autoreconf'\r\n==> Executing phase: 'configure'\r\n==> Error: ProcessError: Command exited with status 1:\r\n    '/gpfsm/dnb53/rpfische/spack6/var/spack/stage/nco-4.6.7-cmbb6euq3cyv25t6t47cu6snbfbrthqz/nco-4.6.7/configure' '--prefix=/gpfsm/dnb53/rpfische/spack6/opt/spack/linux-suse_linux11-x86_64/gcc-5.3.0/nco-4.6.7-cmbb6euq3cyv25t6t47cu6snbfbrthqz' '--disable-doc'\r\n\r\n2 errors found in build log:\r\n     168    ################################\r\n     169    checking for /opt/local/include/netcdf.h... no\r\n     170    checking for /opt/local/lib/libnetcdf.a... no\r\n     171    checking netcdf.h usability... no\r\n     172    checking netcdf.h presence... no\r\n     173    checking for netcdf.h... no\r\n  >> 174    configure: error: in `/tmp/rpfische/spack-stage/spack-stage-2Gmopq/nco-4.6.7':\r\n  >> 175    configure: error: cannot find netCDF header\r\n     176    See `config.log' for more details\r\n\r\nSee build log for details:\r\n```\r\n\r\nNote features and influential env variables for the NetCDF build:\r\n\r\n```\r\nOptional Features:\r\n  --disable-option-checking  ignore unrecognized --enable/--with options\r\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\r\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\r\n  --enable-silent-rules   less verbose build output (undo: \"make V=1\")\r\n  --disable-silent-rules  verbose build output (undo: \"make V=0\")\r\n  --enable-dependency-tracking\r\n                          do not reject slow dependency extractors\r\n  --disable-dependency-tracking\r\n                          speeds up one-time build\r\n  --enable-shared[=PKGS]  build shared libraries [default=yes]\r\n  --enable-static[=PKGS]  build static libraries [default=yes]\r\n  --enable-fast-install[=PKGS]\r\n                          optimize for fast installation [default=yes]\r\n  --disable-libtool-lock  avoid locking (might break parallel builds)\r\n  --enable-maintainer-mode\r\n                          enable make rules and dependencies not useful (and\r\n                          sometimes confusing) to the casual installer\r\n  --disable-largefile     omit support for large files\r\n  --enable-netcdf4        Enable netCDF Version 4 features (same as\r\n                          enable-netcdf-4) [[default=yes]]\r\n  --enable-netcdf-4       Enable netCDF Version 4 features (same as\r\n                          enable-netcdf4) [[default=yes]]\r\n  --enable-openmp         Build NCO with OpenMP [[default=yes]]\r\n  --disable-openmp        do not use OpenMP\r\n  --enable-dap            Build DAP-enabled NCO with netCDF-provided DAP\r\n                          [[default=yes]]\r\n  --enable-ncoxx          Build libnco++ and ncap2 (same as enable-ncap2)\r\n                          [[default=yes]]\r\n  --enable-ncap2          Build ncap2 and libnco++ (same as enable-ncoxx)\r\n                          [[default=yes]]\r\n  --enable-mpi            Build NCO for Message Passing Interface (NB: Do not\r\n                          use, this is not yet supported) [[default=no]]\r\n  --enable-fortran        Use Fortran arithmetic (deprecated) [[default=no]]\r\n  --enable-i18n           Internationalization (i18n) support (WARNING:\r\n                          Experimental, for future use) [[default=no]]\r\n  --enable-nco_cplusplus  Build NCO C++ interface library [[default=yes]]\r\n  --enable-esmf           Build-in ESMF support for integrated (instead of\r\n                          off-line) regridding. WARNING: Development code =\r\n                          Unsupported (and not necessary for regridding!\r\n                          Dragons lurk here.) [[default=no]]\r\n  --enable-gsl            Build-in GSL support if possible [[default=yes]]\r\n  --enable-regex          Allow extended regular expressions [[default=yes]]\r\n  --enable-udunits        Build-in UDUnits support if possible [[default=no]]\r\n  --enable-udunits2       Build-in UDUnits2 support if possible\r\n                          [[default=yes]]\r\n  --enable-debug-custom   Activate all known, helpful compile-time and\r\n                          run-time debugging checks such as pedantic warnings,\r\n                          bounds checking (slowest execution). Automatically\r\n                          activates --enable-debug-symbols. [[default=no]]\r\n  --enable-debug-symbols  Debugging symbols: Produce symbols for debuggers\r\n                          (e.g., dbx, gdb) [[default=no]]\r\n  --enable-optimize-custom\r\n                          Activate all known, helpful switches for fastest\r\n                          possible run-time performance (slowest compilation)\r\n                          [[default=no]]\r\n  --enable-doc            Build/install NCO TexInfo-based documentation (info\r\n                          hierarchy and PDF/HTML Users Guide)[[default=yes]]\r\n\r\nOptional Packages:\r\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\r\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\r\n  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use\r\n                          both]\r\n  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\r\n  --with-sysroot=DIR Search for dependent libraries within DIR\r\n                        (or the compiler's sysroot if not specified).\r\n\r\nSome influential environment variables:\r\n  CC          C compiler command\r\n  CFLAGS      C compiler flags\r\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\r\n              nonstandard directory <lib dir>\r\n  LIBS        libraries to pass to the linker, e.g. -l<library>\r\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\r\n              you have headers in a nonstandard directory <include dir>\r\n  CXX         C++ compiler command\r\n  CXXFLAGS    C++ compiler flags\r\n  CPP         C preprocessor\r\n  CXXCPP      C++ preprocessor\r\n  YACC        The `Yet Another Compiler Compiler' implementation to use.\r\n              Defaults to the first program found out of: `bison -y', `byacc',\r\n              `yacc'.\r\n  YFLAGS      The list of arguments that will be passed by default to $YACC.\r\n              This script will default YFLAGS to the empty string to avoid a\r\n              default value of `-d' given by some make applications.\r\n  NETCDF_INC  Location of netCDF headers (compile-time)\r\n  NETCDF_LIB  Location of netCDF library (compile-time)\r\n  NETCDF_ROOT Root of netCDF4 installation (compile-time)\r\n  ANTLR_ROOT  Location of ANTLR version 2.7.x installation (compile-time)\r\n  I18N_SHARE  Root of internationalization (i18n) locale directories\r\n              (run-time)\r\n  ESMF_INC    Location of ESMF headers (compile-time)\r\n  ESMF_LIB    Location of ESMF library (compile-time)\r\n  UDUNITS2_PATH\r\n              Root directory of UDUnits2 (normally contains bin, include, lib,\r\n              share subdirectories)\r\n```\r\n",
    "performed_via_github_app": null
}