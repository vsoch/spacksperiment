{
    "url": "https://api.github.com/repos/spack/spack/issues/6567",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/6567/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/6567/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/6567/events",
    "html_url": "https://github.com/spack/spack/issues/6567",
    "id": 279161150,
    "node_id": "MDU6SXNzdWUyNzkxNjExNTA=",
    "number": 6567,
    "title": "Issues implementing an 'external' variant",
    "user": {
        "login": "krafczyk",
        "id": 6449564,
        "node_id": "MDQ6VXNlcjY0NDk1NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6449564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/krafczyk",
        "html_url": "https://github.com/krafczyk",
        "followers_url": "https://api.github.com/users/krafczyk/followers",
        "following_url": "https://api.github.com/users/krafczyk/following{/other_user}",
        "gists_url": "https://api.github.com/users/krafczyk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/krafczyk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/krafczyk/subscriptions",
        "organizations_url": "https://api.github.com/users/krafczyk/orgs",
        "repos_url": "https://api.github.com/users/krafczyk/repos",
        "events_url": "https://api.github.com/users/krafczyk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/krafczyk/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 455855856,
            "node_id": "MDU6TGFiZWw0NTU4NTU4NTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/external-packages",
            "name": "external-packages",
            "color": "c5def5",
            "default": false,
            "description": null
        },
        {
            "id": 1547855104,
            "node_id": "MDU6TGFiZWwxNTQ3ODU1MTA0",
            "url": "https://api.github.com/repos/spack/spack/labels/new-variant",
            "name": "new-variant",
            "color": "c0d147",
            "default": false,
            "description": ""
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-04T21:44:26Z",
    "updated_at": "2020-08-23T18:14:30Z",
    "closed_at": "2020-08-23T18:14:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "As part of my on going efforts to create an interface for spack to use to access natively installed packages and packages managed by other packaging systems, I'm trying to implement an 'external' variant which is always there. i.e.\r\n\r\n`python external=path:/path` would indicate a python installation located at `/path`.\r\n`python external=pacman:python2` would indicate a python installation installed as package `python2` in the pacman package manager.\r\n\r\nI tried to copy the strategy done for patches here: https://github.com/spack/spack/blob/develop/lib/spack/spack/spec.py#L1823\r\n\r\nby implementing the `external` property for a spec like this:\r\n\r\n```\r\ndef external(self):\r\n    evar = self.variants.setdefault('external', MultiValuedVariant('external', ()))  \r\n    if len(evar.value) == 0:\r\n        return \"\"\r\n    else:\r\n        return evar.value[0]\r\n```\r\n\r\nHowever, I've been getting errors like this:\r\n\r\n```\r\nError: multiple values are not allowed for variant \"external\"\r\n```\r\n\r\nThis error is thrown from here: https://github.com/spack/spack/blob/develop/lib/spack/spack/variant.py#L398\r\n\r\nWhich is really weird, because I didn't create the `external` variant as a `SingleValuedVariant` but as a plain `MultiValuedVariant`.\r\n\r\nAnybody know why this bit of code from `SingleValuedVariant` is being called?",
    "performed_via_github_app": null
}