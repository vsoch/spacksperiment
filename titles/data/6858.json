{
    "url": "https://api.github.com/repos/spack/spack/issues/6858",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/6858/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/6858/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/6858/events",
    "html_url": "https://github.com/spack/spack/issues/6858",
    "id": 286923961,
    "node_id": "MDU6SXNzdWUyODY5MjM5NjE=",
    "number": 6858,
    "title": "Parmetis (CMakePackage) doesn't always respect cflags",
    "user": {
        "login": "KineticTheory",
        "id": 17579601,
        "node_id": "MDQ6VXNlcjE3NTc5NjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/17579601?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KineticTheory",
        "html_url": "https://github.com/KineticTheory",
        "followers_url": "https://api.github.com/users/KineticTheory/followers",
        "following_url": "https://api.github.com/users/KineticTheory/following{/other_user}",
        "gists_url": "https://api.github.com/users/KineticTheory/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KineticTheory/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KineticTheory/subscriptions",
        "organizations_url": "https://api.github.com/users/KineticTheory/orgs",
        "repos_url": "https://api.github.com/users/KineticTheory/repos",
        "events_url": "https://api.github.com/users/KineticTheory/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KineticTheory/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 508566016,
            "node_id": "MDU6TGFiZWw1MDg1NjYwMTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/cmake",
            "name": "cmake",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-01-08T23:35:52Z",
    "updated_at": "2019-05-09T14:21:28Z",
    "closed_at": "2019-05-09T14:21:28Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Summary\r\n\r\nThe current recipe for _parmetis_ allows conflicting optimization levels to appear on the compile line in a way that isn't expected. For example: `spack -d install parmetis%gcc cflags=\"-O3 -march=native\"` doesn't compile with the expected CFLAGS.  I expect to see compile lines similar to this:\r\n\r\n```\r\n/usr/bin/gcc -O3 -march=native <include directives and defines> -o file.o -c file.c\r\n```\r\n\r\n### Actual Result\r\n\r\n```\r\n/usr/bin/gcc -O3 -march=native <include directives and defines> -O2 -g -DNDEBUG -o file.o -c file.c\r\n```\r\n\r\nBecause `-O2` is listed after `-O3` the optimization is not what I expect.  I believe the `-O2 -g -DNDEBUG` flags are inserted by _CMake_ as they are the default `CMAKE_C_FLAGS_RELWITHDEBINFO` values for gcc.\r\n\r\n### Possible solution\r\n\r\nIf `SPACK_CFLAGS` is set in the build environment, then zero-out the cmake defaulted `CMAKE_C_FLAGS_XXX` variables.  #6839 demonstrates this model for _metis_ and #6860 demonstrates this for _parmetis_, but I think it should be included in `CMakePackage` (possibly via the `flag_handler` function).\r\n\r\n### Related Issues\r\n\r\n#6640 \r\n#6749\r\n#6839 \r\n#6860 \r\n  \r\n  \r\n  ",
    "performed_via_github_app": null
}