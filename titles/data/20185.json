{
    "url": "https://api.github.com/repos/spack/spack/issues/20185",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/20185/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/20185/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/20185/events",
    "html_url": "https://github.com/spack/spack/pull/20185",
    "id": 753828675,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTI5ODMxNDAx",
    "number": 20185,
    "title": "Mirrors: skip packages with special licensing",
    "user": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1025497628,
            "node_id": "MDU6TGFiZWwxMDI1NDk3NjI4",
            "url": "https://api.github.com/repos/spack/spack/labels/licenses",
            "name": "licenses",
            "color": "f97296",
            "default": false,
            "description": ""
        },
        {
            "id": 446756736,
            "node_id": "MDU6TGFiZWw0NDY3NTY3MzY=",
            "url": "https://api.github.com/repos/spack/spack/labels/mirrors",
            "name": "mirrors",
            "color": "ade2f2",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-30T21:49:13Z",
    "updated_at": "2021-03-12T20:14:30Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/20185",
        "html_url": "https://github.com/spack/spack/pull/20185",
        "diff_url": "https://github.com/spack/spack/pull/20185.diff",
        "patch_url": "https://github.com/spack/spack/pull/20185.patch"
    },
    "body": "@tgamblin\r\n@samcmill this is how we are thinking to support it (this is more of an FYI, it doesn't require any action on your part)\r\n\r\n(Note that we assume that most users won't want to enable this functionality as it specifically applies to concerns about public mirrors like the `spack-public` source mirror, the default behavior introduced here should produce the same results for organization-internal mirrors)\r\n\r\n* `spack buildcache create` and `spack mirror create` now both have a `--public` flag that is used when the user wants to create a public buildcache or mirror.\r\n* Packages can set `redistribute_source = False` in their definition to ensure that they are excluded from public mirrors\r\n  * Likewise, they can also set `redistribute_binary = False` to avoid creating binary caches for public mirrors\r\n  * These options are set independently: the user must explicitly set both to `False` if the source/binary should both be excluded\r\n* Users creating private mirrors (the default) will still include these packages\r\n* (12/4) Note that Spack caches downloads locally, and this does not interfere with that\r\n\r\nTODO\r\n\r\n- [x] Fix `PackageBase` class declaration (`RedistributionMixin` should not have to be an argument to `with_metaclass`) EDIT: I consider this addressed because the six documentation recommends putting all base classes in the `with_metaclass` invocation, although I still don't know why that is necessary\r\n- [x] test exclusion of packages from source mirror (both as a root and as a dependency)\r\n- [x] test exclusion of packages from binary mirror (both as a root and as a dependency)",
    "performed_via_github_app": null
}