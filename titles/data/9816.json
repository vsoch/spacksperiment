{
    "url": "https://api.github.com/repos/spack/spack/issues/9816",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/9816/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/9816/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/9816/events",
    "html_url": "https://github.com/spack/spack/issues/9816",
    "id": 379808639,
    "node_id": "MDU6SXNzdWUzNzk4MDg2Mzk=",
    "number": 9816,
    "title": "Strip arbitrary flags from compilation line",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-11-12T14:45:17Z",
    "updated_at": "2018-11-12T14:45:17Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "As a packager I want to be able to strip arbitrary flags from any compilation phase so that I can remove those that prevent a package from building \"correctly\" without patching its build system.\r\n\r\n### Rationale\r\n\r\nSpack already provides ways to inject flags into the compilation line, but currently lacks the counterpart: being able to strip arbitrary flags from it. This could be useful in cases where the build-system does not give any handle to remove a flag that prevent a package from building, or that compromise some of the guarantees that Spack gives.  A useful example is #9168 - and in fact this issue tracks a request for generalization done in https://github.com/spack/spack/pull/9168#discussion_r217266215.\r\n\r\n### Description\r\nThe idea is to add  a few more variables to those already managed by the compiler wrappers - see  https://github.com/spack/spack/pull/9168#discussion_r217266215. These variables should contain the flags that are to be stripped from the compilation line. Providing handles to set or modify the list of flags:\r\n1. From any compiler\r\n2. From any package\r\n3. From `packages.yaml` ?\r\n\r\nwould probably be a nice add-on. The precise API / configuration file syntax to use for this is still to be decided (and could probably be discussed directly in a PR).\r\n\r\n### Additional information\r\nThis is related to another request in https://github.com/spack/spack/pull/9168#issuecomment-421330359 made by @skosukhin to be able to override any property of a compiler from `compilers.yaml`.",
    "performed_via_github_app": null
}