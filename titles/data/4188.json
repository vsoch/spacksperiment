{
    "url": "https://api.github.com/repos/spack/spack/issues/4188",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4188/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4188/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4188/events",
    "html_url": "https://github.com/spack/spack/pull/4188",
    "id": 227593524,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE5ODIwODg1",
    "number": 4188,
    "title": "[WIP] Add pcl package and friends, first attempt.",
    "user": {
        "login": "svenevs",
        "id": 5871461,
        "node_id": "MDQ6VXNlcjU4NzE0NjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5871461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/svenevs",
        "html_url": "https://github.com/svenevs",
        "followers_url": "https://api.github.com/users/svenevs/followers",
        "following_url": "https://api.github.com/users/svenevs/following{/other_user}",
        "gists_url": "https://api.github.com/users/svenevs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/svenevs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/svenevs/subscriptions",
        "organizations_url": "https://api.github.com/users/svenevs/orgs",
        "repos_url": "https://api.github.com/users/svenevs/repos",
        "events_url": "https://api.github.com/users/svenevs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/svenevs/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-10T07:46:36Z",
    "updated_at": "2018-08-29T08:05:10Z",
    "closed_at": "2018-08-29T08:05:10Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/4188",
        "html_url": "https://github.com/spack/spack/pull/4188",
        "diff_url": "https://github.com/spack/spack/pull/4188.diff",
        "patch_url": "https://github.com/spack/spack/pull/4188.patch"
    },
    "body": "#### flann dependency\r\n\r\n- [x] `depends_on('flann')`, merge _after_ #3966\r\n\r\n#### libnl dependency\r\n\r\n- [ ] merge after #4168\r\n\r\n#### libpcap dependency\r\n\r\n- [ ] `libpcap` likes `libnl`, keep that as default to true.\r\n- [x] will update the url away from github release in next commit\r\n\r\n#### libusb dependency\r\n\r\n- [ ] Note 1 at bottom: should raise error if on Windows?  I have no idea if it works or not\r\n\r\n  ```\r\n  # NOTE: this package probably works on all Linux, likely OSX\r\n  #       *as-is*.  There are far too many options for me to understand.\r\n  #\r\n  #       The package likely does not work on Windows.  If you need that\r\n  #       refer to WIN_INSTALL on their GitHub page.\r\n  ```\r\n\r\n- [ ] Note 2 at bottom: `libudev` is too hard to install -- users should be using system package manager to make sure they get it right / `spack` cannot install necessary files (requires elevated permission)\r\n\r\n  ```\r\n  # NOTE: this package *RELIES* on libudev, which requires the systemd PR\r\n  #       to be fixed.  So as it stands, users must ensure that they have\r\n  #       libudev headers and library.  On Fedora, this was available via\r\n  #       dnf install systemd systemd-devel systemd-libs\r\n  #       the apt repos should be similarly named (apt-cache search systemd)\r\n  ```\r\n\r\n- [x] How do I do a sourceforge url for the official \"latest stable tarball\"?\r\n- [x] will delete FIXME in next commit with url from 3\r\n\r\n#### pcl package: the real goal here\r\n\r\n- [ ] What should default `boost` be.  Depends on if we assume OpenNI2 installed.\r\n\r\n  ```\r\n  # TODO: how to give boost version AND specific boost library\r\n  # requirements? What should they be / variants can't embed optional\r\n  # boost deps right?\r\n  #\r\n  # REQUIRED boost:\r\n  #     If OpenNI2: +system+filesystem+thread+date_time+iostreams+chrono\r\n  #     Else:       +system+filesystem+thread+date_time+iostreams\r\n  # OPTIONAL boost:\r\n  #     +serialization+mpi\r\n  ```\r\n\r\n- [ ] Python treatment, should it depend on `opencv+python` or should we use the `py-pcl`?\r\n\r\n  ```\r\n  # TODO:\r\n  # What to do about python?  It depends on opencv+python, but they are\r\n  # some kind of extension, and install underneath opencv?\r\n  # https://github.com/PointCloudLibrary/pcl/blob/6f846d242b07b7b2d5a562bbc60b3b488bbf6a47/cmake/pcl_find_python.cmake\r\n  # There is also a python-pcl package they maintain?\r\n  # http://pointclouds.org/news/tags/python\r\n  ```\r\n\r\n- [ ] Are the defaults acceptable or should they be made explicit (even if same as current defaults)?\r\n\r\n  ```\r\n  # TODO: should something be done with the default options?\r\n  # https://github.com/PointCloudLibrary/pcl/blob/master/cmake/pcl_options.cmake\r\n  ```\r\n\r\n- [ ] Assume depth camera support?  Only builds if available.  But won't be used if we don't default `libusb`\r\n\r\n  ```\r\n  # TODO: spack will never be suited to nor should attempt to be suited\r\n  # to install RGBD camera drivers.  How should spack inform users to\r\n  # be sure that they are going to get what they want?\r\n  #\r\n  # The drivers require elevated permissions, and most often custom\r\n  # modules and startup scripts.  The user is advised to try and\r\n  # install from the official SDK or their system package manager\r\n  # where possible.\r\n  ```\r\n\r\n    - AKA if we assume yes, it doesn't hurt, but we should maybe make `libusb` a full-blown requirement?\r\n\r\n      ```\r\n      # NOTE: libusb support REQUIRED for ANY to be used.\r\n      #\r\n      # Currently, the available driver support that can be built:\r\n      # https://github.com/PointCloudLibrary/pcl/blob/b9022ebd8ad5f5300662069b5f79995d0c0e18be/CMakeLists.txt#L296-L303\r\n      #\r\n      # The way it works is that everything is default to TRUE, the library\r\n      # is attempted to be found, and if not ignored.\r\n      #\r\n      # It takes place here:\r\n      # https://github.com/PointCloudLibrary/pcl/blob/b89b32b5e812353e93a5c35203c70b878c8ae2b7/cmake/pcl_targets.cmake#L842-L864\r\n      ```\r\n\r\n- [ ] How do I get the right version number from `qt` correctly?\r\n\r\n  ```\r\n  # TODO: how do i check this?\r\n  if self.spec.satisfies(\"^qt@4.8.6\"):\r\n      qt_ver_str = \"4\"\r\n  else:\r\n      qt_ver_str = \"5\"\r\n  args.append(\"-DPCL_QT_VERSION:STRING={0}\".format(qt_ver_str))\r\n  ```\r\n\r\n- [ ] Choose appropriate defaults for GUI libraries (off right?): `opengl`, `qt`, and `vtk` for `pcl`.\r\n- [ ] Choose appropriate defaults for camera support.\r\n    - See `libusb` note above.  `+usb` shouldn't be hard to compile portably (clusters etc)\r\n    - If we don't force `libusb` in and people _are_ trying to use it for camera support (very likely), they will not actually get it unless `usb` on.\r\n    - Basically: create some form of bolded warning, or force it as a hard dependency.\r\n- GitHub releases are the official releases, not mirrors.",
    "performed_via_github_app": null
}