{
    "url": "https://api.github.com/repos/spack/spack/issues/17531",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/17531/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/17531/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/17531/events",
    "html_url": "https://github.com/spack/spack/issues/17531",
    "id": 656777915,
    "node_id": "MDU6SXNzdWU2NTY3Nzc5MTU=",
    "number": 17531,
    "title": "mirror create lacks arguments to provide a mirror name or mirror url.",
    "user": {
        "login": "opadron",
        "id": 2837854,
        "node_id": "MDQ6VXNlcjI4Mzc4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2837854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/opadron",
        "html_url": "https://github.com/opadron",
        "followers_url": "https://api.github.com/users/opadron/followers",
        "following_url": "https://api.github.com/users/opadron/following{/other_user}",
        "gists_url": "https://api.github.com/users/opadron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/opadron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/opadron/subscriptions",
        "organizations_url": "https://api.github.com/users/opadron/orgs",
        "repos_url": "https://api.github.com/users/opadron/repos",
        "events_url": "https://api.github.com/users/opadron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/opadron/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        },
        {
            "login": "opadron",
            "id": 2837854,
            "node_id": "MDQ6VXNlcjI4Mzc4NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2837854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/opadron",
            "html_url": "https://github.com/opadron",
            "followers_url": "https://api.github.com/users/opadron/followers",
            "following_url": "https://api.github.com/users/opadron/following{/other_user}",
            "gists_url": "https://api.github.com/users/opadron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/opadron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/opadron/subscriptions",
            "organizations_url": "https://api.github.com/users/opadron/orgs",
            "repos_url": "https://api.github.com/users/opadron/repos",
            "events_url": "https://api.github.com/users/opadron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/opadron/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-07-14T17:28:31Z",
    "updated_at": "2020-07-14T17:40:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Despite the name, `spack mirror create` and `spack buildcache create` used to also accept mirror URLs and the names of configured mirrors passed via the `-d, --directory` argument.  To minimize confusion, this behavior was changed so that only `file://` URLs would be accepted.  The `-m, --mirror-name` and `--mirror-url` arguments were added to `spack buildcache create` to allow users to specify remote mirrors, but `spack mirror create` lacks these additions.\r\n\r\n```console\r\n$ spack buildcache create --help\r\nusage: spack buildcache create [-hrfua] [-k key]\r\n                               (-d directory | -m mirror-name | --mirror-url mirror-url)\r\n                               [--rebuild-index] [-y SPEC_YAML]\r\n                               [--only {package,dependencies}]\r\n                               ...\r\n\r\npositional arguments:\r\n  specs                 one or more package specs\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -r, --rel             make all rpaths relative before creating tarballs.\r\n  -f, --force           overwrite tarball if it exists.\r\n  -u, --unsigned        create unsigned buildcache tarballs for testing\r\n  -a, --allow-root      allow install root string in binary files after RPATH substitution\r\n  -k key, --key key     Key for signing.\r\n  -d directory, --directory directory\r\n                        local directory where buildcaches will be written.\r\n  -m mirror-name, --mirror-name mirror-name\r\n                        name of the mirror where buildcaches will be written.\r\n  --mirror-url mirror-url\r\n                        URL of the mirror where buildcaches will be written.\r\n  --rebuild-index       Regenerate buildcache index after building package(s)\r\n  -y SPEC_YAML, --spec-yaml SPEC_YAML\r\n                        Create buildcache entry for spec from yaml file\r\n  --only {package,dependencies}\r\n                        Select the buildcache mode. the default is to build a cache for the package along with all its dependencies. Alternatively, one can decide to build a cache for only the package or only the dependencies\r\n\r\n$ spack mirror create --help\r\nusage: spack mirror create [-haD] [-d DIRECTORY] [-f FILE]\r\n                           [--exclude-file EXCLUDE_FILE]\r\n                           [--exclude-specs EXCLUDE_SPECS]\r\n                           [--skip-unstable-versions] [-n VERSIONS_PER_SPEC]\r\n                           ...\r\n\r\npositional arguments:\r\n  specs                 one or more package specs\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -d DIRECTORY, --directory DIRECTORY\r\n                        directory in which to create mirror\r\n  -a, --all             mirror all versions of all packages in Spack, or all packages in the current environment if there is an active environment (this requires significant time and space)\r\n  -f FILE, --file FILE  file with specs of packages to put in mirror\r\n  --exclude-file EXCLUDE_FILE\r\n                        specs which Spack should not try to add to a mirror (listed in a file, one per line)\r\n  --exclude-specs EXCLUDE_SPECS\r\n                        specs which Spack should not try to add to a mirror (specified on command line)\r\n  --skip-unstable-versions\r\n                        don't cache versions unless they identify a stable (unchanging) source code\r\n  -D, --dependencies    also fetch all dependencies\r\n  -n VERSIONS_PER_SPEC, --versions-per-spec VERSIONS_PER_SPEC\r\n                        the number of versions to fetch for each spec, choose 'all' to retrieve all versions of each package\r\n...\r\n```",
    "performed_via_github_app": null
}