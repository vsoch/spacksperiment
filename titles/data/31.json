{
    "url": "https://api.github.com/repos/spack/spack/issues/31",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/31/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/31/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/31/events",
    "html_url": "https://github.com/spack/spack/issues/31",
    "id": 68784739,
    "node_id": "MDU6SXNzdWU2ODc4NDczOQ==",
    "number": 31,
    "title": "Spack needs a better way to install packages that don't have install targets.",
    "user": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-15T20:53:02Z",
    "updated_at": "2018-07-06T09:34:14Z",
    "closed_at": "2018-07-06T09:34:14Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "There are a lot of tools in filesystem.py, but there could be more. @malcook has an example where he wants symlink to be preserved when copying trees into place.\n\n`install_tree`, being defined in terms of \nshutil.copytree is not very useful for what I expect will be the most sought after use case, as described with a workaround : http://stackoverflow.com/a/12514470 which I employ below.\n\nI also wonder if there are pythonic/spack-esque replacements for my os.system calls below, written for a bioinformatics \u2018app\u2019 where all executables are creates in top level directory and \u2018install\u2019 is left to user whimsy:\n\n```\ndef install(self, spec, prefix):\n    ## no configure\n    make()                  # this makefile has no PREFIX or\n\n                                # `install` target.\n    ## APPROACH: executables are all at top-level, so symlink them\n    ## into ./bin dir and then COPY THE ENTIRE STAGING DIRECTORY\n    ## (allowing for symlinks).  This is ugly but it works, it is\n    ## complete, and is consistent with how the application is\n    ## packaged (if it ain't fixed don't fix it more than you\n    ## must).\n    mkdirp('bin')\n    ## TODO: make portable to non linux?\n    os.system(\"find * -maxdepth 0 -type f -executable -exec ln -rsf -t bin '{}' \\;\") #  symlink into ./bin all top-level executables.\n    os.system('ln -rsf -t bin  ./scripts/*') # also, symlink into ./bin all scripts (and the ./scripts/test directory)\n    copytree('./',prefix,symlinks=True)      # N.B. using copytree per http://stackoverflow.com/a/12514470\n```\n\nIdeally the above functionality would be available in Python and would work without the various shell commands used.\n",
    "performed_via_github_app": null
}