{
    "url": "https://api.github.com/repos/spack/spack/issues/11929",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11929/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11929/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11929/events",
    "html_url": "https://github.com/spack/spack/issues/11929",
    "id": 464122862,
    "node_id": "MDU6SXNzdWU0NjQxMjI4NjI=",
    "number": 11929,
    "title": "Excessive library search times",
    "user": {
        "login": "tjfulle",
        "id": 1564391,
        "node_id": "MDQ6VXNlcjE1NjQzOTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1564391?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tjfulle",
        "html_url": "https://github.com/tjfulle",
        "followers_url": "https://api.github.com/users/tjfulle/followers",
        "following_url": "https://api.github.com/users/tjfulle/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjfulle/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tjfulle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjfulle/subscriptions",
        "organizations_url": "https://api.github.com/users/tjfulle/orgs",
        "repos_url": "https://api.github.com/users/tjfulle/repos",
        "events_url": "https://api.github.com/users/tjfulle/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tjfulle/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "scheibelp",
        "id": 1659704,
        "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scheibelp",
        "html_url": "https://github.com/scheibelp",
        "followers_url": "https://api.github.com/users/scheibelp/followers",
        "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
        "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
        "organizations_url": "https://api.github.com/users/scheibelp/orgs",
        "repos_url": "https://api.github.com/users/scheibelp/repos",
        "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scheibelp/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "scheibelp",
            "id": 1659704,
            "node_id": "MDQ6VXNlcjE2NTk3MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1659704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scheibelp",
            "html_url": "https://github.com/scheibelp",
            "followers_url": "https://api.github.com/users/scheibelp/followers",
            "following_url": "https://api.github.com/users/scheibelp/following{/other_user}",
            "gists_url": "https://api.github.com/users/scheibelp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scheibelp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scheibelp/subscriptions",
            "organizations_url": "https://api.github.com/users/scheibelp/orgs",
            "repos_url": "https://api.github.com/users/scheibelp/repos",
            "events_url": "https://api.github.com/users/scheibelp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scheibelp/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-07-04T08:01:33Z",
    "updated_at": "2019-07-13T00:46:47Z",
    "closed_at": "2019-07-13T00:46:47Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Per recommendations, in #2067, the system lapack/blas are marked as external packages:\r\n\r\n```\r\n$ cat packages.yaml\r\npackages:\r\n  all:\r\n    providers:\r\n      blas: netlib-lapack\r\n      lapack: netlib-lapack\r\n  netlib-lapack:\r\n    paths: \r\n      netlib-lapack@system: /usr\r\n    version: [system]\r\n    buildable: False\r\n```\r\n\r\nNow, in some package file I have:\r\n\r\n```\r\n$ cat package.py\r\n...\r\n   blas_libs = spec['blas'].libs.joined(';')\r\n```\r\n\r\nThe call to `spec['blas'].libs` eventually makes its way to [`find`](https://github.com/spack/spack/blob/develop/lib/spack/llnl/util/filesystem.py#L1392) which calls [`_find_recursive`](https://github.com/spack/spack/blob/develop/lib/spack/llnl/util/filesystem.py#L881).  `_find_recursive` walks the entire `root` directory, which in this case is `/usr`.    For systems that have an enormous number of files/directories in the root directory this call can take an excessive amount of time.  In one test I ran, this call talk in excess of 30 minutes (at which point I stopped the installation).\r\n\r\nClearly, it should not take tens of minutes to find the `blas` libraries!\r\n\r\nPerhaps some kind of `hint` keyword can be propagated down to `_find_recursive` so that `find_libraries` searches only `/usr/lib/` and `/usr/lib64` (in this example)",
    "performed_via_github_app": null
}