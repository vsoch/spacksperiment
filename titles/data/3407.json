{
    "url": "https://api.github.com/repos/spack/spack/issues/3407",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3407/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3407/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3407/events",
    "html_url": "https://github.com/spack/spack/issues/3407",
    "id": 213469550,
    "node_id": "MDU6SXNzdWUyMTM0Njk1NTA=",
    "number": 3407,
    "title": "trying to add IBM clang-gpu on ray.llnl.gov",
    "user": {
        "login": "JaeseungYeom",
        "id": 12957608,
        "node_id": "MDQ6VXNlcjEyOTU3NjA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/12957608?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JaeseungYeom",
        "html_url": "https://github.com/JaeseungYeom",
        "followers_url": "https://api.github.com/users/JaeseungYeom/followers",
        "following_url": "https://api.github.com/users/JaeseungYeom/following{/other_user}",
        "gists_url": "https://api.github.com/users/JaeseungYeom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JaeseungYeom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JaeseungYeom/subscriptions",
        "organizations_url": "https://api.github.com/users/JaeseungYeom/orgs",
        "repos_url": "https://api.github.com/users/JaeseungYeom/repos",
        "events_url": "https://api.github.com/users/JaeseungYeom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JaeseungYeom/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-03-10T22:31:30Z",
    "updated_at": "2020-08-26T11:15:39Z",
    "closed_at": "2020-08-26T11:15:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is a pre-production compiler. However, I am trying to take advantage of Spack.\r\nSo, I attempted to add it, and it did not work.\r\nI tried it on installing Metis and failed as shown below. (Some of the characters are not correctly shown due to board limitations)\r\n```\r\n$ spack install metis %clang-gpu\r\n==> Installing metis\r\n==> Installing cmake\r\n==> Installing ncurses\r\n==> Using cached archive: /....../spack/var/spack/cache/ncurses/ncurses-6.0.tar.gz\r\n==> Already staged ncurses-6.0-dmh6crdnvfnmxbdohokizawx35dtixvw in /....../spack/var/spack/stage/ncurses-6.0-dmh6crdnvfnmxbdohokizawx35dtixvw\r\n==> Already patched ncurses\r\n==> Building ncurses [AutotoolsPackage]\r\n==> Executing phase : 'autoreconf'\r\n==> Executing phase : 'configure'\r\n==> Executing phase : 'build'\r\n==> Error: ProcessError: Command exited with status 2:\r\n    'make' '-j160'\r\n/....../spack/lib/spack/spack/build_systems/autotools.py:275, in build:\r\n     270      def build(self, spec, prefix):\r\n     271          \"\"\"Makes the build targets specified by\r\n     272          :py:attr:``~.AutotoolsPackage.build_targets``\r\n     273          \"\"\"\r\n     274          with working_dir(self.build_directory):\r\n  >> 275              inspect.getmodule(self).make(*self.build_targets)\r\n\r\nSee build log for details:\r\n/var/tmp/.../spack-stage/spack-stage-3H_y8m/ncurses-6.0/spack-build.out\r\n```\r\n=========================================================\r\nThe last couple of lines in the file above contains the following\r\n```\r\n/var/tmp/.../ncurses-93ee4e.o: In function `wide_show_attr':\r\n/var/tmp/.../ncurses-74fc3b.bc:(.text+0xefcc): undefined reference to `wattr_get'\r\nclang-3.8: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[1]: *** [Makefile:359: ncurses] Error 1\r\nmake[1]: Leaving directory '/var/tmp/.../spack-stage/spack-stage-3H_y8m/ncurses-6.0/test'\r\nmake: *** [Makefile:120: all] Error 2\r\n```\r\n========================================================\r\nHere are the changes I made\r\n\r\n1. modified two lines in `lib/spack/env/cc` as below:\r\n\r\nfrom `cc|c89|c99|gcc|clang|icc|pgcc|xlc|xlc_r)`\r\nto  `cc|c89|c99|gcc|clang|icc|pgcc|xlc|xlc_r|clang-gpu)`\r\n\r\nfrom  `c++|CC|g++|clang++|icpc|pgc++|xlc++|xlc++_r)`\r\nto  `c++|CC|g++|clang++|icpc|pgc++|xlc++|xlc++_r|clang++-gpu)`\r\n\r\n2. Added a directory `spack/lib/spack/env/clang-gpu`\r\n    and created symbolic links under the directory\r\n```\r\n    clang++-gpu -> ../cc\r\n    clang-gpu -> ../cc\r\n    f77 -> ../cc\r\n    f90 -> ../cc\r\n    f95 -> ../cc\r\n    fc -> ../cc\r\n    gfortran -> ../cc\r\n```\r\n3. Copied `lib/spack/spack/compilers/clang.py` to `lib/spack/spack/compilers/clang-gpu.py`\r\n    and modified it as below:\r\n```diff\r\n$ diff clang-gpu.py clang.py\r\n\r\n37c37\r\n< class ClangGpu(Compiler):\r\n---\r\n> class Clang(Compiler):\r\n39c39\r\n<     cc_names = ['clang-gpu']\r\n---\r\n>     cc_names = ['clang']\r\n42c42\r\n<     cxx_names = ['clang++-gpu']\r\n---\r\n>     cxx_names = ['clang++']\r\n51,52c51,52\r\n<     link_paths = {'cc': 'clang-gpu/clang-gpu',\r\n<                   'cxx': 'clang-gpu/clang++-gpu',\r\n---\r\n>     link_paths = {'cc': 'clang/clang',\r\n>                   'cxx': 'clang/clang++',\r\n55,56c55,56\r\n<                   'f77': 'clang-gpu/gfortran',\r\n<                   'fc': 'clang-gpu/gfortran'}\r\n---\r\n>                   'f77': 'clang/gfortran',\r\n>                   'fc': 'clang/gfortran'}\r\n158,159c158,159\r\n<         if not self.is_apple or basename not in ('clang-gpu', 'clang++-gpu'):\r\n<             return super(ClangGpu, self)._find_full_path(path)\r\n---\r\n>         if not self.is_apple or basename not in ('clang', 'clang++'):\r\n>             return super(Clang, self)._find_full_path(path)\r\n199c199\r\n<         super(ClangGpu, self).setup_custom_environment(pkg, env)\r\n---\r\n>         super(Clang, self).setup_custom_environment(pkg, env)\r\n240c240\r\n<             bins = ['c++', 'c89', 'c99', 'cc', 'clang-gpu', 'clang++-gpu', 'cpp']\r\n---\r\n>             bins = ['c++', 'c89', 'c99', 'cc', 'clang', 'clang++', 'cpp']\r\n```\r\n4. Added lines to `~/.spack/linux/compilers.yaml`\r\n```yaml\r\ncompilers:\r\n- compiler:\r\n    environment: {}\r\n    extra_rpaths: []\r\n    flags: {}\r\n    modules: []\r\n    operating_system: rhel7\r\n    paths:\r\n      cc: /usr/tcetmp/bin/clang-gpu\r\n      cxx: /usr/tcetmp/bin/clang++-gpu\r\n      f77: /usr/bin/gfortran\r\n      fc: /usr/bin/gfortran\r\n    spec: clang-gpu@3.8.0\r\n    target: ppc64le\r\n```\r\n=========================================================\r\nAny help would be appreciated. Thanks.",
    "performed_via_github_app": null
}