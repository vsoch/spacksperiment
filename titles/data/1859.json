{
    "url": "https://api.github.com/repos/spack/spack/issues/1859",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/1859/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/1859/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/1859/events",
    "html_url": "https://github.com/spack/spack/issues/1859",
    "id": 179329820,
    "node_id": "MDU6SXNzdWUxNzkzMjk4MjA=",
    "number": 1859,
    "title": "require MPI to be always built with Fortran",
    "user": {
        "login": "davydden",
        "id": 8023934,
        "node_id": "MDQ6VXNlcjgwMjM5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8023934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davydden",
        "html_url": "https://github.com/davydden",
        "followers_url": "https://api.github.com/users/davydden/followers",
        "following_url": "https://api.github.com/users/davydden/following{/other_user}",
        "gists_url": "https://api.github.com/users/davydden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davydden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davydden/subscriptions",
        "organizations_url": "https://api.github.com/users/davydden/orgs",
        "repos_url": "https://api.github.com/users/davydden/repos",
        "events_url": "https://api.github.com/users/davydden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davydden/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-09-26T20:32:14Z",
    "updated_at": "2016-10-26T16:12:26Z",
    "closed_at": "2016-10-26T16:12:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Since currently we can't pass any variants in virtual packages (see https://github.com/LLNL/spack/issues/1712), there are several options:\n1. To each relevant package add `asserts` to make sure `spec['mpi'].mpif77` and `spec['mpi'].mpifc` point to existing files. If not, raise en error that `mpi` installation does not contain fortran wrappers and users need to make sure that `Fortran` compiler is set and re-build `mpi`. This is doable but potentially **a lot of code duplication** which is not a solution, but a workaround.\n2. Leave things as is and if something fails to build, let users suffer and dig into output logs to find out that they are building a package which needs fortran but their `mpi` is built without `fortran`.\n3. Force all `mpi` implementation to provide Fortran wrappers. Throw an error if fortran compiler is not available during build time. That is the current behaviour of `mpich`, but `openmpi` allows to install it without `fortran`. In the HPC context, probably 99% of times people do have Fortran compilers around. Most likely only mac users may suffer a bit as they will need to always mix `clang` with `gfortran` even if they don't plant to compile packages which need fortran wrappers. But if @tgamblin can engineer a quick fix for this setup (see https://github.com/LLNL/spack/issues/1850#issuecomment-249449306), then i think it's a viable solution. \n\nin reference to https://github.com/LLNL/spack/pull/1516, https://github.com/LLNL/spack/pull/1441 and https://github.com/LLNL/spack/pull/1084.\n\n@pramodk @suraia @alalazo ping.\n\nI am in favour of (3).\n\np.s. i don't consider (2) an option, but I list it here anyway.\n",
    "performed_via_github_app": null
}