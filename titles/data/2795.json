{
    "url": "https://api.github.com/repos/spack/spack/issues/2795",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2795/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2795/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2795/events",
    "html_url": "https://github.com/spack/spack/issues/2795",
    "id": 199876425,
    "node_id": "MDU6SXNzdWUxOTk4NzY0MjU=",
    "number": 2795,
    "title": "Need a method of blacklisting compilers for packages",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 446615135,
            "node_id": "MDU6TGFiZWw0NDY2MTUxMzU=",
            "url": "https://api.github.com/repos/spack/spack/labels/configuration",
            "name": "configuration",
            "color": "bfd4f2",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-10T16:58:34Z",
    "updated_at": "2017-11-22T13:48:33Z",
    "closed_at": "2017-11-22T13:48:33Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Some packages cannot be built with certain compilers. For example, I am unable to build `openssl`, `libpciaccess`, `bison`, `ncurses`, and `pkg-config` with the PGI compilers. This is not Spack's fault, the packages contain sloppy code and PGI is more strict than GCC. NAG is even more strict, and has a much larger list of packages that it cannot build.\r\n\r\nI need to build a software stack including MPI, HDF 4/5, NetCDF, and pNetCDF with 4 different compilers, including PGI and NAG. But all of these unbuildable packages are picked up as dependencies. I would like to build these dependencies with GCC instead. So how can I do that?\r\n\r\nOne way is to manually put `^libpciaccess%gcc ^bison%gcc ^ncurses%gcc ... etc.` on the install line every time I build them. This is tedious, but it should work. Except it doesn't due to the bug reported in #2786.\r\n\r\nBut that option is still tedious and can't be shared with other users. Is there a way we could do this in our existing framework? One way would be to put something like:\r\n```yaml\r\npackages:\r\n  libpciaccess:\r\n    compiler: [gcc, intel, nag]\r\n```\r\nin the default `packages.yaml`. This would mean build with gcc or intel if we are using those compilers, or build with gcc if we are using pgi. But this is also broken (see #1371)\r\n\r\nSo at this point, I've had to comment out all of those dependencies from the packages I need to install. Luckily they are available on the system. But a better solution would be much appreciated.",
    "performed_via_github_app": null
}