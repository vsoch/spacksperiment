{
    "url": "https://api.github.com/repos/spack/spack/issues/1950",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/1950/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/1950/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/1950/events",
    "html_url": "https://github.com/spack/spack/issues/1950",
    "id": 181514994,
    "node_id": "MDU6SXNzdWUxODE1MTQ5OTQ=",
    "number": 1950,
    "title": "Good Sanity Tests",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908755,
            "node_id": "MDU6TGFiZWw3MzkwODc1NQ==",
            "url": "https://api.github.com/repos/spack/spack/labels/duplicate",
            "name": "duplicate",
            "color": "cccccc",
            "default": true,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 456341797,
            "node_id": "MDU6TGFiZWw0NTYzNDE3OTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/tests",
            "name": "tests",
            "color": "b60205",
            "default": false,
            "description": "General test capability(ies)"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-06T20:18:19Z",
    "updated_at": "2017-04-13T18:08:43Z",
    "closed_at": "2017-04-13T18:08:43Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I finally came up with some sanity tests I think could be used in a pretty general way.  [The way I saw at EasyBuild, where sanity tests are based on the presence/absence of certain key files, is brittle and not very effective.]\n- For binary packages: search the install directory for any ELF files and make sure that `ldd xxx` does not yield any \"not found\" on them.  This test method could be configured to include/exclude particular files.  But by default, it would not impose any particular files being installed, just look for any ELF binaries.  Because of RPATHs, this should work with a blank LD_LIBRARY_PATH.\n- For Python packages: Look into the installed \"egg\" and make sure that the top-level packages (at least) can be imported via `python -c import xxx` (or probably better... write a short script to import everything and then run it).  Because Python doesn't (yet) have RPATH-like capabilities, Spack would have to load the correct modules to make this work... it should work if Spack loads the modules for package xxx and all its dependencies (eg: `spack module loads -r`)\n\nBoth of these sanity tests are general, and robust to arbitrary changes the package might make to what files it installs.\n",
    "performed_via_github_app": null
}