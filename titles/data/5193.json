{
    "url": "https://api.github.com/repos/spack/spack/issues/5193",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5193/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5193/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5193/events",
    "html_url": "https://github.com/spack/spack/issues/5193",
    "id": 252348181,
    "node_id": "MDU6SXNzdWUyNTIzNDgxODE=",
    "number": 5193,
    "title": "Bootstrap extension to support a chroot / VM environment",
    "user": {
        "login": "TheTimmy",
        "id": 9502809,
        "node_id": "MDQ6VXNlcjk1MDI4MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9502809?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheTimmy",
        "html_url": "https://github.com/TheTimmy",
        "followers_url": "https://api.github.com/users/TheTimmy/followers",
        "following_url": "https://api.github.com/users/TheTimmy/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheTimmy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TheTimmy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheTimmy/subscriptions",
        "organizations_url": "https://api.github.com/users/TheTimmy/orgs",
        "repos_url": "https://api.github.com/users/TheTimmy/repos",
        "events_url": "https://api.github.com/users/TheTimmy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TheTimmy/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446623896,
            "node_id": "MDU6TGFiZWw0NDY2MjM4OTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/platform-support",
            "name": "platform-support",
            "color": "bfdadc",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-08-23T16:48:21Z",
    "updated_at": "2020-02-24T15:01:49Z",
    "closed_at": "2020-02-24T15:01:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI'm currently working on a project, which aims to create a chroot / VM environment out of the box within spack. This should avoid that a compiler link against a library from the host system. This also offers the possibility to compile for different platforms through a VM. The basic usage should be something like:\r\n\r\nspack bootstrap \u2013isolate --extra_args_depend_on_impl  bootstrap_dir\r\n\r\nand then build a binary with the usual:\r\n\r\nspack install libelf, glib, ...\r\n\r\n\r\nBut before I continue to complete this and submit a pull request, I would like to hear if there is a general interest in such a feature, or some thoughts / improvements from the spack community.\r\n\r\nWhat I actually came up with, where five different implementations (see list below), but I consider the 3rd and 5th implementation to be the most fitting approach, which align more or less to the spack philosophy. Therefore I currently consider them for the final implementation.\r\n\r\n1.)\r\nA chroot environment where the files get mount binded by a whitelist.\r\n- Pros:\r\n\t- Fine control, which files of the system should be used\r\n- Cons:\r\n\t- A lot of work to get to a solid whitelist, which contains all basic files needed to run spack\r\n\t- Need administrator rights to run\r\n\r\n2.)\r\nA chroot environment based on the whitelist approach but with automatic dependency resolval by dpkg.\r\n- Pros:\r\n\t- Fine control, which files and packages of the system should be used\r\n\t- Dependencies get resolved automatically\r\n- Cons:\r\n\t- No control over what files get included by a dependency\r\n\t- Slow, because it results in a lot of mount bind and dpkg calls (5 - 10min on an ssd)\r\n\t- Need administrator rights to run\r\n\t- Depends on dpkg\r\n\r\n3.)\r\nA chroot environment, based on a distribution, which is packed into a tar and then extracted into a bootstrap dictionary. As for example distributions which got generated with mkosi or are prepacked by OpenStack or the distributer of the distribution itself.\r\n- Pros:\r\n\t- Control over all installed packages\r\n\t- Simple to use, because it is possible to use existing packages\r\n\t- Distributions which use the standard dictionary structure can be used inside another distribution\r\n\t- Can be mounted permanently in fstab, because it need to mount /dev and /etc/resolv.conf only\r\n\t- No administrator rights required after bootstraping\r\n- Cons:\r\n\t- Some distributions, like Arch needs an extensive preconfiguration, before they can be used\r\n\t- Currently have to be packed as tar.gz\r\n\r\n4.)\r\nA container system approach. I dropped this one, because it creates more problems than it solves.  Docker currently switches to an community / enterprise model. I avoided Docker, because I don't know if the community edition offers all necessary features. I also tried rkt, but there philosophy is to destroy all containers after there usage, so it's not feasible with spack.\r\n\r\n5.)\r\nUse a VM with libvirt to create an environment. This is the most flexible solution but also the heaviest one in performance and storage.\r\n- Pros:\r\n\t- Allows every distribution which supports spack to run\r\n\t- Multiple architectures possible\r\n\t- Can be installed easily from an ISO\r\n\t- No administrator rights required\r\n- Cons:\r\n\t- A bit slower than the other approaches, without virtualization it is horrible slow\r\n\t- Needs an ssh server on the distribution for communication between the two spack instances\r\n\t- Compiled binaries have to be copied to the host or they must run inside the VM\r\n\t- Introduces some dependencies like Qemu-KVM libvirt-bin, virtinst, qemu-agent.",
    "performed_via_github_app": null
}