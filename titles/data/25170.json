{
    "url": "https://api.github.com/repos/spack/spack/issues/25170",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/25170/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/25170/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/25170/events",
    "html_url": "https://github.com/spack/spack/pull/25170",
    "id": 957390774,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzAwODI1NjAw",
    "number": 25170,
    "title": "don't spin writer daemon when < /dev/null",
    "user": {
        "login": "dylex",
        "id": 106587,
        "node_id": "MDQ6VXNlcjEwNjU4Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/106587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dylex",
        "html_url": "https://github.com/dylex",
        "followers_url": "https://api.github.com/users/dylex/followers",
        "following_url": "https://api.github.com/users/dylex/following{/other_user}",
        "gists_url": "https://api.github.com/users/dylex/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dylex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dylex/subscriptions",
        "organizations_url": "https://api.github.com/users/dylex/orgs",
        "repos_url": "https://api.github.com/users/dylex/repos",
        "events_url": "https://api.github.com/users/dylex/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dylex/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 994582045,
            "node_id": "MDU6TGFiZWw5OTQ1ODIwNDU=",
            "url": "https://api.github.com/repos/spack/spack/labels/utilities",
            "name": "utilities",
            "color": "73e251",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-01T04:49:09Z",
    "updated_at": "2021-08-02T13:52:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/25170",
        "html_url": "https://github.com/spack/spack/pull/25170",
        "diff_url": "https://github.com/spack/spack/pull/25170.diff",
        "patch_url": "https://github.com/spack/spack/pull/25170.patch"
    },
    "body": "When running `spack install < /dev/null`, during a build the `_writer_daemon` process uses 100% cpu.  It's continually polling for input and checking tty state, but since /dev/null is always readable (essentially at EOF), it ends up spinning. (The same would happen with stdin redirected from any file really.)\r\n\r\nThis looks like this:\r\n```\r\n00:01:31.717831 select(49, [42 48], [], [], {tv_sec=0, tv_usec=100000}) = 1 (in [48], left {tv_sec=0, tv_usec=99999})\r\n00:01:31.717860 ioctl(48, TCGETS, 0x7fffffff7ab0) = -1 ENOTTY (Inappropriate ioctl for device)\r\n00:01:31.717885 rt_sigaction(SIGTTIN, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, 8) = 0\r\n00:01:31.717913 read(48, \"\", 8192)      = 0\r\n00:01:31.717937 rt_sigaction(SIGTTIN, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, 8) = 0\r\n00:01:31.717964 select(49, [42 48], [], [], {tv_sec=0, tv_usec=100000}) = 1 (in [48], left {tv_sec=0, tv_usec=99999})\r\n00:01:31.717992 ioctl(48, TCGETS, 0x7fffffff7ab0) = -1 ENOTTY (Inappropriate ioctl for device)\r\n00:01:31.718016 rt_sigaction(SIGTTIN, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, 8) = 0\r\n00:01:31.718042 read(48, \"\", 8192)      = 0\r\n00:01:31.718066 rt_sigaction(SIGTTIN, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x15555472c630}, 8) = 0\r\n```\r\n48 here is the dup'd stdin /dev/null.\r\n\r\nThis patch just disables all stdin processing if stdin is not a tty.  Since the only reason it's using stdin at all is to check for the user pressing `v` (to toggle verbose), and this really only makes sense to do on a terminal, this seems reasonable.  (And, of course, builds end up going somewhat faster, too.)",
    "performed_via_github_app": null
}