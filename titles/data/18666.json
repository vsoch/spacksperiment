{
    "url": "https://api.github.com/repos/spack/spack/issues/18666",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/18666/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/18666/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/18666/events",
    "html_url": "https://github.com/spack/spack/pull/18666",
    "id": 701260020,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg2NzQ3MDIy",
    "number": 18666,
    "title": "py-charm4py: new package",
    "user": {
        "login": "payerle",
        "id": 19287807,
        "node_id": "MDQ6VXNlcjE5Mjg3ODA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19287807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/payerle",
        "html_url": "https://github.com/payerle",
        "followers_url": "https://api.github.com/users/payerle/followers",
        "following_url": "https://api.github.com/users/payerle/following{/other_user}",
        "gists_url": "https://api.github.com/users/payerle/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/payerle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/payerle/subscriptions",
        "organizations_url": "https://api.github.com/users/payerle/orgs",
        "repos_url": "https://api.github.com/users/payerle/repos",
        "events_url": "https://api.github.com/users/payerle/events{/privacy}",
        "received_events_url": "https://api.github.com/users/payerle/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-09-14T16:43:17Z",
    "updated_at": "2020-10-12T16:35:18Z",
    "closed_at": "2020-10-08T21:29:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/18666",
        "html_url": "https://github.com/spack/spack/pull/18666",
        "diff_url": "https://github.com/spack/spack/pull/18666.diff",
        "patch_url": "https://github.com/spack/spack/pull/18666.patch"
    },
    "body": "Charm++ for python\r\n\r\nInstallation notes:\r\n\r\n1) charm4py ships with its own charm++ tarball.  It really wants\r\nto use the version it ships with. It also builds charm++ in a special way to\r\nproduce libcharm.so (but not charmc, etc), so it does not seem\r\nworthwhile to try to hack to build using a spack installed charmpp.\r\n\r\n2) Originally, the installation was failing due to unresolved cuda\r\nsymbols when setup.py was doing a ctypes.CDLL of libcharm.so (in order\r\nto verify version?).  This appears to be due to the fact that\r\nlibcharm.so had undefined cuda symbols, but did not show libcudart.so as\r\na dependency (in e.g. ldd output).  To fix this, I had to add\r\nlibcudart.so explicitly when linking libcharm.so, but since setup.py\r\nuntars a tarball to build libcharm, the solution was a tad convoluted:\r\n2a) Add a patch in spack to py-charm4py which creates a patchfile\r\n\"spack-charm4py-setup.py.patch\" which will modify a Makefile file (after it\r\nis untarred) to add the flags in env var SPACK_CHARM4PY_EXTRALIBS to\r\nthe link command for libcharm.so\r\n2b) The spack patch file also patches setup.py to run patch using the\r\naforementioned patchfile to patch the Makefile after it is untarred, and\r\nsets the SPACK_CHARM4PY_EXTRALIBS variable appropriately in the setup\r\nenvironment.",
    "performed_via_github_app": null
}