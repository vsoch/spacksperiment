{
    "url": "https://api.github.com/repos/spack/spack/issues/3123",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3123/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3123/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3123/events",
    "html_url": "https://github.com/spack/spack/issues/3123",
    "id": 206858717,
    "node_id": "MDU6SXNzdWUyMDY4NTg3MTc=",
    "number": 3123,
    "title": "Spec Build Phase",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908755,
            "node_id": "MDU6TGFiZWw3MzkwODc1NQ==",
            "url": "https://api.github.com/repos/spack/spack/labels/duplicate",
            "name": "duplicate",
            "color": "cccccc",
            "default": true,
            "description": null
        },
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-02-10T17:36:47Z",
    "updated_at": "2017-02-10T18:50:58Z",
    "closed_at": "2017-02-10T18:36:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@alalazo \r\n\r\nA number of packages have restrictions beyond what the concretizer can check for in the specs.  Currently, those restrictions generally go in `install()`, and do not get run until the user tries to install a package.  For example, #3119 \r\n\r\nThis proposal is to create a new phase in all package superclasses (including `Package`) call `spec`.  This phase will be run either:\r\n\r\n1. After concretization in `spack spec`, `spack install`, etc --- allowing the user to know that this combination won't compile, *berfore* install is attempted.\r\n\r\n2. During concretization, allowing the concretizer the possibility to pick something else that *will* work.\r\n\r\nI understand that (2) would be a bit harder.  But (1) should be simple, and yield immediate benefit over what we have now.  (For example... if I say `spack install myproject`, Spack could spend a lot of time installing prerequisites before it comes back to me and tells me my spec won't install.  This proposal would solve that issue).\r\n\r\nThoughts?\r\n",
    "performed_via_github_app": null
}