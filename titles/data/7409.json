{
    "url": "https://api.github.com/repos/spack/spack/issues/7409",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/7409/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/7409/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/7409/events",
    "html_url": "https://github.com/spack/spack/issues/7409",
    "id": 302892615,
    "node_id": "MDU6SXNzdWUzMDI4OTI2MTU=",
    "number": 7409,
    "title": "Proposal: Add upgrade-in-place functionality",
    "user": {
        "login": "becker33",
        "id": 13971568,
        "node_id": "MDQ6VXNlcjEzOTcxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13971568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/becker33",
        "html_url": "https://github.com/becker33",
        "followers_url": "https://api.github.com/users/becker33/followers",
        "following_url": "https://api.github.com/users/becker33/following{/other_user}",
        "gists_url": "https://api.github.com/users/becker33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/becker33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/becker33/subscriptions",
        "organizations_url": "https://api.github.com/users/becker33/orgs",
        "repos_url": "https://api.github.com/users/becker33/repos",
        "events_url": "https://api.github.com/users/becker33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/becker33/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 466955297,
            "node_id": "MDU6TGFiZWw0NjY5NTUyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/proposal",
            "name": "proposal",
            "color": "0e8a16",
            "default": false,
            "description": null
        },
        {
            "id": 511006597,
            "node_id": "MDU6TGFiZWw1MTEwMDY1OTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/security",
            "name": "security",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "becker33",
        "id": 13971568,
        "node_id": "MDQ6VXNlcjEzOTcxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13971568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/becker33",
        "html_url": "https://github.com/becker33",
        "followers_url": "https://api.github.com/users/becker33/followers",
        "following_url": "https://api.github.com/users/becker33/following{/other_user}",
        "gists_url": "https://api.github.com/users/becker33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/becker33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/becker33/subscriptions",
        "organizations_url": "https://api.github.com/users/becker33/orgs",
        "repos_url": "https://api.github.com/users/becker33/repos",
        "events_url": "https://api.github.com/users/becker33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/becker33/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "becker33",
            "id": 13971568,
            "node_id": "MDQ6VXNlcjEzOTcxNTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13971568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/becker33",
            "html_url": "https://github.com/becker33",
            "followers_url": "https://api.github.com/users/becker33/followers",
            "following_url": "https://api.github.com/users/becker33/following{/other_user}",
            "gists_url": "https://api.github.com/users/becker33/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/becker33/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/becker33/subscriptions",
            "organizations_url": "https://api.github.com/users/becker33/orgs",
            "repos_url": "https://api.github.com/users/becker33/repos",
            "events_url": "https://api.github.com/users/becker33/events{/privacy}",
            "received_events_url": "https://api.github.com/users/becker33/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-06T22:29:00Z",
    "updated_at": "2019-10-23T20:11:36Z",
    "closed_at": "2019-10-23T20:11:36Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We've received some requests for an upgrade-in-place capability in Spack.\r\n\r\nMy current thoughts on the policy side:\r\n\r\n- We want to maintain the unique mapping from specs to prefixes\r\n- We want to be able to deprecate software with security flaws without breaking packages that depend on it.\r\n\r\nOn the technical side, to accomplish the above:\r\n\r\n- We cannot install a new spec over the existing install\r\n- We can remove the old installation and create a symbolic link from the old installation to a new one.\r\n-  We can note in the install database that the old installation was deprecated and symlink'ed into the new installation.\r\n- Once the new compiler is implemented, we can prevent the concretizer from concretizing against the old spec.\r\n\r\nProposal:\r\n\r\nI will create a `spack upgrade` or `spack deprecate` command that takes two specs, the spec to deprecate and the spec to replace it with. It will implement the removal of the old binaries and the creation of the symlink from the old prefix to the new. This will also make the database changes necessary, but will not implement the changes to the concretizer as the current concretizer implementation cannot handle that logic.\r\n\r\nComments on either policy or technical specs are welcome. I will leave this up at least a few days before beginning implementation to give people an opportunity to comment.",
    "performed_via_github_app": null
}