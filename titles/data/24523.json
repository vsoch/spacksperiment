{
    "url": "https://api.github.com/repos/spack/spack/issues/24523",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/24523/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/24523/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/24523/events",
    "html_url": "https://github.com/spack/spack/issues/24523",
    "id": 930127371,
    "node_id": "MDU6SXNzdWU5MzAxMjczNzE=",
    "number": 24523,
    "title": "External packages && spack ci generate \u2192 KeyError",
    "user": {
        "login": "muffgaga",
        "id": 1506210,
        "node_id": "MDQ6VXNlcjE1MDYyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1506210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/muffgaga",
        "html_url": "https://github.com/muffgaga",
        "followers_url": "https://api.github.com/users/muffgaga/followers",
        "following_url": "https://api.github.com/users/muffgaga/following{/other_user}",
        "gists_url": "https://api.github.com/users/muffgaga/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/muffgaga/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/muffgaga/subscriptions",
        "organizations_url": "https://api.github.com/users/muffgaga/orgs",
        "repos_url": "https://api.github.com/users/muffgaga/repos",
        "events_url": "https://api.github.com/users/muffgaga/events{/privacy}",
        "received_events_url": "https://api.github.com/users/muffgaga/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-06-25T12:24:26Z",
    "updated_at": "2021-06-28T13:40:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hey *, (CC @scottwittenburg as you seem to be the gitlab ci contributor :); and @healther FYI)\r\n\r\nI am currently trying to establish a gitlab-based build flow for a spack-managed software environment.\r\nWhen testing packages with MPI dependencies I need to specify an package as an external package as the library will (later) be provided by the HPC environment on what we are actually running on.\r\nFor a simple test I just wanted to add the system's mpi library as an external package (mpich 3.0.4 from centos7).\r\n\u21d2 The \"generate\" step in gitlab fails with the error below `KeyError: 'mpich/t2ghpmp'`.\r\n\r\nI know this is a rather long error description and probably doesn't directly pinpoint the problem\r\n\u2192 I am be very happy to start a deeper investigation :).\r\n\r\nGeneral questions:\r\n* Is there support for external packages in the `spack ci generate` gitlab flow?\r\n* Does spack's gitlab-ci `bootstrap` support installing non-compiler packages at an early stage (e.g. external packages)?\r\n  * This could be also interesting for the clingo concretizer because the centos7 compiler is too old for building it in the bootstrapping phase.\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\nCreate a gitlab/CI repo, fill with the following contents:\r\n\r\n`spack.yaml`\r\n```yaml\r\nspack:\r\n  view: false\r\n  concretization: separately\r\n\r\n  definitions:\r\n  - compiler-pkgs:\r\n    - gcc@10.3.0 os=centos7\r\n  - system-pkgs:\r\n    - mpich %gcc@10.3.0\r\n  - pkgs:\r\n    # neuron depends on mpi by default\r\n    - neuron\r\n  - compilers:\r\n    - '%gcc@10.3.0'\r\n  - oses:\r\n    - os=centos7\r\n\r\n  specs:\r\n  - matrix:\r\n    - [$pkgs]\r\n    - [$compilers]\r\n    - [$oses]\r\n\r\n  mirrors:\r\n    # whatever\r\n\r\n  gitlab-ci:\r\n    bootstrap:\r\n    - name: compiler-pkgs\r\n      compiler-agnostic: true\r\n    - name: system-pkgs\r\n      compiler-agnostic: true\r\n\r\n    mappings:\r\n    - match:\r\n      - os=centos7\r\n      runner-attributes:\r\n        tags:\r\n        - docker-runner\r\n        image: # whatever\r\n    before_script:\r\n    - git clone ${SPACK_REPO}\r\n    - pushd spack && git checkout ${SPACK_CHECKOUT_VERSION} && git log -n 1 && popd\r\n    - . \"./spack/share/spack/setup-env.sh\"\r\n    script:\r\n    - spack env activate --without-view .\r\n    - spack -d ci rebuild\r\n    enable-artifacts-buildcache: true\r\n    rebuild-index: true\r\n```\r\n\r\n`external_mpich.yaml`:\r\n```\r\n```yaml\r\n  mpi:\r\n    buildable: false\r\n  mpich:\r\n    buildable: false\r\n    externals:\r\n    - spec: mpich@3.0.4\r\n      prefix: /usr\r\n```\r\n\r\n`.gitlab-ci.yml`\r\n```yaml\r\ndefault:\r\n  image:\r\n    name: #whatever\r\n    entrypoint: [\"\"]\r\n  tags:\r\n    - docker-runner\r\n\r\nstages:\r\n  - generate\r\n  - build\r\n\r\nvariables:\r\n  SPACK_REPO: # whatever\r\n  SPACK_REF: # whatever\r\n\r\ngenerate-pipeline:\r\n  stage: generate\r\n  before_script:\r\n    - git clone ${SPACK_REPO}\r\n    - pushd spack && git checkout ${SPACK_REF} && git log -n 1 && popd\r\n    - . \"./spack/share/spack/setup-env.sh\"\r\n    # I also tried adding this in this file with the same results\r\n    - cat external_mpich.yaml >> ./spack/etc/spack/packages.yaml\r\n  script:\r\n    - spack -d env activate --without-view .\r\n    - spack -d ci generate --optimize\r\n      --output-file \"${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml\"\r\n  artifacts:\r\n    paths:\r\n      - \"${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml\"\r\n\r\nbuild-jobs:\r\n  stage: build\r\n  trigger:\r\n    include:\r\n      - artifact: \"jobs_scratch_dir/pipeline.yml\"\r\n        job: generate-pipeline\r\n    strategy: depend\r\n```\r\n\r\n### Error Message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/builds/emuller/brainscales-spack-test/spack/bin/spack\", line 76, in <module>\r\n    sys.exit(spack.main.main())\r\n  File \"/builds/emuller/brainscales-spack-test/spack/lib/spack/spack/main.py\", line 773, in main\r\n    return _invoke_command(command, parser, args, unknown)\r\n  File \"/builds/emuller/brainscales-spack-test/spack/lib/spack/spack/main.py\", line 497, in _invoke_command\r\n    return_val = command(parser, args)\r\n  File \"/builds/emuller/brainscales-spack-test/spack/lib/spack/spack/cmd/ci.py\", line 454, in ci\r\n    args.func(args)\r\n  File \"/builds/emuller/brainscales-spack-test/spack/lib/spack/spack/cmd/ci.py\", line 119, in ci_generate\r\n    use_dependencies=use_dependencies)\r\n  File \"/builds/emuller/brainscales-spack-test/spack/lib/spack/spack/ci.py\", line 765, in generate_gitlab_ci_yaml\r\n    enable_artifacts_buildcache))\r\n  File \"/whatever/spack/lib/spack/spack/ci.py\", line 502, in format_job_needs\r\n    dep_spec_info = stage_spec_dict[dep_spec_key]\r\nKeyError: 'mpich/t2ghpmp'\r\n```\r\n\r\n### Information on your system\r\n\r\n* The CI runners are based on Cent OS 7 docker containers.\r\n* GitLab Community Edition 13.12.5\r\n\r\n\r\n### Additional information\r\n\r\nI tried the following things:\r\n\r\n1. Adding the package (mpich from the underlying centos7 for testing purposes) to `spack/etc/spack/packages.yaml` \u2192 This yields the error mentioned at *Error Message*.\r\n\r\n2. As I saw similar problems in the past when using environments locally, I tried to add an install step in between environment activation and `spack ci generate` call:\r\n```\r\n    - spack -d env activate --without-view .\r\n    - spack install mpich\r\n    - spack -d ci generate --optimize\r\n      --output-file \"${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml\"\r\n```\r\nIt still fails, and the hashes don't match \u2192 system compiler != target compiler.\r\n\r\n3. I tried to add a dummy compiler (matching the target compiler) before installing the packages:\r\n```\r\n- compiler:\r\n    spec: gcc@10.3.0\r\n    paths:\r\n      cc: /usr/bin/gcc\r\n      cxx: /usr/bin/g++\r\n      f77: /usr/bin/gfortran\r\n      fc: /usr/bin/gfortran\r\n    flags: {}\r\n    operating_system: centos7\r\n    target: x86_64\r\n    modules: []\r\n    environment: {}\r\n    extra_rpaths: []\r\n```\r\n\u21d2 After `spack install` I now see:\r\n```\r\n$ spack install mpich\r\n[+] /usr (external mpich-3.0.4-t2ghpmplyispumd26m5eggt7c7qlxlkh)\r\n```\r\nand later `spack ci generate` fails with (stacktrace as above):\r\n```\r\nKeyError: 'mpich/t2ghpmp'\r\n```\r\n\r\nThe hashes seem to match, but I still get this error.\r\n\r\n4. I now tried to add a second list of packages for spack's gitlab-ci bootstrap thingy:\r\n```\r\n  definitions:\r\n  - compiler-pkgs:\r\n    - gcc@10.3.0 os=centos7\r\n  - system-pkgs:\r\n    - mpich %gcc@10.3.0\r\n\u2026\r\n  gitlab-ci:\r\n    bootstrap:\r\n    - name: compiler-pkgs\r\n      compiler-agnostic: true\r\n    - name: system-pkgs\r\n      compiler-agnostic: true\r\n```\r\nbut this still yields the same `KeyError` as above.\r\n\r\n5. I also pulled in the latest changes touching `{,cmd/}ci.py` \u2192 No change; I rebased on current HEAD \u2192 no change.\r\n\r\n6. I'm currently testing if commenting out `continue` in `ci.py` helps ;) \u2192 The line after \"Will not stage external pkg:\" (twice). \u21d2 The ci generate step terminates correctly:\r\n```\r\n[\u2026]\r\n==> [2021-06-25-16:46:13.360644] Stages for phase \"specs\"\r\n==> [2021-06-25-16:46:13.360682]   Staging summary:\r\n==> [2021-06-25-16:46:13.360715]     stage 0 (10 jobs):\r\n==> [2021-06-25-16:46:13.360937]       [x] berkeley-db/r3zalj3 -> berkeley-db@18.1.40%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.361182]       [x] findutils/ebv3de3 -> findutils@4.8.0%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.361492]       [x] libffi/stzzjh2 -> libffi@3.3%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.361740]       [x] libiconv/jgrcfwv -> libiconv@1.16%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.361970]       [x] libmd/5xcqoiw -> libmd@1.0.3%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.362213]       [x] libsigsegv/seobkx2 -> libsigsegv@2.13%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n==> [2021-06-25-16:46:13.362477]       [x] mpich/t2ghpmp -> mpich@3.0.4%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n[\u2026]\r\n==> [2021-06-25-16:46:13.371687]     stage 10 (1 jobs):\r\n==> [2021-06-25-16:46:13.371914]       [x] neuron/qdlenj7 -> neuron@7.8.2%gcc@10.3.0  arch=linux-centos7-sandybridge\r\n```\r\n\r\n\r\nThanks,\r\nEric",
    "performed_via_github_app": null
}