{
    "url": "https://api.github.com/repos/spack/spack/issues/20545",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/20545/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/20545/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/20545/events",
    "html_url": "https://github.com/spack/spack/issues/20545",
    "id": 774453902,
    "node_id": "MDU6SXNzdWU3NzQ0NTM5MDI=",
    "number": 20545,
    "title": "improve installation of Zoltran: imposing +int64 constrains on parmetis",
    "user": {
        "login": "ravil-mobile",
        "id": 19637079,
        "node_id": "MDQ6VXNlcjE5NjM3MDc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19637079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ravil-mobile",
        "html_url": "https://github.com/ravil-mobile",
        "followers_url": "https://api.github.com/users/ravil-mobile/followers",
        "following_url": "https://api.github.com/users/ravil-mobile/following{/other_user}",
        "gists_url": "https://api.github.com/users/ravil-mobile/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ravil-mobile/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ravil-mobile/subscriptions",
        "organizations_url": "https://api.github.com/users/ravil-mobile/orgs",
        "repos_url": "https://api.github.com/users/ravil-mobile/repos",
        "events_url": "https://api.github.com/users/ravil-mobile/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ravil-mobile/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-24T13:43:52Z",
    "updated_at": "2020-12-28T11:53:09Z",
    "closed_at": "2020-12-28T11:53:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "<!--*Please add a concise summary of your suggestion here.*-->\r\n\r\n### Rationale\r\nzoltan spec has a variant called  `int64` which imposes the corresponding constrain on metis. \r\nhttps://github.com/spack/spack/blob/6947951aaf9954b1dfd12ca7a9266d7335f07105/var/spack/repos/builtin/packages/zoltan/package.py#L37-L44\r\n\r\nThe same constrain must be applied to parmetis. \r\n\r\n\r\n<!--*Is your feature request related to a problem? Please describe it!*-->\r\n\r\n### Description\r\nI guess a solution can be something like\r\n```\r\ndepends_on('parmetis@4:', when='+parmetis') \r\ndepends_on('parmetis@4: +int64', when='+parmetis+int64')\r\n```\r\n\r\n<!--*Describe the solution you'd like and the alternatives you have considered.*-->\r\n\r\n\r\n### Additional information\r\n<!--*Add any other context about the feature request here.*-->\r\nI guess this happens because parmetis package has been recently updated and `int64` has been added. Because there was no such an option in parmetis for a long time people came up with a workaround by specifying `metis+int64` explicitly in their script. The parametis update brings an inconsistency because `int64`   is off by default in parmetis, however, and the ''legacy'' workaround imposes `int64` on metis.\r\nMy spack version is 0.16.0\r\n\r\n### General information\r\n\r\n- [x] I have run `spack --version` and reported the version of Spack\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n\r\n\r\n\r\n<!--If you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack!\r\n-->",
    "performed_via_github_app": null
}