{
    "url": "https://api.github.com/repos/spack/spack/issues/4159",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4159/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4159/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4159/events",
    "html_url": "https://github.com/spack/spack/issues/4159",
    "id": 227089752,
    "node_id": "MDU6SXNzdWUyMjcwODk3NTI=",
    "number": 4159,
    "title": "Naming of Spack commands",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 480046049,
            "node_id": "MDU6TGFiZWw0ODAwNDYwNDk=",
            "url": "https://api.github.com/repos/spack/spack/labels/UI",
            "name": "UI",
            "color": "d4c5f9",
            "default": false,
            "description": null
        },
        {
            "id": 471995122,
            "node_id": "MDU6TGFiZWw0NzE5OTUxMjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/commands",
            "name": "commands",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 456121338,
            "node_id": "MDU6TGFiZWw0NTYxMjEzMzg=",
            "url": "https://api.github.com/repos/spack/spack/labels/refactoring",
            "name": "refactoring",
            "color": "f28f2a",
            "default": false,
            "description": null
        },
        {
            "id": 521903170,
            "node_id": "MDU6TGFiZWw1MjE5MDMxNzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/user-experience",
            "name": "user-experience",
            "color": "bfdadc",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-05-08T15:47:05Z",
    "updated_at": "2020-03-05T21:45:26Z",
    "closed_at": "2020-03-05T21:45:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I had an interesting conversation the other day with a professor from MIT who is researching software design. He did a case study on git and found that the most reliable way of determining whether or not a command is well named is by asking multiple users exactly what they think it does. If everyone gives a different answer, it isn't well designed.\r\n\r\nI'm opening this issue for a candid discussion on whether or not our current Spack commands are aptly named and whether or not some of them should be merged. This will probably lead to many flame wars, so please treat each suggestion with constructive criticism. Even if you don't use some of these commands (I certainly don't), there are many users who do rely on them.\r\n\r\n### `list` vs `find`\r\n\r\nOkay, this is by far the most controversial change I'm suggesting. But I just want to make it clear that people who are switching to Spack from other package managers will routinely mix up these commands.\r\n\r\nIn this case, every package manager uses a different command. For Homebrew, `brew list` lists installed packages, while `brew search` lists available packages. For `dnf/yum`, `dnf list` seems to be used for listing available _and_ installed packages, while `dnf search` seems to be used for searching for specific packages. For Modules, `module list` lists loaded modules, while `module avail` lists available modules. \r\n\r\nI'm not sure if there are better names we could use, or if they are fine as is. So I'm open to suggestions on this one.\r\n\r\n###  `module load` vs `spack load` vs `spack module load`\r\n\r\nDisclaimer: I don't use these commands\r\n\r\nAs someone who doesn't use these commands, I don't really know what the difference is between these three things. Personally, I plan on sticking with `module load`. I'm fine with having a special Spack command that accepts specs, but we should only have one.\r\n\r\n### `clean` vs `purge`\r\n\r\nI mentioned this in #2942, but we should probably merge these commands. Thoughts on whether to call the command `clean` or `purge`? Or should `spack clean` with no argument clean all stages and `spack purge` be used to purge things like caches and databases? I actually like the latter idea more now that I think about it.\r\n\r\nEDIT: These commands were merged in #4970.\r\n\r\n### `config` vs `configure`\r\n\r\nHere we have two completely unrelated commands with similar names. It might be good to get rid of `config` and use `spack compiler edit` or `spack external get` do the same job (we are talking about adding a `spack external` command to add external packages in #2507).\r\n \r\n### `diy` vs `setup`\r\n(did there used to be a `spconfig` command too?)\r\n\r\nDisclaimer: I don't use these commands\r\n\r\nThese commands seem incredibly useful for developers, but based on the name alone I have no idea what the difference is. I was talking to Jim Amundson (@amundson?) the other day about a different developer command that he was working on (although not planning on contributing to Spack). I think @citibeth mentioned that there was some Spack Environments working group tasked with solving this problem, so I'll let them handle this.\r\n\r\n### `test` vs `install --run-tests`\r\n\r\nI think users who want to test their installations will be confused that `spack test` doesn't do what they think it does. This is probably an issue for a later date since we have a lot of current work on this front and things will likely change.\r\n\r\n### `md5` vs `sha256` vs `checksum`\r\n\r\nI think @citibeth has mentioned this before, but we should probably merge these commands.\r\n\r\nEDIT: #6428 removed the `md5` and `sha256` commands.\r\n\r\n### `doc` vs `docs`\r\n\r\n#3033 (currently) adds a `spack docs` command. There is already an existing `spack doc` command. As you can imagine, this is pretty confusing.\r\n\r\nEDIT: `doc` was renamed `pydoc`.\r\n\r\n### aliases\r\n\r\nDo we really need `spack compiler list` _and_ `spack compilers`? Also, why are there so many aliases for the subcommands of `spack view`? Every subcommand has 2 or 3 aliases:\r\n```\r\n$ spack view --help\r\nusage: spack view [-h] [-v] [-e EXCLUDE] [-d {true,false,yes,no}] ACTION ...\r\n\r\npositional arguments:\r\n  ACTION\r\n    symlink (add, soft)\r\n                        add package files to a filesystem view via symbolic\r\n                        links\r\n    hardlink (hard)     add packages files to a filesystem via via hard links\r\n    remove (rm)         remove packages from a filesystem view\r\n    statlink (status, check)\r\n                        check status of packages in a filesystem view\r\n```",
    "performed_via_github_app": null
}