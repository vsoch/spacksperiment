{
    "url": "https://api.github.com/repos/spack/spack/issues/1696",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/1696/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/1696/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/1696/events",
    "html_url": "https://github.com/spack/spack/issues/1696",
    "id": 174675934,
    "node_id": "MDU6SXNzdWUxNzQ2NzU5MzQ=",
    "number": 1696,
    "title": "Proposal: Enforcement of Trusted Downloads",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 73908758,
            "node_id": "MDU6TGFiZWw3MzkwODc1OA==",
            "url": "https://api.github.com/repos/spack/spack/labels/question",
            "name": "question",
            "color": "cc317c",
            "default": true,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 33,
    "created_at": "2016-09-02T04:00:51Z",
    "updated_at": "2017-01-13T16:38:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@tgamblin @davydden @ad\n\nIn an effort to ensure safety, Spack:\n1. Checksums tarball downloads.\n2. Refuses to install non-checksummed tarballs by default (unless the user specifies `--no-checksums`).\n\nUnfortunately, this approach does not meet Spack's security goals.  Because Spack will quite happily process any Git download, whether or not the user has specified `--no-checksums`.  Unless a checksum or Git hash is used to verify a download, I call it an untrusted download.  This is a real issue because a number of packages in Spack will default to untrusted Git downloads.  For example:\n\n```\n$ grep 'branch=' `find . -name '*.py'`\n./lib/spack/external/nose/plugins/cover.py:                branch=self.coverBranches, data_suffix=conf.worker,\n./lib/spack/spack/fetch_strategy.py:                hg='https://jay.grs.rwth-aachen.de/hg/lwm2', branch='torus')\n./var/spack/repos/builtin/packages/bbcp/package.py:            branch=\"master\")\n./var/spack/repos/builtin/packages/cbtf/package.py:    version('1.6', branch='master',\n./var/spack/repos/builtin/packages/cbtf-argonavis/package.py:    version('1.6', branch='master',\n./var/spack/repos/builtin/packages/cbtf-krell/package.py:    version('1.6', branch='master',\n./var/spack/repos/builtin/packages/cbtf-lanl/package.py:    version('1.6', branch='master',\n./var/spack/repos/builtin/packages/cityhash/package.py:    version('master', branch='master',\n./var/spack/repos/builtin/packages/cleverleaf/package.py:            branch='develop')\n./var/spack/repos/builtin/packages/cnmem/package.py:    version('git', git='https://github.com/NVIDIA/cnmem.git', branch=\"master\")\n./var/spack/repos/builtin/packages/flux/package.py:    version('master', branch='master',\n./var/spack/repos/builtin/packages/hdf5-blosc/package.py:            branch='master')\n./var/spack/repos/builtin/packages/julia/package.py:            git='https://github.com/JuliaLang/julia.git', branch='master')\n./var/spack/repos/builtin/packages/julia/package.py:            git='https://github.com/JuliaLang/julia.git', branch='release-0.5')\n./var/spack/repos/builtin/packages/julia/package.py:            git='https://github.com/JuliaLang/julia.git', branch='release-0.4')\n./var/spack/repos/builtin/packages/openspeedshop/package.py:    version('2.2', branch='master',\n./var/spack/repos/builtin/packages/qthreads/package.py:            branch=\"release-1.10\")\n./var/spack/repos/builtin/packages/r-BiocGenerics/package.py:            branch='release-3.3')\n./var/spack/repos/builtin/packages/r-BiocGenerics/package.py:            branch='release-3.2')\n./var/spack/repos/builtin/packages/raja/package.py:    version('git', git='https://github.com/LLNL/RAJA.git', branch=\"master\")\n./var/spack/repos/builtin/packages/rose/package.py:    version('master', branch='master',\n```\n\nNote that this list violates another assumption we've been making: that numeric-versioned packages are always trusted (checksummed), whereas non-numeric versions are not.  If you assume that, you will be surprised when downloading version 1.6 of `cbtf`, for example.  Or more seriously, `julia@0.5`.\n\nAnother problem is that `--no-checksums` is too coarse.  It's the equivalent to turning off a firewall when you really need to just open one port.  You usually want to turn off safety for just one package, not all its possible dependencies.\n\nI therefore propose an improved scheme for trusted downloads that _will_ meet Spack's security goals:\n1. Define a trusted download as one in which Spack could verify what it downloaded was the same as what the author downloaded when the package was created.  This means checksums, git hashes, etc.  Someone will have to go through the different download methods and figure out how to determine when a download is trusted vs. not trusted.  (Do NOT rely on https://.  This can guarantee the source of the download, but not its content).  This needs to get written up in Python, so Spack can know when a download is trusted.\n2. By default, Spack will only install trusted downloads.\n3. The user can override this default by adding something to `packages.yaml`, specifying that Spack should allow untrusted downloads on certain packages ONLY.  For example, I might use the following while developing a package:\n\n```\n    ibmisc:\n        version: [develop]\n        verify: no    # Allow untrusted downloads\n        variants: +python +netcdf\n```\n\nThoughts?  Feedback?\n",
    "performed_via_github_app": null
}