{
    "url": "https://api.github.com/repos/spack/spack/issues/4480",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4480/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4480/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4480/events",
    "html_url": "https://github.com/spack/spack/issues/4480",
    "id": 235208751,
    "node_id": "MDU6SXNzdWUyMzUyMDg3NTE=",
    "number": 4480,
    "title": "Best Practices with Containers (Docker)",
    "user": {
        "login": "ax3l",
        "id": 1353258,
        "node_id": "MDQ6VXNlcjEzNTMyNTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1353258?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ax3l",
        "html_url": "https://github.com/ax3l",
        "followers_url": "https://api.github.com/users/ax3l/followers",
        "following_url": "https://api.github.com/users/ax3l/following{/other_user}",
        "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions",
        "organizations_url": "https://api.github.com/users/ax3l/orgs",
        "repos_url": "https://api.github.com/users/ax3l/repos",
        "events_url": "https://api.github.com/users/ax3l/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ax3l/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446625544,
            "node_id": "MDU6TGFiZWw0NDY2MjU1NDQ=",
            "url": "https://api.github.com/repos/spack/spack/labels/documentation",
            "name": "documentation",
            "color": "0d5977",
            "default": true,
            "description": ""
        },
        {
            "id": 537065486,
            "node_id": "MDU6TGFiZWw1MzcwNjU0ODY=",
            "url": "https://api.github.com/repos/spack/spack/labels/environments",
            "name": "environments",
            "color": "d4c5f9",
            "default": false,
            "description": null
        },
        {
            "id": 719256959,
            "node_id": "MDU6TGFiZWw3MTkyNTY5NTk=",
            "url": "https://api.github.com/repos/spack/spack/labels/singularity",
            "name": "singularity",
            "color": "aae562",
            "default": false,
            "description": null
        },
        {
            "id": 521903170,
            "node_id": "MDU6TGFiZWw1MjE5MDMxNzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/user-experience",
            "name": "user-experience",
            "color": "bfdadc",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-06-12T11:56:21Z",
    "updated_at": "2017-10-15T21:27:12Z",
    "closed_at": "2017-10-13T19:17:20Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Branched from #4062. This is a collection of best-practices of partitioning containers with spack until they are mature enough for a PR.\r\n\r\n### Docker Specific\r\n\r\n- `ENV DEBIAN_FRONTEND noninteractive`\r\n- `ENV FORCE_UNSAFE_CONFIGURE 1`\r\n- adding a non-privileged (system) user for installs since some installs check for root and abort, add sudoers rights for the app\r\n\r\n### Dependencies\r\n\r\n- start from a fixed version of a docker image (tag)\r\n- start from a fixed version of spack (tag or sha)\r\n- install build tools (which are not linked) directly via package manager: cmake, editors, pkg-config, modules/lnmod/dotkit, python\r\n- GPU/CUDA: e.g. from `nvidia-cuda` images (with \"spack-external\" cuda package)\r\n\r\n### Minimal layers\r\n\r\n- concat all apt-get install targets + `&& rm -rf /var/lib/apt/lists/*`\r\n- concat all spack install calls + `&& spack clean -a`\r\n- `git clone --depth 50` or `git archive` for a *fixed* commit of `spack` (ideally: `spack bootstrap` #4062)\r\n\r\n### Environment\r\n\r\n- how to add `packages.yaml modules.yaml`, specifically for external packages\r\n- setup of spack (path, module load, ...) env, e.g. lmod in a user profile file\r\n- add user profile, e.g. to `/etc/profile.d/`\r\n\r\n### Example with CUDA\r\n\r\nPIConGPU 0.3.0 docker image with spack: https://github.com/ComputationalRadiationPhysics/picongpu/tree/dev/share/picongpu/dockerfiles\r\n\r\nMore examples: https://github.com/ax3l/dockerfiles\r\n\r\n### Related issues\r\n\r\n- Bootstrap to `/` #4062\r\n- run spack as root user #5139",
    "performed_via_github_app": null
}