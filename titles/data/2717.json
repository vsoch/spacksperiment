{
    "url": "https://api.github.com/repos/spack/spack/issues/2717",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2717/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2717/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2717/events",
    "html_url": "https://github.com/spack/spack/issues/2717",
    "id": 198350731,
    "node_id": "MDU6SXNzdWUxOTgzNTA3MzE=",
    "number": 2717,
    "title": "Fail to build gcc@4.9.4 due to 'libjava/configure' error",
    "user": {
        "login": "weijianwen",
        "id": 908249,
        "node_id": "MDQ6VXNlcjkwODI0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/908249?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weijianwen",
        "html_url": "https://github.com/weijianwen",
        "followers_url": "https://api.github.com/users/weijianwen/followers",
        "following_url": "https://api.github.com/users/weijianwen/following{/other_user}",
        "gists_url": "https://api.github.com/users/weijianwen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weijianwen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weijianwen/subscriptions",
        "organizations_url": "https://api.github.com/users/weijianwen/orgs",
        "repos_url": "https://api.github.com/users/weijianwen/repos",
        "events_url": "https://api.github.com/users/weijianwen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weijianwen/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 446619526,
            "node_id": "MDU6TGFiZWw0NDY2MTk1MjY=",
            "url": "https://api.github.com/repos/spack/spack/labels/new-package",
            "name": "new-package",
            "color": "444444",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-02T15:38:09Z",
    "updated_at": "2017-01-04T02:57:00Z",
    "closed_at": "2017-01-04T02:57:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hi, \r\n  \r\n I fail to built gcc@4.9.4 with gcc-4.8.5 shipped with Cent OS 7. The error messages are as follows. The indicated log file `/tmp/rpm/spack-stage/spack-stage-H4HPYZ/spack-build/spack-build.out` is empty though. Any suggestion?\r\n\r\n```\r\n# spack install gcc@4.9.4\r\n...\r\n==> No patches needed for gcc\r\n==> Building gcc [Package]\r\n==> Executing phase : 'install'\r\n==> Error: IOError: [Errno 2] No such file or directory: 'libjava/configure'\r\n/home/rpm/spack/var/spack/repos/builtin/packages/gcc/package.py:91, in install:\r\n     88       def install(self, spec, prefix):\r\n     89           # libjava/configure needs a minor fix to install into spack paths.\r\n     90           filter_file(r\"'@.*@'\", \"'@[[:alnum:]]*@'\", 'libjava/configure',\r\n  >> 91                       string=True)\r\n     92\r\n     93           enabled_languages = set(('c', 'c++', 'fortran', 'java', 'objc'))\r\n     94\r\n     95           if spec.satisfies(\"@4.7.1:\") and sys.platform != 'darwin' and \\\r\n     96              not (spec.satisfies('@:4.9.3') and 'ppc64le' in spec.architecture):\r\n     97               enabled_languages.add('go')\r\n     98\r\n     99           # Fix a standard header file for OS X Yosemite that\r\n     100          # is GCC incompatible by replacing non-GCC compliant macros\r\n     101          if 'yosemite' in spec.architecture:\r\n     102              if isfile(r'/usr/include/dispatch/object.h'):\r\n     103                  new_dispatch_dir = join_path(prefix, 'include', 'dispatch')\r\n     104                  mkdirp(new_dispatch_dir)\r\n     105                  cp = which('cp')\r\n     106                  new_header = join_path(new_dispatch_dir, 'object.h')\r\n     107                  cp(r'/usr/include/dispatch/object.h', new_header)\r\n     108                  filter_file(r'typedef void \\(\\^dispatch_block_t\\)\\(void\\)',\r\n     109                              'typedef void* dispatch_block_t',\r\n     110                              new_header)\r\n     111\r\n     112          # Generic options to compile GCC\r\n     113          options = [\"--prefix=%s\" % prefix, \"--libdir=%s/lib64\" % prefix,\r\n     114                     \"--disable-multilib\",\r\n     115                     \"--enable-languages=\" + ','.join(enabled_languages),\r\n     116                     \"--with-mpc=%s\" % spec['mpc'].prefix, \"--with-mpfr=%s\" %\r\n     117                     spec['mpfr'].prefix, \"--with-gmp=%s\" % spec['gmp'].prefix,\r\n     118                     \"--enable-lto\", \"--with-quad\"]\r\n     119          # Binutils\r\n     120          if spec.satisfies('+binutils'):\r\n     121              static_bootstrap_flags = \"-static-libstdc++ -static-libgcc\"\r\n     122              binutils_options = [\r\n     123                  \"--with-sysroot=/\", \"--with-stage1-ldflags=%s %s\" %\r\n     124                  (self.rpath_args, static_bootstrap_flags),\r\n     125                  \"--with-boot-ldflags=%s %s\" %\r\n     126                  (self.rpath_args, static_bootstrap_flags), \"--with-gnu-ld\",\r\n     127                  \"--with-ld=%s/bin/ld\" % spec['binutils'].prefix,\r\n     128                  \"--with-gnu-as\",\r\n     129                  \"--with-as=%s/bin/as\" % spec['binutils'].prefix\r\n     130              ]\r\n     131              options.extend(binutils_options)\r\n     132          # Isl\r\n     133          if 'isl' in spec:\r\n     134              isl_options = [\"--with-isl=%s\" % spec['isl'].prefix]\r\n     135              options.extend(isl_options)\r\n     136\r\n     137          if sys.platform == 'darwin':\r\n     138              darwin_options = [\"--with-build-config=bootstrap-debug\"]\r\n     139              options.extend(darwin_options)\r\n     140\r\n     141          build_dir = join_path(self.stage.path, 'spack-build')\r\n     142          configure = Executable(join_path(self.stage.source_path, 'configure'))\r\n     143          with working_dir(build_dir, create=True):\r\n     144              # Rest of install is straightforward.\r\n     145              configure(*options)\r\n     146              if sys.platform == 'darwin':\r\n     147                  make(\"bootstrap\")\r\n     148              else:\r\n     149                  make()\r\n     150              make(\"install\")\r\n     151\r\n     152          self.write_rpath_specs()\r\n\r\nSee build log for details:\r\n  /tmp/rpm/spack-stage/spack-stage-H4HPYZ/spack-build/spack-build.out\r\n```",
    "performed_via_github_app": null
}