{
    "url": "https://api.github.com/repos/spack/spack/issues/18165",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/18165/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/18165/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/18165/events",
    "html_url": "https://github.com/spack/spack/pull/18165",
    "id": 681415026,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDY5ODA4ODQz",
    "number": 18165,
    "title": "Make spack environment configurations writable from spack external and spack compiler find",
    "user": {
        "login": "rblake-llnl",
        "id": 24722037,
        "node_id": "MDQ6VXNlcjI0NzIyMDM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24722037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rblake-llnl",
        "html_url": "https://github.com/rblake-llnl",
        "followers_url": "https://api.github.com/users/rblake-llnl/followers",
        "following_url": "https://api.github.com/users/rblake-llnl/following{/other_user}",
        "gists_url": "https://api.github.com/users/rblake-llnl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rblake-llnl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rblake-llnl/subscriptions",
        "organizations_url": "https://api.github.com/users/rblake-llnl/orgs",
        "repos_url": "https://api.github.com/users/rblake-llnl/repos",
        "events_url": "https://api.github.com/users/rblake-llnl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rblake-llnl/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615135,
            "node_id": "MDU6TGFiZWw0NDY2MTUxMzU=",
            "url": "https://api.github.com/repos/spack/spack/labels/configuration",
            "name": "configuration",
            "color": "bfd4f2",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-18T23:44:44Z",
    "updated_at": "2020-09-05T08:12:27Z",
    "closed_at": "2020-09-05T08:12:27Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/18165",
        "html_url": "https://github.com/spack/spack/pull/18165",
        "diff_url": "https://github.com/spack/spack/pull/18165.diff",
        "patch_url": "https://github.com/spack/spack/pull/18165.patch"
    },
    "body": "This is a change in default behavior for these routines, but better\r\nmatches the mental model for an environment taking precedence over\r\nthe user's default packages.yaml file.\r\n\r\nWhen I'm setting up a new user environment, I'd like to keep a record of what things I've pulled in from the system environment. Both `spack compiler find` and `spack external find` modify things in my user directory, but if I have an environment active then I'd like those changes reflected in my environment.\r\n\r\nThe code to do this was mostly already there. From what I could put together by reading the code and talking to @becker33, `write_section()` for `SingleFileConfig` was untested and many of the internals of `spack.config` were coded before environments were created.  \r\n\r\nThis is a minor cleanup in code quality that none-the-less has a huge impact on the default behavior of `spack external find`, `spack compiler find` and any other routine that relies on `default_modify_scope()` .  The change better reflects the mental model that environments take higher precedence compared to user configurations.\r\n\r\n",
    "performed_via_github_app": null
}