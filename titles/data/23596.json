{
    "url": "https://api.github.com/repos/spack/spack/issues/23596",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/23596/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/23596/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/23596/events",
    "html_url": "https://github.com/spack/spack/issues/23596",
    "id": 890347060,
    "node_id": "MDU6SXNzdWU4OTAzNDcwNjA=",
    "number": 23596,
    "title": "system configuration scope that does not require root access",
    "user": {
        "login": "sleak-lbl",
        "id": 17708445,
        "node_id": "MDQ6VXNlcjE3NzA4NDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17708445?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleak-lbl",
        "html_url": "https://github.com/sleak-lbl",
        "followers_url": "https://api.github.com/users/sleak-lbl/followers",
        "following_url": "https://api.github.com/users/sleak-lbl/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleak-lbl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleak-lbl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleak-lbl/subscriptions",
        "organizations_url": "https://api.github.com/users/sleak-lbl/orgs",
        "repos_url": "https://api.github.com/users/sleak-lbl/repos",
        "events_url": "https://api.github.com/users/sleak-lbl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleak-lbl/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-05-12T17:56:03Z",
    "updated_at": "2021-06-04T05:43:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Allow a per-system configuration scope in a location that doesn't require root access\r\n\r\n### Rationale\r\n\r\nAt our site the third-party-software support staff do not have root access to systems and therefore cannot easily write to `/etc`.\r\n\r\nWe prefer to use a single spack instance (on the shared filesystem) for all users and systems, rather than maintaining multiple spack instances. However, different systems have different compilers and external packages. \r\n\r\nSpack does sort-of support this, via the \"system\" configuration scope, however unlike other configuration scopes, this is in a location requiring root access. Asking our sysadmin team to update OS images and ansible scripts for each modification to `compilers.yaml` and `packages.yaml` isn't really practical for us.\r\n\r\n### Description\r\n\r\nAlternatives are:\r\n - it is easy to patch architecture.py to check an environment variable and adjust the platform name accordingly, and then use the platform settings in the site scope for system-specific configuration. But this is inelegant (conflates platform with system) and probably unsustainable.\r\n- We can make environments for each system, but then the user needs to activate the relevant environment each time, and while in the environment \"spack find\" doesn't find upstream installed packages. It is also messy if the user wants to create a new environment, they won't automatically get the system-specific compilers and external packages\r\n\r\nAn alternative, or configurable, location for system-specific configuration, would solve this\r\n\r\n### Additional information\r\n\r\n### General information\r\n\r\n- [x] I have run `spack --version` and reported the version of Spack\r\n        We are using spack/0.16.1, with some local and cherry-picked patches to solve other problems\r\n\r\n- [X] I have searched the issues of this repo and believe this is not a duplicate\r\n       #4427 describes a related goal, but is using platform-os-arch as a proxy for system (and is not constrained by a lack of root access)\r\n",
    "performed_via_github_app": null
}