{
    "url": "https://api.github.com/repos/spack/spack/issues/12480",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/12480/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/12480/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/12480/events",
    "html_url": "https://github.com/spack/spack/issues/12480",
    "id": 482594408,
    "node_id": "MDU6SXNzdWU0ODI1OTQ0MDg=",
    "number": 12480,
    "title": "No PYTHONPATH in modulefile for `extends('python@3:')` ",
    "user": {
        "login": "jrmadsen",
        "id": 6001865,
        "node_id": "MDQ6VXNlcjYwMDE4NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6001865?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrmadsen",
        "html_url": "https://github.com/jrmadsen",
        "followers_url": "https://api.github.com/users/jrmadsen/followers",
        "following_url": "https://api.github.com/users/jrmadsen/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrmadsen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrmadsen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrmadsen/subscriptions",
        "organizations_url": "https://api.github.com/users/jrmadsen/orgs",
        "repos_url": "https://api.github.com/users/jrmadsen/repos",
        "events_url": "https://api.github.com/users/jrmadsen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrmadsen/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 461818061,
            "node_id": "MDU6TGFiZWw0NjE4MTgwNjE=",
            "url": "https://api.github.com/repos/spack/spack/labels/extensions",
            "name": "extensions",
            "color": "bfdadc",
            "default": false,
            "description": null
        },
        {
            "id": 446619758,
            "node_id": "MDU6TGFiZWw0NDY2MTk3NTg=",
            "url": "https://api.github.com/repos/spack/spack/labels/python",
            "name": "python",
            "color": "c2e0c6",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-08-20T01:02:57Z",
    "updated_at": "2020-10-19T16:05:35Z",
    "closed_at": "2019-08-20T02:30:55Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Python 2.7 is basically EOF and I hardly test for 2.7 support so I want the default Python to be >= 3. \r\n\r\nThis creates a valid modulefile:\r\n\r\n```python\r\nfrom spack import *\r\nimport os\r\n\r\n\r\nclass Timemory(CMakePackage):\r\n    \"\"\"Timing + Memory + Hardware Counter Utilities for C / C++ / CUDA / Python\"\"\"\r\n\r\n    homepage = \"https://timemory.readthedocs.io/en/latest/\"\r\n    git = \"https://github.com/NERSC/timemory.git\"\r\n\r\n    version('develop', branch='papi-google-tests', submodules=True)\r\n\r\n    variant('python', default=True, description=\"Enable Python support\")\r\n    variant('mpi', default=True, description=\"Enable MPI support\")\r\n    variant('papi', default=True, description=\"Enable PAPI\")\r\n    variant('cuda', default=True, description=\"Enable CUDA\")\r\n    variant('caliper', default=True, description=\"Enable caliper component\")\r\n    variant('gperftools', default=True,\r\n            description=\"Enable (optional) gperftools interface library\")\r\n\r\n    extends('python', when=\"+python\")\r\n    # extends('python@3:', when=\"+python\")\r\n    depends_on('py-pip', when='+python')\r\n    depends_on('mpi', when='+mpi')\r\n    depends_on('papi', when='+papi')\r\n    depends_on('cuda', when='+cuda')\r\n    depends_on('gperftools', when='+gperftools')\r\n    depends_on('caliper', when='+caliper')\r\n\r\n    parallel = True\r\n\r\n    def setup_dependent_environment(self, spack_env, run_env, dependent_spec):\r\n        \"\"\"Set PYTHONPATH to include the site-packages directory for the\r\n        extension and any other python extensions it depends on.\"\"\"\r\n\r\n        if '+python' in self.spec:\r\n            # If we set PYTHONHOME, we must also ensure that the corresponding\r\n            # python is found in the build environment. This to prevent cases\r\n            # where a system provided python is run against the standard libraries\r\n            # of a Spack built python. See issue #7128\r\n            spack_env.set('PYTHONHOME', self.home)\r\n\r\n            path = os.path.dirname(self.command.path)\r\n            if not is_system_path(path):\r\n                spack_env.prepend_path('PATH', path)\r\n\r\n            python_paths = []\r\n            for d in dependent_spec.traverse(\r\n                    deptype=('build', 'run', 'test')):\r\n                if d.package.extends(self.spec):\r\n                    python_paths.append(join_path(d.prefix,\r\n                                                  self.site_packages_dir))\r\n\r\n            pythonpath = ':'.join(python_paths)\r\n            spack_env.set('PYTHONPATH', pythonpath)\r\n\r\n            # For run time environment set only the path for\r\n            # dependent_spec and prepend it to PYTHONPATH\r\n            if dependent_spec.package.extends(self.spec):\r\n                run_env.prepend_path('PYTHONPATH', join_path(\r\n                    dependent_spec.prefix, self.site_packages_dir))\r\n\r\n    def cmake_args(self):\r\n        spec = self.spec\r\n\r\n        # Use spack install of Caliper instead of internal build\r\n        args = [\r\n            \"-DTIMEMORY_BUILD_CALIPER=OFF\",\r\n            \"-DTIMEMORY_BUILD_TOOLS=ON\",\r\n            \"-DTIMEMORY_BUILD_EXTRA_OPTIMIZATIONS=ON\",\r\n            \"-DTIMEMORY_BUILD_GTEST=OFF\",\r\n        ]\r\n\r\n        print(\"{}\".format(self.spec))\r\n        if '+python' in spec:\r\n            args.append(\r\n                '-DPYTHON_EXECUTABLE={}'.format(os.path.join(spec['python'].prefix, \"bin\", \"python\")))\r\n            python(\"-m\", \"pip\", \"install\", \"matplotlib\", \"numpy\", \"pillow\")\r\n        else:\r\n            args.append('-DTIMEMORY_BUILD_PYTHON=OFF')\r\n        if '+papi' in spec:\r\n            args.append('-DPAPI_ROOT_DIR={}'.format(spec['papi'].prefix))\r\n        if '+mpi' in spec:\r\n            args.append('-DMPI_C_COMPILER={}'.format(spec['mpi'].mpicc))\r\n            args.append('-DMPI_CXX_COMPILER={}'.format(spec['mpi'].mpicxx))\r\n\r\n        args.append(\"-DCMAKE_BUILD_TYPE:STRING=Release\")\r\n\r\n        return args\r\n```\r\n\r\n```console\r\n$ module show timemory-develop-gcc-5.4.0-72tsdku \r\n-------------------------------------------------------------------\r\n/opt/spack/share/spack/modules/linux-ubuntu16.04-x86_64/timemory-develop-gcc-5.4.0-72tsdku:\r\n\r\nmodule-whatis\t Timing + Memory + Hardware Counter Utilities for C / C++ / CUDA / Python \r\nprepend-path\t PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/bin \r\nprepend-path\t LD_LIBRARY_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/lib \r\nprepend-path\t LIBRARY_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/lib \r\nprepend-path\t CPATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/include \r\nprepend-path\t CMAKE_PREFIX_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/ \r\nprepend-path\t PYTHONPATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-72tsdkuilvj2i4eewa3kkayojtsbqfsw/lib/python2.7/site-packages\r\n```\r\n\r\nIf I change:\r\n\r\n```python\r\nextends('python', when=\"+python\")\r\n```\r\n\r\nto:\r\n\r\n```python\r\nextends('python@3:', when=\"+python\")\r\n```\r\n\r\nPython 3.7 gets installed but the resulting modulefile results in:\r\n\r\n```console\r\n$ module show timemory-develop-gcc-5.4.0-tuzkipq \r\n-------------------------------------------------------------------\r\n/opt/spack/share/spack/modules/linux-ubuntu16.04-x86_64/timemory-develop-gcc-5.4.0-tuzkipq:\r\n\r\nmodule-whatis\t Timing + Memory + Hardware Counter Utilities for C / C++ / CUDA / Python \r\nprepend-path\t PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-tuzkipqkz65rthznx3feo66ayu52ehbv/bin \r\nprepend-path\t LD_LIBRARY_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-tuzkipqkz65rthznx3feo66ayu52ehbv/lib \r\nprepend-path\t LIBRARY_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-tuzkipqkz65rthznx3feo66ayu52ehbv/lib \r\nprepend-path\t CPATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-tuzkipqkz65rthznx3feo66ayu52ehbv/include \r\nprepend-path\t CMAKE_PREFIX_PATH /opt/spack/opt/spack/linux-ubuntu16.04-x86_64/gcc-5.4.0/timemory-develop-tuzkipqkz65rthznx3feo66ayu52ehbv/ \r\n```\r\n\r\nand my Python package is not added to PYTHONPATH\r\n\r\n### Steps to reproduce the issue\r\n\r\nTry `extends('python@3:')` and look at the modulefile\r\n\r\n### Information on your system\r\n\r\nIn `spack/ubuntu-xenial` docker container. \r\n",
    "performed_via_github_app": null
}