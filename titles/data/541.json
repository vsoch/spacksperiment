{
    "url": "https://api.github.com/repos/spack/spack/issues/541",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/541/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/541/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/541/events",
    "html_url": "https://github.com/spack/spack/issues/541",
    "id": 140342786,
    "node_id": "MDU6SXNzdWUxNDAzNDI3ODY=",
    "number": 541,
    "title": "Integration with System Package Managers",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-03-12T03:41:32Z",
    "updated_at": "2017-01-10T14:06:07Z",
    "closed_at": "2017-01-10T14:06:07Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "With Emacs, the issue has come up of dependencies on the underlying OS that are not built by Spack.  For example, Emacs relies on GTK, which Spack does not (currently) build.  Although it would be nice for Spack to build GTK one day, that would require a number of packages.  And... in many cases, that would not be desirable: it's a good idea to use the widgets shipped with the OS when displaying windows on the OS.\n\nPR #120 now allows one to specify that some packages are to be not built, using the system instead.  But other than \"not building\" a package, Spack provides no other mechanisms to ensure that the correct prerequisite system packages are installed before building.  I then have to manually guess what to install with yum or apt-get.  For example, I required the following to build Emacs on my Ubuntu 14.04 LTS machine:\n\n```\n    # For Ubuntu 14.04 LTS:\n    #     sudo apt-get install libgtk-3-dev libxpm-dev libtiff5-dev libjpeg8-dev libgif-dev libpng12-dev\n```\n\nIt would be nice if this could be formalized, encoded and automated.  In general, it would work either as:\n1. A bunch of system packages to install as prerequisited.  I.e. the prerequisites above would be listed in the emacs/package.py.\n2. An extension of the nobuild functionality.  In this case, one would have to create at least a dummy Spack package for all the prerequisites above.\n\nThen, when Spack runs, it could automatically call yum/apt-get to get the correct system stuff installed.  There are caveats here, of course:\n a) Spack usually doesn't run as root.  So it will need to just SUGGEST what needs to be installed and get the user to install it.\n b) This will all be OS-specific.  There will be different list of system package installs on a per-OS basis.\n",
    "performed_via_github_app": null
}