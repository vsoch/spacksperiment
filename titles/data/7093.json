{
    "url": "https://api.github.com/repos/spack/spack/issues/7093",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/7093/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/7093/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/7093/events",
    "html_url": "https://github.com/spack/spack/pull/7093",
    "id": 292186146,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1NTU1OTc2",
    "number": 7093,
    "title": "Improve log parsing performance",
    "user": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-28T07:52:17Z",
    "updated_at": "2018-02-01T18:45:48Z",
    "closed_at": "2018-02-01T05:57:57Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/7093",
        "html_url": "https://github.com/spack/spack/pull/7093",
        "diff_url": "https://github.com/spack/spack/pull/7093.diff",
        "patch_url": "https://github.com/spack/spack/pull/7093.patch"
    },
    "body": "When a build errors out, Spack goes through the build log and scrapes it for errors and warnings (see #5016, #5561).  We found that this was taking forever (like an hour) on large logs.  It turns out that [Python regular expressions are slow](https://swtch.com/~rsc/regexp/regexp1.html), and this affects our log scraping in bad ways.\r\n\r\nThis PR does several things:\r\n\r\n- [x] Add a profile mode to the parser that tells you which regexes take the most time.  A number of regular expressions from `ctest_log_parser` have really poor performance, mostly due to \"untethered\" `*` and `+` (i.e., they don't start with `^`, so Python's backtracking regex implementation checks for repetition at every position in the string).  I can't verify that CTest's regexes work as intended with an initial `^` (which would be an obvious solution), so I don't really want to touch them.  This fear was borne out when I tried just adding `^` and some tests broke.\r\n\r\n- [x] Instead of using only \"efficient\" regular expressions, added a `prefilter()` class that allows the parser to quickly check a precondition before evaluating any of the expensive ones. Preconditions do things like test whether the string contains \"error\" or \"warning\" (linear time things) before evaluating regexes.   Some simple preconditions speed things up by about **200x** for the log file I tested.\r\n\r\n- [x] Parallelize the log parsing.  Files are now divided up and parsed by all CPUs.  This gets you another speedup approximately equal to the number of physical cores you've got.\r\n\r\n- [x] Add a `spack log-parse` command that you can run on any file.  This let me test things, and it's handy because you can run it on build logs that aren't even from Spack.\r\n\r\nHere's `spack log-parse`:\r\n\r\n```\r\n$ spack log-parse -h\r\nusage: spack log-parse [-h] [--show SHOW] [-c CONTEXT] [-p] [-w WIDTH]\r\n                       [-j JOBS]\r\n                       file\r\n\r\nfilter errors and warnings from build logs\r\n\r\npositional arguments:\r\n  file                  a log file containing build output, or - for stdin\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --show SHOW           comma-separated list of what to show; options: errors,\r\n                        warnings\r\n  -c CONTEXT, --context CONTEXT\r\n                        lines of context to show around lines of interest\r\n  -p, --profile         print out a profile of time spent in regexes during\r\n                        parse\r\n  -w WIDTH, --width WIDTH\r\n                        wrap width: auto-size to terminal by default; 0 for no\r\n                        wrap\r\n  -j JOBS, --jobs JOBS  number of jobs to parse log file; default is 1 for\r\n                        short logs, ncpus for long logs\r\n```\r\n\r\nTry it -- it'll find errors (and optionally warnings) from your builds.\r\n\r\nFinally, this PR cleans up the log output a bit so that long lines wrap better with the line numbers.  i.e., we now indent wrapped lines so you can still see the line numbers.  I find this makes things more readable for really nasty build logs.",
    "performed_via_github_app": null
}