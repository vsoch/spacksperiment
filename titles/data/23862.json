{
    "url": "https://api.github.com/repos/spack/spack/issues/23862",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/23862/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/23862/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/23862/events",
    "html_url": "https://github.com/spack/spack/issues/23862",
    "id": 899026910,
    "node_id": "MDU6SXNzdWU4OTkwMjY5MTA=",
    "number": 23862,
    "title": "can't stage cuda / unable to parse extension",
    "user": {
        "login": "simonpintarelli",
        "id": 1237199,
        "node_id": "MDQ6VXNlcjEyMzcxOTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1237199?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/simonpintarelli",
        "html_url": "https://github.com/simonpintarelli",
        "followers_url": "https://api.github.com/users/simonpintarelli/followers",
        "following_url": "https://api.github.com/users/simonpintarelli/following{/other_user}",
        "gists_url": "https://api.github.com/users/simonpintarelli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/simonpintarelli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/simonpintarelli/subscriptions",
        "organizations_url": "https://api.github.com/users/simonpintarelli/orgs",
        "repos_url": "https://api.github.com/users/simonpintarelli/repos",
        "events_url": "https://api.github.com/users/simonpintarelli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/simonpintarelli/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-23T14:00:20Z",
    "updated_at": "2021-05-23T14:15:48Z",
    "closed_at": "2021-05-23T14:15:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "~~spack fails to stage cuda. I can't reproduce the bug on another system, although I couldn't resolve it even with a clean git clone and deleting all custom configuration.~~\r\n\r\nspack v0.16.2 fails to fetch cuda.\r\n\r\n### Steps to reproduce the issue\r\n\r\n```console\r\n$ spack install cuda@10.2.1%gcc@10.2.0\r\n```\r\n\r\n### Error Message\r\n```\r\nlib/spack/spack/main.py:777 ==> [2021-05-23-15:46:17.296207] MirrorError: Unable to parse extension from https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.1.0_linux.\r\n\r\nIf this URL is for a tarball but does not include the file extension\r\nin the name, you can explicitly declare it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', extension='tar.gz')\r\n\r\nIf this URL is for a download like a .jar or .whl that does not need\r\nto be expanded, or an uncompressed installation script, you can tell\r\nSpack not to expand it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', expand=False)\r\n\r\nlib/spack/spack/error.py:55 ==> [2021-05-23-15:46:17.296368] Error: Unable to parse extension from https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.1.0_linux.\r\n\r\nIf this URL is for a tarball but does not include the file extension\r\nin the name, you can explicitly declare it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', extension='tar.gz')\r\n\r\nIf this URL is for a download like a .jar or .whl that does not need\r\nto be expanded, or an uncompressed installation script, you can tell\r\nSpack not to expand it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', expand=False)\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/simon/spack/lib/spack/spack/main.py\", line 774, in main\r\n    return _invoke_command(command, parser, args, unknown)\r\n  File \"/home/simon/spack/lib/spack/spack/main.py\", line 498, in _invoke_command\r\n    return_val = command(parser, args)\r\n  File \"/home/simon/spack/lib/spack/spack/cmd/install.py\", line 351, in install\r\n    env.install_all(args, **kwargs)\r\n  File \"/home/simon/spack/lib/spack/spack/environment.py\", line 1543, in install_all\r\n    self.install_specs(None, args=args, **install_args)\r\n  File \"/home/simon/spack/lib/spack/spack/environment.py\", line 1586, in install_specs\r\n    builder.install()\r\n  File \"/home/simon/spack/lib/spack/spack/installer.py\", line 1513, in install\r\n    self._prepare_for_install(task)\r\n  File \"/home/simon/spack/lib/spack/spack/installer.py\", line 829, in _prepare_for_install\r\n    if restage and task.pkg.stage.managed_by_spack:\r\n  File \"/home/simon/spack/lib/spack/spack/package.py\", line 1021, in stage\r\n    self._stage = self._make_stage()\r\n  File \"/home/simon/spack/lib/spack/spack/package.py\", line 998, in _make_stage\r\n    stage = self._make_root_stage(fetcher)\r\n  File \"/home/simon/spack/lib/spack/spack/package.py\", line 972, in _make_root_stage\r\n    mirror_paths = spack.mirror.mirror_archive_paths(\r\n  File \"/home/simon/spack/lib/spack/spack/mirror.py\", line 316, in mirror_archive_paths\r\n    ext = ext or _determine_extension(fetcher)\r\n  File \"/home/simon/spack/lib/spack/spack/mirror.py\", line 263, in _determine_extension\r\n    raise MirrorError(msg.format(fetcher.url))\r\nspack.mirror.MirrorError: Unable to parse extension from https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.1.0_linux.\r\n\r\nIf this URL is for a tarball but does not include the file extension\r\nin the name, you can explicitly declare it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', extension='tar.gz')\r\n\r\nIf this URL is for a download like a .jar or .whl that does not need\r\nto be expanded, or an uncompressed installation script, you can tell\r\nSpack not to expand it with the following syntax:\r\n\r\n    version('1.2.3', 'hash', expand=False)\r\n```\r\n\r\n### Information on your system\r\n\r\n```\r\n* **Spack:** 0.16.2-2812-ec00d68ba1\r\n* **Python:** 3.9.5\r\n* **Platform:** linux-arch-skylake\r\n* **Concretizer:** original\r\n```\r\n\r\n\r\n",
    "performed_via_github_app": null
}