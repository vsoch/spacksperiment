{
    "url": "https://api.github.com/repos/spack/spack/issues/17598",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/17598/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/17598/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/17598/events",
    "html_url": "https://github.com/spack/spack/issues/17598",
    "id": 661815566,
    "node_id": "MDU6SXNzdWU2NjE4MTU1NjY=",
    "number": 17598,
    "title": "Make -j, --jobs flags definitive",
    "user": {
        "login": "haampie",
        "id": 194764,
        "node_id": "MDQ6VXNlcjE5NDc2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/194764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/haampie",
        "html_url": "https://github.com/haampie",
        "followers_url": "https://api.github.com/users/haampie/followers",
        "following_url": "https://api.github.com/users/haampie/following{/other_user}",
        "gists_url": "https://api.github.com/users/haampie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/haampie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haampie/subscriptions",
        "organizations_url": "https://api.github.com/users/haampie/orgs",
        "repos_url": "https://api.github.com/users/haampie/repos",
        "events_url": "https://api.github.com/users/haampie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/haampie/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-20T13:19:53Z",
    "updated_at": "2021-03-30T19:03:51Z",
    "closed_at": "2021-03-30T19:03:51Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "### Rationale\r\n\r\nSpack handles the `-j` flag differently from other popular build systems like `make` and `ninja`, because it sets a hard limit for the number of build jobs to the number of cores:\r\n\r\n```python\r\n# first the -j value is saved like\r\njobs = min(jobs, multiprocessing.cpu_count())\r\nspack.config.set('config:build_jobs', jobs, scope='command_line')\r\n\r\n# later it is used as\r\njobs = spack.config.get('config:build_jobs', 16) if pkg.parallel else 1\r\njobs = min(jobs, multiprocessing.cpu_count())\r\n```\r\n\r\nFor reference, `make`, `ninja`, `scons` and `ctest` do not have an upper limit, and `ninja` seems to set the number of parallel jobs to `nproc + 2` by default on my system (something currently not possible with spack):\r\n\r\n```\r\n$ make --help | grep \"jobs\"\r\n  -j [N], --jobs[=N]          Allow N jobs at once; infinite jobs with no arg.\r\n$ ninja --help 2>&1 | grep \"jobs\"\r\n  -j N     run N jobs in parallel (0 means infinity) [default=18 on this system]\r\n```\r\n\r\nWhen it comes to the optimal number of build jobs, it seems to be common practice to have slightly more jobs than cores (like ninja does, see also https://stackoverflow.com/questions/15289250/make-j4-or-j8). I would expect to be able to enforce this in spack by specifying the `-j` flag, but I can't since it has an upper limit.\r\n\r\nNotice that `ninja` also respects cpuset / taskset on Linux, which spack does not:\r\n\r\n```\r\n$ taskset -c 0-1 ninja --help 2>&1 | grep \"jobs\"\r\n  -j N     run N jobs in parallel (0 means infinity) [default=3 on this system]\r\n```\r\n\r\nit automatically sets the number of jobs to 3 when I give it just 2 cores (so, nproc + 1 here), which is very useful.\r\n\r\n### Description\r\n\r\nIt would be nice if the `-j` flag would be handled differently, in this way:\r\n\r\n- If `-j` is specified by the user, simply take this value as the number of build jobs, do not limit it by the number of cpu cores.\r\n- If `-j` is _not_ specified, take a sensible default:\r\n   - Take `min(config:build_jobs, cpus available)`\r\n   - Furthermore, on Linux, ensure that `cpus available` corresponds with the number of cores made available to the process through cgroups / cpuset, i.e. `sched_setaffinity`, such that it gets a proper default in `slurm`, `docker`, `kubernetes`, or people who simply use `taskset` (#17566).\r\n\r\n\r\n### Additional information\r\n\r\nCame up in #17566.\r\n\r\n\r\n### General information\r\n\r\n- [ ] I have run `spack --version` and reported the version of Spack\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate",
    "performed_via_github_app": null
}