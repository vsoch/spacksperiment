{
    "url": "https://api.github.com/repos/spack/spack/issues/3206",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3206/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3206/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3206/events",
    "html_url": "https://github.com/spack/spack/pull/3206",
    "id": 209228072,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA3MjQ3MTI3",
    "number": 3206,
    "title": "Specific targets",
    "user": {
        "login": "becker33",
        "id": 13971568,
        "node_id": "MDQ6VXNlcjEzOTcxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13971568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/becker33",
        "html_url": "https://github.com/becker33",
        "followers_url": "https://api.github.com/users/becker33/followers",
        "following_url": "https://api.github.com/users/becker33/following{/other_user}",
        "gists_url": "https://api.github.com/users/becker33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/becker33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/becker33/subscriptions",
        "organizations_url": "https://api.github.com/users/becker33/orgs",
        "repos_url": "https://api.github.com/users/becker33/repos",
        "events_url": "https://api.github.com/users/becker33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/becker33/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1535715176,
            "node_id": "MDU6TGFiZWwxNTM1NzE1MTc2",
            "url": "https://api.github.com/repos/spack/spack/labels/architectures",
            "name": "architectures",
            "color": "3571ad",
            "default": false,
            "description": ""
        },
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        },
        {
            "id": 412006552,
            "node_id": "MDU6TGFiZWw0MTIwMDY1NTI=",
            "url": "https://api.github.com/repos/spack/spack/labels/hash-change",
            "name": "hash-change",
            "color": "d93f0b",
            "default": false,
            "description": null
        },
        {
            "id": 446626162,
            "node_id": "MDU6TGFiZWw0NDY2MjYxNjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/hashes",
            "name": "hashes",
            "color": "9a69b7",
            "default": false,
            "description": null
        },
        {
            "id": 512483406,
            "node_id": "MDU6TGFiZWw1MTI0ODM0MDY=",
            "url": "https://api.github.com/repos/spack/spack/labels/impact-high",
            "name": "impact-high",
            "color": "fef2c0",
            "default": false,
            "description": ""
        },
        {
            "id": 1574436554,
            "node_id": "MDU6TGFiZWwxNTc0NDM2NTU0",
            "url": "https://api.github.com/repos/spack/spack/labels/microarchitectures",
            "name": "microarchitectures",
            "color": "011970",
            "default": false,
            "description": ""
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 34,
    "created_at": "2017-02-21T18:13:02Z",
    "updated_at": "2019-10-13T00:16:55Z",
    "closed_at": "2019-09-20T07:51:39Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/3206",
        "html_url": "https://github.com/spack/spack/pull/3206",
        "diff_url": "https://github.com/spack/spack/pull/3206.diff",
        "patch_url": "https://github.com/spack/spack/pull/3206.patch"
    },
    "body": "Resolves #2379\r\n\r\nAllow spack to detect target at a finer granularity.\r\n\r\nMoves toward using the granularity of the -march option for the gnu compiler toolchain.\r\n\r\n##### Modifications to be done to add the feature\r\n\r\n- [x] Add support for detecting specific architectures (complete for Intel, IBM and AMD chips, not done for ARM yet).\r\n- [x] Create a mechanism for comparisons among architectures. This will be a partial ordering.\r\n- [x] Automatically add optimization flags for the proper target through the compiler wrappers.\r\n- [x] Ensure that defaults from `packages.yaml` allow for setting a generic target at any scope.\r\n- [x] Ensure that moving to a new architecture family will still use `platform.machine()` and avoid failures due to the architecture not being present in the list of known ones\r\n- [x] Ensure that targets saved in `compilers.yaml` are just representing an arch family - not micro-architectures. The rationale is that if a compiler can emit code for `x86_64` it can also emit specialized code for any `x86_64` micro-architecture it knows about. The benefits are that:\r\n  1. The number of entries in `compilers.yaml` is not exploding due to over-specialization.\r\n  2. This will be backward compatible with what we are already doing, and won't require user intervention on upgrade\r\n- [x] Make the features, etc. of the specialized architecture part of the hash. For generic architectures, like `x86_64` continue to use a string for backward compatibility.\r\n- [x] Document the extended support for micro-architectures\r\n- [x] Sync module docstrings as they contain outdated information\r\n- [x] Add a schema for `targets.json`\r\n- [x] Modify concretization algorithm to take into account compiler constraints if available, see https://github.com/spack/spack/pull/3206#issuecomment-507079614\r\n\r\n##### Tests to be added to the suite\r\n- [x] Ensure that high-end machines with custom build / detection logic (Cray, BG/Q) still work properly\r\n- [ ] Test that defaults in `packages.yaml` can set the target at any scope\r\n- [x] Test the semantic of `llnl.util.cpu.MicroArchitecture`, including partial ordering\r\n- [ ] Ensure that we don't dump unicode to `yaml` configuration even in Python 2\r\n- [x] Test that we are injecting the right compiler flags for relevant pairs of target / compiler\r\n- [x] Test that target names don't contain dashes\r\n- [x] Test that `spack find` works properly (was broken by 43d5e97 but not caught by unit tests)\r\n- [x] Test micro-architecture detection for common targets\r\n",
    "performed_via_github_app": null
}