{
    "url": "https://api.github.com/repos/spack/spack/issues/10274",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/10274/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/10274/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/10274/events",
    "html_url": "https://github.com/spack/spack/pull/10274",
    "id": 396695865,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyODE3NDQy",
    "number": 10274,
    "title": "Release workflow",
    "user": {
        "login": "scottwittenburg",
        "id": 6527504,
        "node_id": "MDQ6VXNlcjY1Mjc1MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6527504?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottwittenburg",
        "html_url": "https://github.com/scottwittenburg",
        "followers_url": "https://api.github.com/users/scottwittenburg/followers",
        "following_url": "https://api.github.com/users/scottwittenburg/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottwittenburg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottwittenburg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottwittenburg/subscriptions",
        "organizations_url": "https://api.github.com/users/scottwittenburg/orgs",
        "repos_url": "https://api.github.com/users/scottwittenburg/repos",
        "events_url": "https://api.github.com/users/scottwittenburg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottwittenburg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 759411369,
            "node_id": "MDU6TGFiZWw3NTk0MTEzNjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/buildcache",
            "name": "buildcache",
            "color": "bf354c",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 45,
    "created_at": "2019-01-07T23:52:12Z",
    "updated_at": "2019-06-30T00:01:46Z",
    "closed_at": "2019-02-21T21:37:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/10274",
        "html_url": "https://github.com/spack/spack/pull/10274",
        "diff_url": "https://github.com/spack/spack/pull/10274.diff",
        "patch_url": "https://github.com/spack/spack/pull/10274.patch"
    },
    "body": "This topic implements several pieces needed to support a release workflow for Spack.  Some of the pieces included:\r\n\r\n1. A new Spack command to create a description of packages for Gitlab-CI to build. It defines a gitlab-ci.yml file that would be placed in a repository, such that when Gitlab-CI detects a commit to the branch, it will build the packages mentioned in the description.  More details on this new command are provided further down in this PR description (\"Details of `release-jobs` command).\r\n\r\n2. A build job shell script to be run by Gitlab-CI.  The responsibility of this script is to be assigned a spec, determine if the package corresponding to that spec exists and is up-to-date on a configured binary mirror, and if it is not, build the package, create a buildcache for it, and push that buildcache to the binary mirror, communicating with a CDash instance along the way.\r\n\r\n3. Other infrastructure and changes in support of the items above.\r\n\r\nThe command to generate this `.gitlab-ci.yml` file looks like this:\r\n\r\n```\r\nspack release-jobs --spec-set <path-to-release.yaml> --mirror-url \"https://mirror.spack.io\" --shared-runner-tag spack-k8s\r\n```\r\n\r\nA summary of the jobs/stages can be printed by the above command if you add the `--print-summary` command-line argument.\r\n\r\n### One approach to managing the release workflow\r\n\r\nTo avoid churn in the Spack repository, we plan not to keep the full list of release jobs under source control in a full `.gitlab-ci.yml` file.  Rather, a separate microservice will be capable of generating the bulk of the contents of the `.gitlab-ci.yml` on demand, for a given commit or sha.  \r\n\r\nHere is an example of the `.gitlab-ci.yml` that might be maintained within the Spack repository:\r\n\r\n```yaml\r\ninclude:\r\n  - remote: 'https://internal.spack.io/glciy/${CI_COMMIT_SHA}.yaml'\r\n```\r\n\r\nWhenever the pipeline is configured to run, the file above would trigger the microservice to checkout the given sha, run the `spack release-jobs ...` command on the release spec set, and return the full list of staged jobs to be run.\r\n\r\n### Details of `release-jobs` command\r\n\r\nThe `release-jobs` command makes use of two new configuration files defined in the repository, `etc/spack/defaults/release.yaml` (or an arbitrary yaml file following the same schema) and 'share/spack/docker/os-container-mapping.yaml'.  First the `release.yaml` file is used to construct a `CombinatorialSpecSet`, which expands the contents into a list of the entire cross-product of packages/versions/compilers expressed in that file.  Next, the `os-container-mapping.yaml` file is used to find docker containers with compilers that \"satisfy\" the specs in the expanded cross-product.  The `os-container-mapping.yaml` file is essentially a list of operating systems which each provide an `image` (the image should exist on DockerHub so it can be pulled by both the `release-jobs` command and the AWS gitlab runners), and a list of available compilers on that image.  For any compiler found in one of the containers that satisfies the compiler requirement of a release spec, that spec (with the OS from `os-container-mapping.yaml` added to it) is added to a list that will be concretized in the appropriate docker container in order to gather all the specific dependencies of the spec.  Then all the resulting specs are combined and staged.\r\n\r\nFor example, given the following `release.yaml`:\r\n\r\n```\r\nspec-set:\r\n    include: []\r\n    exclude: []\r\n    matrix:\r\n        - packages:\r\n            libpng:\r\n                versions: [1.6.34]\r\n            ncurses:\r\n                versions: [6.1]\r\n            pkgconf:\r\n                versions: [1.4.2]\r\n            readline:\r\n                versions: [7.0]\r\n            zlib:\r\n                versions: [1.2.11]\r\n        - compilers:\r\n            gcc:\r\n                versions: [5.5.0]\r\n    cdash: [\"https://spack.io/cdash/submit.php?project=spack\"]\r\n```\r\n\r\nand given this `os-container-mapping.yaml`:\r\n\r\n```\r\ncontainers:\r\n  linux-ubuntu18.04-x86_64:\r\n    image: scottwittenburg/spack_builder_ubuntu_18.04\r\n    compilers:\r\n      - name: gcc@5.5.0\r\n      - name: clang@6.0.0-1ubuntu2\r\n  linux-centos7-x86_64:\r\n    image: scottwittenburg/spack_builder_centos_7\r\n    compilers:\r\n      - name: gcc@5.5.0\r\n```\r\n\r\nthen the `release-jobs` command will generate the following specs to be built:\r\n\r\n```\r\n$ spack release-jobs --spec-set .../spack/etc/spack/defaults/release.yaml --mirror-url https://mirror.spack.io --shared-runner-tag spack-k8s --print-summary\r\n==> Staging summary:\r\n==>   stage 0 (6 jobs):\r\n==>     pkgconf/atbmtyn -> pkgconf@1.5.4%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==>     pkgconf/bp4fmns -> pkgconf@1.4.2%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>     pkgconf/qdgufjf -> pkgconf@1.4.2%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==>     pkgconf/unoed43 -> pkgconf@1.5.4%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>     zlib/ijtgxbh -> zlib@1.2.11%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==>     zlib/ymics2i -> zlib@1.2.11%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>   stage 1 (4 jobs):\r\n==>     libpng/2vicq3d -> libpng@1.6.34%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>     libpng/drgxai6 -> libpng@1.6.34%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==>     ncurses/aqchhtc -> ncurses@6.1%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==>     ncurses/qkjccof -> ncurses@6.1%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>   stage 2 (2 jobs):\r\n==>     readline/vuigree -> readline@7.0%gcc@5.5.0 arch=linux-ubuntu18.04-x86_64\r\n==>     readline/xlb6j2a -> readline@7.0%gcc@5.5.0 arch=linux-centos7-x86_64\r\n==> 12 build jobs generated in 3 stages\r\n```\r\n\r\nNote that although the `clang@6.0.0-1ubuntu2` compiler is available in the `linux-ubuntu18.04-x86_64` container, no jobs with that compiler were staged because it wasn't listed as a desired compiler in the `release.yaml`.  Conversely, also note the additional version of `pkgconf` which will be built, even though it wasn't specifically mentioned in the `release.yaml`.  This is because that particular version was a dependency of another spec in the spec set.\r\n\r\nTo avoid running the concretization of release specs (and generation of dependencies) in docker containers, the `--this-machine-only` argument may be passed to the `release-jobs` command.  In this case, the current machine will be used for concretization and dependency generation, but for this to work, the `os-container-mapping.yaml` file must contain an entry corresponding to `spack.architecture.sys_type().\r\n\r\n### Additional Notes\r\n\r\nCurrently the Spack Gitlab instance is set up to test branches it finds on my fork (`scottwittenburg/spack`), so that will need to be changed before merging this topic will seem to have any effect.\r\n\r\nThis PR replaces both #8451 and #8718.\r\n\r\nBefore we can merge this, we need to address at least #10141, but there may be other prerequisites as well, hence the `WIP` on this PR for the time being.\r\n\r\nThings currently holding this up:\r\n\r\n- [x] Fix issue installing from spec.yaml using `-f` #10141 \r\n- [x] Fix issue concretizing xsdk-0.4.0 (just needs merge) #10288 \r\n- [x] Fix omega_h regression (proposed fix here: #10297)",
    "performed_via_github_app": null
}