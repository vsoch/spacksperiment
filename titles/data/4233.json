{
    "url": "https://api.github.com/repos/spack/spack/issues/4233",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/4233/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/4233/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/4233/events",
    "html_url": "https://github.com/spack/spack/issues/4233",
    "id": 228358161,
    "node_id": "MDU6SXNzdWUyMjgzNTgxNjE=",
    "number": 4233,
    "title": "Lmod and changing hashes",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 412006552,
            "node_id": "MDU6TGFiZWw0MTIwMDY1NTI=",
            "url": "https://api.github.com/repos/spack/spack/labels/hash-change",
            "name": "hash-change",
            "color": "d93f0b",
            "default": false,
            "description": null
        },
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-05-12T17:31:48Z",
    "updated_at": "2017-11-23T13:39:00Z",
    "closed_at": "2017-11-23T13:38:59Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "This is a continuation of the discussion in #1325, specifically geared toward how to handle this problem in relation to Lmod.\r\n\r\nIn #1325 we came to the conclusion that Spack is not backwards compatible. Every time the hashing algorithm changes or support for things like multi-valued variants is added, Spack has to be reinstalled. Since users could have RPATHed their executables to these old installations, you have to install the newer version of Spack in a new directory and keep the old one.\r\n\r\nMy question is, how do others handle this problem in relation to Lmod? For example, what if a user wants to use one module installed with Spack 0.9.1 and another installed with Spack 0.10.0? Lmod is special in the sense that it won't let you load multiple compilers at the same time. If both Spack installations have separate Core/Compiler/MPI hierarchies, how do you get `module load intel/17.0.3` to add both directories to the `MODULEPATH`?\r\n\r\nOne more question. How do people handle module files for things installed outside of Spack? Do you throw the module file in the Spack Lmod hierarchy and hope that no one accidentally refreshes it? Do you add a separate Lmod hierarchy outside of Spack? If the latter, how do you handle this same hierarchy problem? Do you create copies of the Spack module files that add the right directories to `MODULEPATH`?",
    "performed_via_github_app": null
}