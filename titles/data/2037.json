{
    "url": "https://api.github.com/repos/spack/spack/issues/2037",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2037/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2037/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2037/events",
    "html_url": "https://github.com/spack/spack/issues/2037",
    "id": 183447966,
    "node_id": "MDU6SXNzdWUxODM0NDc5NjY=",
    "number": 2037,
    "title": "spack crashing during openmpi installation due to fortran issues",
    "user": {
        "login": "amklinv",
        "id": 15895383,
        "node_id": "MDQ6VXNlcjE1ODk1Mzgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/15895383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amklinv",
        "html_url": "https://github.com/amklinv",
        "followers_url": "https://api.github.com/users/amklinv/followers",
        "following_url": "https://api.github.com/users/amklinv/following{/other_user}",
        "gists_url": "https://api.github.com/users/amklinv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amklinv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amklinv/subscriptions",
        "organizations_url": "https://api.github.com/users/amklinv/orgs",
        "repos_url": "https://api.github.com/users/amklinv/repos",
        "events_url": "https://api.github.com/users/amklinv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amklinv/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446754070,
            "node_id": "MDU6TGFiZWw0NDY3NTQwNzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/blas-lapack-scalapack",
            "name": "blas-lapack-scalapack",
            "color": "4477a8",
            "default": false,
            "description": null
        },
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        },
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        },
        {
            "id": 451092161,
            "node_id": "MDU6TGFiZWw0NTEwOTIxNjE=",
            "url": "https://api.github.com/repos/spack/spack/labels/xSDK",
            "name": "xSDK",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 39,
    "created_at": "2016-10-17T15:26:18Z",
    "updated_at": "2016-10-27T15:23:11Z",
    "closed_at": "2016-10-27T14:46:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@jwillenbring @tgamblin \n\nMy name is Alicia, and I'm a postdoc at SNL.  I've been trying to install Trilinos via spack on my RHEL 6 machine with little success.  It crashes during the openmpi installation, and reports that it's because my fortran compiler is unable to produce working executables.\n\n```\n[amklinv@s995692 bin]$ ./spack install trilinos                                                     \n==> Installing trilinos                                                                             \n==> Installing superlu-dist                                                                         \n==> Installing openmpi                                                                              \n==> hwloc is already installed in /home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/hwloc-1.11.4-npuz6xtizklh6v5ckrk6wdv4wo7kfulq                                                            \n==> Already downloaded /home/amklinv/spack/var/spack/stage/openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol/openmpi-2.0.1.tar.bz2                                                                         \n==> Already staged openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol in /home/amklinv/spack/var/spack/stage/openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol                                                 \n==> No patches needed for openmpi                                                                   \n==> Building openmpi                                                                                \n==> WRITE LOCK: /home/amklinv/spack/opt/spack/.spack-db/prefix_lock[898272675117208261:1] [Released]\n==> WRITE LOCK: /home/amklinv/spack/var/spack/stage/.lock[6797382048177427243:1] [Released]         \n==> Error: Command exited with status 1:                                                            \n'./configure' '--prefix=/home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol' '--with-hwloc=/home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/hwloc-1.11.4-npuz6xtizklh6v5ckrk6wdv4wo7kfulq' '--enable-shared' '--enable-static' '--enable-mpi-cxx' '--without-tm' '--without-slurm' '--without-psm' '--without-psm2' '--without-mxm' '--disable-mpi-thread-multiple' '--without-pmi' '--without-sqlite3' '--enable-vt' '--without-verbs'         \n\nSee build log for details:\n  /tmp/amklinv/spack-stage/spack-stage-G8npQ1/openmpi-2.0.1/spack-build.out\n\n/home/amklinv/spack/var/spack/repos/builtin/packages/openmpi/package.py:207, in install:\n     163      def install(self, spec, prefix):                                          \n     164          config_args = [\"--prefix=%s\" % prefix,                                \n     165                         \"--with-hwloc=%s\" % spec['hwloc'].prefix,              \n     166                         \"--enable-shared\",                                     \n     167                         \"--enable-static\"]                                     \n     168                                                                                \n     169          # for Open-MPI 2.0:, C++ bindings are disabled by default.            \n     170          if self.spec.satisfies('@2.0:'):                                      \n     171              config_args.extend(['--enable-mpi-cxx'])                          \n     172                                                                                \n     173          if getattr(self, 'config_extra', None) is not None:                   \n     174              config_args.extend(self.config_extra)                             \n     175                                                                                \n     176          # Variant based arguments                                             \n     177          config_args.extend([                                                  \n     178              # Schedulers                                                      \n     179              '--with-tm' if '+tm' in spec else '--without-tm',                 \n     180              '--with-slurm' if '+slurm' in spec else '--without-slurm',        \n     181              # Fabrics                                                         \n     182              '--with-psm' if '+psm' in spec else '--without-psm',              \n     183              '--with-psm2' if '+psm2' in spec else '--without-psm2',           \n     184              '--with-mxm' if '+mxm' in spec else '--without-mxm',              \n     185              # Other options                                                   \n     186              ('--enable-mpi-thread-multiple' if '+thread_multiple' in spec     \n     187                  else '--disable-mpi-thread-multiple'),                        \n     188              '--with-pmi' if '+pmi' in spec else '--without-pmi',              \n     189              '--with-sqlite3' if '+sqlite3' in spec else '--without-sqlite3',  \n     190              '--enable-vt' if '+vt' in spec else '--disable-vt'                \n     191          ])                                                                    \n     192          if '+verbs' in spec:\n     193              path = _verbs_dir()\n     194              if path is not None and path not in ('/usr', '/usr/local'):\n     195                  config_args.append('--with-%s=%s' % (self.verbs, path))\n     196              else:\n     197                  config_args.append('--with-%s' % self.verbs)\n     198          else:\n     199              config_args.append('--without-%s' % self.verbs)\n     200\n     201          # TODO: use variants for this, e.g. +lanl, +llnl, etc.\n     202          # use this for LANL builds, but for LLNL builds, we need:\n     203          #     \"--with-platform=contrib/platform/llnl/optimized\"\n     204          if self.version == ver(\"1.6.5\") and '+lanl' in spec:\n     205              config_args.append(\"--with-platform=contrib/platform/lanl/tlcc2/optimized-nopanasas\")  # NOQA: ignore=E501\n     206\n  >> 207          configure(*config_args)\n     208          make()\n     209          make(\"install\")\n     210\n     211          self.filter_compilers()\n==> Error: Installation process had nonzero exit code : 256\n```\n\nMy log file reads\n\n```\n[amklinv@s995692 bin]$ cat /tmp/amklinv/spack-stage/spack-stage-G8npQ1/openmpi-2.0.1/spack-build.out\n==> './configure' '--prefix=/home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol' '--with-hwloc=/home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/hwloc-1.11.4-npuz6xtizklh6v5ckrk6wdv4wo7kfulq' '--enable-shared' '--enable-static' '--enable-mpi-cxx' '--without-tm' '--without-slurm' '--without-psm' '--without-psm2' '--without-mxm' '--disable-mpi-thread-multiple' '--without-pmi' '--without-sqlite3' '--enable-vt' '--without-verbs'     \nconfigure: WARNING: unrecognized options: --without-sqlite3, --enable-vt                            \n\n============================================================================\n== Configuring Open MPI                                                     \n============================================================================\n\n*** Startup tests\nchecking build system type... x86_64-unknown-linux-gnu\nchecking host system type... x86_64-unknown-linux-gnu \nchecking target system type... x86_64-unknown-linux-gnu\nchecking for gcc... /home/amklinv/spack/lib/spack/env/gcc/gcc\nchecking whether the C compiler works... yes                 \nchecking for C compiler default output file name... a.out    \nchecking for suffix of executables...                        \nchecking whether we are cross compiling... no                \nchecking for suffix of object files... o                     \nchecking whether we are using the GNU C compiler... yes      \nchecking whether /home/amklinv/spack/lib/spack/env/gcc/gcc accepts -g... yes\nchecking for /home/amklinv/spack/lib/spack/env/gcc/gcc option to accept ISO C89... none needed\nchecking whether /home/amklinv/spack/lib/spack/env/gcc/gcc understands -c and -o together... yes\nchecking how to run the C preprocessor... /home/amklinv/spack/lib/spack/env/gcc/gcc -E          \nchecking for grep that handles long lines and -e... /bin/grep                                   \nchecking for egrep... /bin/grep -E                                                              \nchecking for ANSI C header files... yes                                                         \nchecking for sys/types.h... yes                                                                 \nchecking for sys/stat.h... yes                                                                  \nchecking for stdlib.h... yes                                                                    \nchecking for string.h... yes                                                                    \nchecking for memory.h... yes                                                                    \nchecking for strings.h... yes                                                                   \nchecking for inttypes.h... yes                                                                  \nchecking for stdint.h... yes                                                                    \nchecking for unistd.h... yes                                                                    \nchecking minix/config.h usability... no                                                         \nchecking minix/config.h presence... no                                                          \nchecking for minix/config.h... no                                                               \nchecking whether it is safe to define __EXTENSIONS__... yes                                     \nchecking for a BSD-compatible install... /usr/bin/install -c                                    \nchecking whether build environment is sane... yes                                               \nchecking for a thread-safe mkdir -p... /bin/mkdir -p                                            \nchecking for gawk... gawk                                                                       \nchecking whether make sets $(MAKE)... yes                                                       \nchecking for style of include used by make... GNU                                               \nchecking whether make supports nested variables... yes                                          \nchecking whether UID '85185' is supported by ustar format... yes                                \nchecking whether GID '29684' is supported by ustar format... yes                                \nchecking how to create a ustar tar archive... gnutar                                            \nchecking dependency style of /home/amklinv/spack/lib/spack/env/gcc/gcc... gcc3                  \nchecking whether make supports nested variables... (cached) yes                                 \n\n*** Checking versions\nchecking for repo version... v2.0.0-257-gee86e07\nchecking Open MPI version... 2.0.1              \nchecking Open MPI release date... Sep 02, 2016  \nchecking Open MPI repository version... v2.0.0-257-gee86e07\nchecking for repo version... v2.0.0-257-gee86e07           \nchecking Open MPI Run-Time Environment version... 2.0.1    \nchecking Open MPI Run-Time Environment release date... Sep 02, 2016\nchecking Open MPI Run-Time Environment repository version... v2.0.0-257-gee86e07\nchecking for repo version... v2.0.0-257-gee86e07                                \nchecking Open SHMEM version... 2.0.1                                            \nchecking Open SHMEM release date... Sep 02, 2016                                \nchecking Open SHMEM repository version... v2.0.0-257-gee86e07                   \nchecking for repo version... v2.0.0-257-gee86e07                                \nchecking Open Portable Access Layer version... 2.0.1                            \nchecking Open Portable Access Layer release date... Sep 02, 2016                \nchecking Open Portable Access Layer repository version... v2.0.0-257-gee86e07   \nchecking for bootstrap Autoconf version... 2.69                                 \nchecking for bootstrap Automake version... 1.15                                 \nchecking for boostrap Libtool version... 2.4.6                                  \n\n*** Initialization, setup\nconfigure: builddir: /tmp/amklinv/spack-stage/spack-stage-G8npQ1/openmpi-2.0.1\nconfigure: srcdir: /tmp/amklinv/spack-stage/spack-stage-G8npQ1/openmpi-2.0.1  \ninstalling to directory \"/home/amklinv/spack/opt/spack/linux-redhat6-x86_64/gcc-5.3.0/openmpi-2.0.1-ddxjy6r7tisyulta73rimvwzpmpcprol\"                                                                   \n\n*** OPAL Configuration options\nchecking if want to run code coverage... no\nchecking if want to compile with branch probabilities... no\nchecking if want to debug memory usage... no               \nchecking if want to profile memory usage... no             \nchecking if want developer-level compiler pickyness... no  \nchecking if want developer-level debugging code... no      \nchecking if want to developer-level timing framework... no \nchecking if want to install project-internal header files... no\nchecking if want pretty-print stacktrace... yes                \nchecking if want pty support... yes                            \nchecking if want weak symbol support... yes                    \nchecking if want dlopen support... yes                         \nchecking if want heterogeneous support... no                   \nchecking if word-sized integers must be word-size aligned... no\nchecking if want IPv6 support... no                            \nchecking if want package/brand string... Open MPI amklinv@s995692.srn.sandia.gov Distribution\nchecking if want ident string... 2.0.1                                                       \nchecking if want to use an alternative checksum algo for messages... no                      \nchecking maximum length of processor name... 256                                             \nchecking maximum length of error string... 256                                               \nchecking maximum length of object name... 64                                                 \nchecking maximum length of info key... 36                                                    \nchecking maximum length of info val... 256                                                   \nchecking maximum length of port name... 1024                                                 \nchecking maximum length of datarep string... 128                                             \nchecking if want getpwuid support... yes                                                     \nchecking __NetBSD__... no                                                                    \nchecking __FreeBSD__... no                                                                   \nchecking __OpenBSD__... no                                                                   \nchecking __DragonFly__... no                                                                 \nchecking __386BSD__... no                                                                    \nchecking __bsdi__... no                                                                      \nchecking __APPLE__... no                                                                     \nchecking __linux__... yes                                                                    \nchecking __sun__... no                                                                       \nchecking __sun... no                                                                         \nchecking netdb.h usability... yes                                                            \nchecking netdb.h presence... yes                                                             \nchecking for netdb.h... yes                                                                  \nchecking netinet/in.h usability... yes                                                       \nchecking netinet/in.h presence... yes                                                        \nchecking for netinet/in.h... yes                                                             \nchecking netinet/tcp.h usability... yes                                                      \nchecking netinet/tcp.h presence... yes                                                       \nchecking for netinet/tcp.h... yes                                                            \nchecking for struct sockaddr_in... yes                                                       \nchecking if --with-cuda is set... not set (--with-cuda=)                                     \nchecking whether CU_POINTER_ATTRIBUTE_SYNC_MEMOPS is declared... no                          \nchecking whether cuPointerGetAttributes is declared... no                                    \nchecking if have cuda support... no                                                          \n\n*** ORTE Configuration options\nchecking if want orterun \"--prefix\" behavior to be enabled by default... no\nchecking if want orte static ports... yes                                  \n\n*** OMPI Configuration options\nchecking if want compile-time warnings inside of mpi.h... yes\nchecking if want sparse process groups... no                 \nchecking if want peruse support... no                        \nchecking if want Fortran MPI bindings...  (try)              \nchecking if want C++ bindings... yes                         \nchecking if want MPI::SEEK_SET support... yes                \nchecking if want run-time MPI parameter checking... runtime  \nchecking which 'use mpi_f08' implementation to use... regular (no subarray support)\n\n*** OSHMEM Configuration options\nchecking if want oshmem... yes  \nchecking if want SGI/Quadrics compatibility mode... yes\nchecking if want OSHMEM API parameter checking... always\nchecking for on_exit... yes                             \nchecking if want pshmem... yes                          \nchecking if want to build OSHMEM fortran bindings... yes\nchecking if want wrapper compiler rpath support... yes  \n\n============================================================================\n== Compiler and preprocessor tests                                          \n============================================================================\n\n*** C compiler and preprocessor\nchecking for gcc... (cached) /home/amklinv/spack/lib/spack/env/gcc/gcc\nchecking whether we are using the GNU C compiler... (cached) yes      \nchecking whether /home/amklinv/spack/lib/spack/env/gcc/gcc accepts -g... (cached) yes\nchecking for /home/amklinv/spack/lib/spack/env/gcc/gcc option to accept ISO C89... (cached) none needed                                                                                                 \nchecking whether /home/amklinv/spack/lib/spack/env/gcc/gcc understands -c and -o together... (cached) yes                                                                                               \nchecking for /home/amklinv/spack/lib/spack/env/gcc/gcc option to accept ISO C99... none needed      \nchecking for the C compiler vendor... gnu                                                           \nchecking for ANSI C header files... (cached) yes                                                    \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports -finline-functions... yes            \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports -fno-strict-aliasing... yes          \nconfigure: WARNING:  -fno-strict-aliasing has been added to CFLAGS                                  \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports __builtin_expect... yes              \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports __builtin_prefetch... yes            \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports __builtin_clz... yes                 \nchecking for C optimization flags... -O3 -DNDEBUG -finline-functions -fno-strict-aliasing           \nchecking for Interix environment... no                                                              \nchecking for C ident string support... #ident                                                       \nchecking for int8_t... yes                                                                          \nchecking for uint8_t... yes                                                                         \nchecking for int16_t... yes                                                                         \nchecking for uint16_t... yes                                                                        \nchecking for int32_t... yes                                                                         \nchecking for uint32_t... yes                                                                        \nchecking for int64_t... yes                                                                         \nchecking for uint64_t... yes                                                                        \nchecking for int128_t... no                                                                         \nchecking for __int128... yes                                                                        \nchecking for uint128_t... no                                                                        \nchecking for long long... yes                                                                       \nchecking for __float128... yes                                                                      \nchecking for long double... yes                                                                     \nchecking complex.h usability... yes                                                                 \nchecking complex.h presence... yes                                                                  \nchecking for complex.h... yes                                                                       \nchecking for float _Complex... yes                                                                  \nchecking for double _Complex... yes                                                                 \nchecking for long double _Complex... yes                                                            \nchecking for intptr_t... yes                                                                        \nchecking for uintptr_t... yes                                                                       \nchecking for mode_t... yes                                                                          \nchecking for ssize_t... yes                                                                         \nchecking for ptrdiff_t... yes                                                                       \nchecking size of char... 1                                                                          \nchecking size of short... 2                                                                         \nchecking size of int... 4                                                                           \nchecking size of long... 8                                                                          \nchecking size of long long... 8                                                                     \nchecking size of float... 4                                                                         \nchecking size of double... 8                                                                        \nchecking size of long double... 16                                                                  \nchecking size of __float128... 16                                                                   \nchecking size of float _Complex... 8                                                                \nchecking size of double _Complex... 16                                                              \nchecking size of long double _Complex... 32                                                         \nchecking size of void *... 8                                                                        \nchecking size of size_t... 8                                                                        \nchecking size of ssize_t... 8                                                                       \nchecking size of ptrdiff_t... 8                                                                     \nchecking size of wchar_t... 4                                                                       \nchecking size of pid_t... 4                                                                         \nchecking alignment of _Bool... 1                                                                    \nchecking alignment of int8_t... 1                                                                   \nchecking alignment of int16_t... 2                                                                  \nchecking alignment of int32_t... 4                                                                  \nchecking alignment of int64_t... 8                                                                  \nchecking alignment of char... 1                                                                     \nchecking alignment of short... 2                                                                    \nchecking alignment of wchar_t... 4                                                                  \nchecking alignment of int... 4                                                                      \nchecking alignment of long... 8                                                                     \nchecking alignment of long long... 8                                                                \nchecking alignment of float... 4                                                                    \nchecking alignment of double... 8                                                                   \nchecking alignment of long double... 16                                                             \nchecking alignment of __float128... 16                                                              \nchecking alignment of float _Complex... 4                                                           \nchecking alignment of double _Complex... 8                                                          \nchecking alignment of long double _Complex... 16                                                    \nchecking alignment of void *... 8                                                                   \nchecking alignment of size_t... 8                                                                   \nchecking for C bool type... no                                                                      \nchecking size of _Bool... 1                                                                         \nchecking for weak symbol support... yes                                                             \nchecking for macro weak symbol support... yes                                                       \nchecking for functional offsetof macro... yes                                                       \n\n*** C++ compiler and preprocessor\nchecking whether we are using the GNU C++ compiler... yes\nchecking whether /home/amklinv/spack/lib/spack/env/gcc/g++ accepts -g... yes\nchecking dependency style of /home/amklinv/spack/lib/spack/env/gcc/g++... gcc3\nchecking how to run the C++ preprocessor... /home/amklinv/spack/lib/spack/env/gcc/g++ -E\nchecking for the C++ compiler vendor... gnu                                             \nchecking if /home/amklinv/spack/lib/spack/env/gcc/g++ supports -finline-functions... yes\nconfigure: WARNING:  -finline-functions has been added to CXXFLAGS                      \nchecking if C and C++ are link compatible... yes                                        \nchecking for C++ optimization flags... -O3 -DNDEBUG -finline-functions                  \nchecking size of bool... 1                                                              \nchecking alignment of bool... 1                                                         \n\n*** C++ compiler and preprocessor\nchecking whether we are using the GNU C++ compiler... (cached) yes\nchecking whether /home/amklinv/spack/lib/spack/env/gcc/g++ accepts -g... (cached) yes\nchecking dependency style of /home/amklinv/spack/lib/spack/env/gcc/g++... (cached) gcc3\nchecking how to run the C++ preprocessor... /home/amklinv/spack/lib/spack/env/gcc/g++ -E\nchecking if C++ compiler works... yes                                                   \nchecking if /home/amklinv/spack/lib/spack/env/gcc/g++ supports -finline-functions... yes\nconfigure: WARNING:  -finline-functions has been added to CXXFLAGS                      \nchecking if C and C++ are link compatible... (cached) yes                               \nchecking for C++ optimization flags... -O3 -DNDEBUG -finline-functions                  \nchecking size of bool... (cached) 1                                                     \nchecking alignment of bool... (cached) 1                                                \nchecking if able to build the MPI C++ bindings... yes                                   \nchecking for the C++ compiler vendor... (cached) gnu                                    \nchecking if want C++ exception handling... no                                           \nchecking for C++ template_repository_directory... not used                              \nchecking for C++ compiler template parameters... none needed                            \nchecking for C++ ident string support... #ident                                         \nchecking if /home/amklinv/spack/lib/spack/env/gcc/g++ supports __builtin_expect... yes  \nchecking if /home/amklinv/spack/lib/spack/env/gcc/g++ supports __builtin_prefetch... yes\nchecking if /home/amklinv/spack/lib/spack/env/gcc/g++ supports const_cast<> properly... yes\n\n*** Compiler characteristics\nchecking for __attribute__... yes\nchecking for __attribute__(aligned)... yes\nchecking for __attribute__(always_inline)... yes\nchecking for __attribute__(cold)... yes         \nchecking for __attribute__(const)... yes        \nchecking for __attribute__(deprecated)... yes   \nchecking for __attribute__(deprecated_argument)... yes\nchecking for __attribute__(format)... yes             \nchecking for __attribute__(format_funcptr)... yes     \nchecking for __attribute__(hot)... yes                \nchecking for __attribute__(malloc)... yes             \nchecking for __attribute__(may_alias)... yes          \nchecking for __attribute__(no_instrument_function)... yes\nchecking for __attribute__(noinline)... yes              \nchecking for __attribute__(nonnull)... yes               \nchecking for __attribute__(noreturn)... yes              \nchecking for __attribute__(noreturn_funcptr)... yes      \nchecking for __attribute__(packed)... yes                \nchecking for __attribute__(pure)... yes                  \nchecking for __attribute__(sentinel)... yes              \nchecking for __attribute__(unused)... yes                \nchecking for __attribute__(visibility)... yes            \nchecking for __attribute__(warn_unused_result)... yes    \nchecking for __attribute__(weak_alias)... yes            \nchecking for __attribute__(destructor)... yes            \nchecking for compiler familyid... 1                      \nchecking for compiler familyname... GNU                  \nchecking for compiler version... 328448                  \nchecking for compiler version_str... 5.3.0               \n\n*** Java compiler\nchecking OSX locations... not found\nchecking Linux locations... not found\nchecking Solaris locations... not found\nchecking Java support available... no  \n\n*** Java MPI bindings\nchecking if want Java bindings... no\n\n*** OpenSHMEM profiling\nchecking if pshmem will be enabled... yes (weak symbols supported)\n\n*** Assembler\nchecking dependency style of /home/amklinv/spack/lib/spack/env/gcc/gcc... gcc3\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B         \nchecking the name lister (/usr/bin/nm -B) interface... BSD nm                 \nchecking for fgrep... /bin/grep -F                                            \nchecking if .proc/endp is needed... no                                        \nchecking directive for setting text section... .text                          \nchecking directive for exporting symbols... .globl                            \nchecking for objdump... objdump                                               \nchecking if .note.GNU-stack is needed... yes                                  \nchecking suffix for labels... :                                               \nchecking prefix for global symbol labels...                                   \nchecking prefix for lsym labels... .L                                         \nchecking prefix for function in .type... @                                    \nchecking if .size is needed... yes                                            \nchecking if .align directive takes logarithmic value... no                    \nchecking if processor supports x86_64 16-byte compare-and-exchange... yes     \nchecking if compiler correctly handles volatile 128bits... yes                \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports GCC inline assembly... yes\nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports DEC inline assembly... no \nchecking if /home/amklinv/spack/lib/spack/env/gcc/gcc supports XLC inline assembly... no \nchecking for assembly format... default-.text-.globl-:--.L-@-1-0-1-1-1                   \nchecking for assembly architecture... AMD64                                              \nchecking for builtin atomics... BUILTIN_NO\nchecking for perl... perl\nchecking for pre-built assembly file... yes (atomic-amd64-linux.s)\nchecking for atomic assembly filename... atomic-amd64-linux.s\n\n*** Fortran compiler\nchecking whether we are using the GNU Fortran compiler... yes\nchecking whether /home/amklinv/spack/lib/spack/env/gcc/gfortran accepts -g... yes\nconfigure: WARNING: Open MPI now ignores the F77 and FFLAGS environment variables; only the FC and FCFLAGS environment variables are used.\nchecking whether ln -s works... yes\nchecking if Fortran compiler works... no\n**********************************************************************\n* It appears that your Fortran compiler is unable to produce working\n* executables.  A simple test application failed to properly\n* execute.  Note that this is likely not a problem with Open MPI,\n* but a problem with the local compiler installation.  More\n* information (including exactly what command was given to the\n* compiler and what error resulted when the command was executed) is\n* available in the config.log file in the Open MPI build directory.\n**********************************************************************\nconfigure: error: Could not run a simple Fortran program.  Aborting.\n```\n\nI would appreciate any help you could provide in resolving this issue and would be happy to provide any additional information that might be helpful.\n",
    "performed_via_github_app": null
}