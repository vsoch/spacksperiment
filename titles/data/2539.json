{
    "url": "https://api.github.com/repos/spack/spack/issues/2539",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/2539/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/2539/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/2539/events",
    "html_url": "https://github.com/spack/spack/pull/2539",
    "id": 194657126,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTczNTE3NzM=",
    "number": 2539,
    "title": "Better cxx11/14/17 flags for GNU/Clang/Intel",
    "user": {
        "login": "drbenmorgan",
        "id": 1102642,
        "node_id": "MDQ6VXNlcjExMDI2NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1102642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/drbenmorgan",
        "html_url": "https://github.com/drbenmorgan",
        "followers_url": "https://api.github.com/users/drbenmorgan/followers",
        "following_url": "https://api.github.com/users/drbenmorgan/following{/other_user}",
        "gists_url": "https://api.github.com/users/drbenmorgan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/drbenmorgan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/drbenmorgan/subscriptions",
        "organizations_url": "https://api.github.com/users/drbenmorgan/orgs",
        "repos_url": "https://api.github.com/users/drbenmorgan/repos",
        "events_url": "https://api.github.com/users/drbenmorgan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/drbenmorgan/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446615268,
            "node_id": "MDU6TGFiZWw0NDY2MTUyNjg=",
            "url": "https://api.github.com/repos/spack/spack/labels/compilers",
            "name": "compilers",
            "color": "f9d0c4",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-09T17:51:52Z",
    "updated_at": "2019-06-13T15:28:06Z",
    "closed_at": "2016-12-13T21:15:10Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/2539",
        "html_url": "https://github.com/spack/spack/pull/2539",
        "diff_url": "https://github.com/spack/spack/pull/2539.diff",
        "patch_url": "https://github.com/spack/spack/pull/2539.patch"
    },
    "body": "This PR adds basic support for cxx11/cxx14 flags for Apple Clang with version checking, cxx14 flag support for Intel, and a small version correction in GCC's cxx14 flags. Version checks and flags used much of the logic/lore from CMake's standard setting so I believe the flags to be robust, but possibly conservative (earlier compiler versions than selected might provide some support).\r\n\r\nAll spack unit and flake8 tests seem to pass, though I couldn't see any obvious place to add or extend actual unit tests on setting these flags. Let me know if there's a good way or place to do this. I've been able to test by hand with gcc's 4.5 through 4.9, Intel 13 and 15, but only Xcode/Apple LLVM 8. This is only visually confirming that `self.compiler.cxx{11,14}_flag` has the right value though. \r\n\r\nThis is a WIP given the above caveats, and also because I wondered about also adding a new `cxx17_flag` property in `lib/spack/spack/compiler.py` with overrides for GNU and Clang. These only provide partial support as yet, but current versions do allow the `-std=c++1z` flag. It's easy enough to add, but obviously needs discussion.",
    "performed_via_github_app": null
}