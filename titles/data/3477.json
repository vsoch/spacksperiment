{
    "url": "https://api.github.com/repos/spack/spack/issues/3477",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3477/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3477/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3477/events",
    "html_url": "https://github.com/spack/spack/issues/3477",
    "id": 215074174,
    "node_id": "MDU6SXNzdWUyMTUwNzQxNzQ=",
    "number": 3477,
    "title": "Cray: Unable to target mic-knl on LANL's Trinity machine",
    "user": {
        "login": "KineticTheory",
        "id": 17579601,
        "node_id": "MDQ6VXNlcjE3NTc5NjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/17579601?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KineticTheory",
        "html_url": "https://github.com/KineticTheory",
        "followers_url": "https://api.github.com/users/KineticTheory/followers",
        "following_url": "https://api.github.com/users/KineticTheory/following{/other_user}",
        "gists_url": "https://api.github.com/users/KineticTheory/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KineticTheory/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KineticTheory/subscriptions",
        "organizations_url": "https://api.github.com/users/KineticTheory/orgs",
        "repos_url": "https://api.github.com/users/KineticTheory/repos",
        "events_url": "https://api.github.com/users/KineticTheory/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KineticTheory/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 446614485,
            "node_id": "MDU6TGFiZWw0NDY2MTQ0ODU=",
            "url": "https://api.github.com/repos/spack/spack/labels/cray",
            "name": "cray",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-17T17:40:25Z",
    "updated_at": "2021-05-22T23:43:12Z",
    "closed_at": "2021-05-22T23:43:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Trinity has two types of back-end machines: haswell and mic-knl.  Spack works great for targeting the haswells.  When targeting the mic-knl nodes, I normally `module swap craype-haswell craype-mic-knl`, but I can't figure out how to do this with spack. BTW - All builds are done from the haswell front-end.\r\n\r\nFor example:\r\n``` \r\nspack spec libelf%intel@17.0.1\r\n...\r\nlibelf@0.8.13%intel@17.0.1 arch=cray-CNL-haswell\r\n```\r\n\r\nOkay that looks good for the haswells, but we want to target the mic-knl nodes:\r\n``` \r\nspack spec libelf%intel@17.0.1 target=mic-knl\r\n...\r\nlibelf@0.8.13%intel@17.0.1 arch=cray-CNL-mic-knl\r\n```\r\n\r\nThat looks good, let's install:\r\n``` \r\nspack install libelf%intel@17.0.1 target=mic-knl\r\n...\r\n % spack install libelf%intel@17.0.1  target=mic-knl\r\n==> Installing libelf\r\n==> Error: ValueError: Can't recreate arch for spec cray-CNL-mic-knl on current arch cray-CNL-haswell; spec architecture is too different\r\n/usr/projects/draco/vendors/spack.tt.20170316/lib/spack/spack/package.py:893, in architecture:\r\n     887      @property\r\n     888      def architecture(self):\r\n     889          \"\"\"Get the spack.architecture.Arch object that represents the\r\n     890          environment in which this package will be built.\"\"\"\r\n     891          if not self.spec.concrete:\r\n     892              raise ValueError(\"Can only get the arch for concrete package.\")\r\n  >> 893          return spack.architecture.arch_for_spec(self.spec.architecture)\r\n```\r\n\r\nAny suggestions for debugging this? How do I know that `mic-knl` is even a valid target for spack?\r\n\r\n\r\n\r\n",
    "performed_via_github_app": null
}