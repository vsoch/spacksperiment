{
    "url": "https://api.github.com/repos/spack/spack/issues/459",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/459/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/459/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/459/events",
    "html_url": "https://github.com/spack/spack/pull/459",
    "id": 137298157,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjExMDE5MzM=",
    "number": 459,
    "title": "Bash Programmable Completion for Spack",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-02-29T16:15:50Z",
    "updated_at": "2017-03-24T22:12:27Z",
    "closed_at": "2016-06-22T16:13:56Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/459",
        "html_url": "https://github.com/spack/spack/pull/459",
        "diff_url": "https://github.com/spack/spack/pull/459.diff",
        "patch_url": "https://github.com/spack/spack/pull/459.patch"
    },
    "body": "Do you have trouble remembering the ordering for `spack config edit compilers`? Do you have to run `spack list 'py-*'` before installing any Python package because you can't remember the spelling of `py-mysqldb1`? Don't you wish you could just tab-to-complete everything? Allow me to introduce Bash Programmable Completion for Spack!\n\nTo add tab completion, simply source setup-env.sh from a Bash shell. Here is an example session. In the following examples, let the cursor be denoted by brackets, i.e. [], and assume that the user presses <kbd>TAB</kbd><kbd>TAB</kbd> at the cursor position:\n\n``` bash\n$ spack []\nactivate      create        find          mirror        repo          url-parse\narch          deactivate    graph         module        restage       urls\nbootstrap     dependents    help          package-list  spec          use\ncd            diy           info          patch         stage         versions\nchecksum      doc           install       pkg           test          \nclean         edit          list          providers     test-install  \ncompiler      env           load          purge         uninstall     \ncompilers     extensions    location      python        unload        \nconfig        fetch         md5           reindex       unuse         \n$ spack con[]\n$ spack config []\nedit  get   \n$ spack config e[]\n$ spack config edit []\ncompilers  mirrors    \n$ spack config edit c[]\n$ spack config edit compilers  # the full command\n```\n\n``` bash\n$ spack in[]\ninfo     install  \n$ spack ins[]\n$ spack install []\nDisplay all 320 possibilities? (y or n)  # lists all 320 available packages\n$ spack install py-[]\npy-astropy           py-mako              py-pmw               py-scikit-learn\npy-basemap           py-matplotlib        py-pychecker         py-scipy\npy-biopython         py-mock              py-pycparser         py-setuptools\npy-blessings         py-mpi4py            py-pyelftools        py-shiboken\npy-cffi              py-mx                py-pygments          py-sip\npy-coverage          py-mysqldb1          py-pylint            py-six\npy-cython            py-nose              py-pypar             py-sphinx\npy-dateutil          py-numexpr           py-pyparsing         py-sympy\npy-epydoc            py-numpy             py-pyqt              py-tappy\npy-funcsigs          py-pandas            py-pyside            py-twisted\npy-genders           py-pbr               py-pytables          py-urwid\npy-gnuplot           py-periodictable     py-python-daemon     py-virtualenv\npy-h5py              py-pexpect           py-pytz              py-wheel\npy-ipython           py-phonopy           py-pyyaml            py-yapf\npy-libxml2           py-pil               py-rpy2              \npy-lockfile          py-pillow            py-scientificpython  \n$ spack install py-numpy []\n$ spack install --[] py-numpy  # whoops, forgot to add an option\n--fake                 --ignore-dependencies  --keep-prefix          --no-checksum\n--help                 --jobs                 --keep-stage           --verbose\n$ spack install --v[] py-numpy\n$ spack install --verbose[] py-numpy  # the complete command\n```\n",
    "performed_via_github_app": null
}