{
    "url": "https://api.github.com/repos/spack/spack/issues/3134",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3134/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3134/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3134/events",
    "html_url": "https://github.com/spack/spack/pull/3134",
    "id": 207024830,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA1Nzc3MDMw",
    "number": 3134,
    "title": "Package-Level Module Autoloading",
    "user": {
        "login": "citibeth",
        "id": 1924215,
        "node_id": "MDQ6VXNlcjE5MjQyMTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1924215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citibeth",
        "html_url": "https://github.com/citibeth",
        "followers_url": "https://api.github.com/users/citibeth/followers",
        "following_url": "https://api.github.com/users/citibeth/following{/other_user}",
        "gists_url": "https://api.github.com/users/citibeth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citibeth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citibeth/subscriptions",
        "organizations_url": "https://api.github.com/users/citibeth/orgs",
        "repos_url": "https://api.github.com/users/citibeth/repos",
        "events_url": "https://api.github.com/users/citibeth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citibeth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        },
        {
            "id": 446630556,
            "node_id": "MDU6TGFiZWw0NDY2MzA1NTY=",
            "url": "https://api.github.com/repos/spack/spack/labels/specs",
            "name": "specs",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-02-12T02:52:49Z",
    "updated_at": "2019-11-11T16:47:03Z",
    "closed_at": "2019-11-11T16:47:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/3134",
        "html_url": "https://github.com/spack/spack/pull/3134",
        "diff_url": "https://github.com/spack/spack/pull/3134.diff",
        "patch_url": "https://github.com/spack/spack/pull/3134.patch"
    },
    "body": "@adamjstewart @tgamblin \r\n\r\nThis addresses issues brought up in conversation between @citibeth and @alalazo on module autoloading in #1662...\r\n\r\nIt introduces the concept of autoloading at the `Package` and `depends_on()` level.\r\n\r\n1. If you put autoload=True in package, and anything that depends on that package will autoload its module.  The canonical example here is `PythonPackage`.  Anything depending on a `PythonPackage` subclass will be autoloaded.  For example, `py-numpy` will be autoloaded by anything that depends on it.  However, if `py-numpy` depends on (say) `openblas`, then `openblas` will not be autoloaded.\r\n\r\n2. You can override the package-level autoloading in the `depends_on()` declarations.  `py-netcdf` depends on `netcdf`.  But by default, `netcdf` will NOT be autoloaded from `py-netcdf` because `netcdf` does not subclass `PythonProject` (and `autoload=True` was not set in `netcdf/package.py`).  However, Python extensions (such as the one generated in `py-netcdf`) do not have RPATHs, and therefore will not be able to properly link `netcdf` without something in `LD_LIBRARY_PATH`.  Therefore, we use the following in `py-netcdf/package.py`:\r\n```\r\ndepends_on('netcdf', autoload=True)\r\n```\r\n\r\nI believe that this feature will provide the tools to eventually make module autoloading \"just work,\" based on particulars of the packages.  I expect there will be some adjustment, as we find exceptions to the default autoloading rules (such as `PythonPackage.autoload=True`).\r\n\r\nThe way to specify autoloading described in this PR does not affect the way autoloading is currently specified in `modules.yaml`.  If there is demand, I could also add a switch to `modules.yaml` that would turn this feature off entirely.\r\n",
    "performed_via_github_app": null
}