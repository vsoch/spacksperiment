{
    "url": "https://api.github.com/repos/spack/spack/issues/12340",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/12340/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/12340/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/12340/events",
    "html_url": "https://github.com/spack/spack/issues/12340",
    "id": 478673448,
    "node_id": "MDU6SXNzdWU0Nzg2NzM0NDg=",
    "number": 12340,
    "title": "How to handle Python certificates",
    "user": {
        "login": "adamjstewart",
        "id": 12021217,
        "node_id": "MDQ6VXNlcjEyMDIxMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12021217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjstewart",
        "html_url": "https://github.com/adamjstewart",
        "followers_url": "https://api.github.com/users/adamjstewart/followers",
        "following_url": "https://api.github.com/users/adamjstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/adamjstewart/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adamjstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adamjstewart/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjstewart/orgs",
        "repos_url": "https://api.github.com/users/adamjstewart/repos",
        "events_url": "https://api.github.com/users/adamjstewart/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adamjstewart/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 446619758,
            "node_id": "MDU6TGFiZWw0NDY2MTk3NTg=",
            "url": "https://api.github.com/repos/spack/spack/labels/python",
            "name": "python",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 511006597,
            "node_id": "MDU6TGFiZWw1MTEwMDY1OTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/security",
            "name": "security",
            "color": "b60205",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-08T20:30:54Z",
    "updated_at": "2019-08-08T23:11:29Z",
    "closed_at": "2019-08-08T23:11:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "### Issue\r\n\r\nI'm trying to use a Spack-installed Python package (`py-earthengine-api`) but I found that Spack's Python package doesn't install any certificates:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/urllib/request.py\", line 1317, in do_open\r\n    encode_chunked=req.has_header('Transfer-encoding'))\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 1244, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 1290, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 1239, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 966, in send\r\n    self.connect()\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/http/client.py\", line 1414, in connect\r\n    server_hostname=server_hostname)\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"/mnt/a/u/sciteam/stewart1/crop_classification/.spack-env/view/lib/python3.7/ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)\r\n```\r\n\r\n### Solution\r\n\r\nIs there a way we can get Spack's `python` package to automatically install certificates so that `ssl` actually works? I once had to do something similar for the `mercurial` package, where I added `py-certifi` as a dependency and manually configured `hgrc` to point to the certificate installation directory. Maybe we could add `py-certifi` as a resource to the `python` package?\r\n\r\n### Workarounds\r\n\r\nCurrently, you can do `spack install py-certifi` to solve this problem. The issue with this workaround is that Python packages that require the `ssl` library never explicitly state a dependency on `certifi`. It is just expected to be part of the Python installation.",
    "performed_via_github_app": null
}