{
    "url": "https://api.github.com/repos/spack/spack/issues/21413",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/21413/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/21413/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/21413/events",
    "html_url": "https://github.com/spack/spack/issues/21413",
    "id": 797826654,
    "node_id": "MDU6SXNzdWU3OTc4MjY2NTQ=",
    "number": 21413,
    "title": "Sourceable/Module File Generation for Environment Activation",
    "user": {
        "login": "RobertRosca",
        "id": 32569096,
        "node_id": "MDQ6VXNlcjMyNTY5MDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/32569096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RobertRosca",
        "html_url": "https://github.com/RobertRosca",
        "followers_url": "https://api.github.com/users/RobertRosca/followers",
        "following_url": "https://api.github.com/users/RobertRosca/following{/other_user}",
        "gists_url": "https://api.github.com/users/RobertRosca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RobertRosca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RobertRosca/subscriptions",
        "organizations_url": "https://api.github.com/users/RobertRosca/orgs",
        "repos_url": "https://api.github.com/users/RobertRosca/repos",
        "events_url": "https://api.github.com/users/RobertRosca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RobertRosca/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908756,
            "node_id": "MDU6TGFiZWw3MzkwODc1Ng==",
            "url": "https://api.github.com/repos/spack/spack/labels/feature",
            "name": "feature",
            "color": "84b6eb",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-01-31T22:18:30Z",
    "updated_at": "2021-02-01T11:16:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It would be nice to have an option to get `spack env activate --sh -v` to output a modulefile or a sourceable script that could be activated.\r\n\r\n### Rationale\r\n\r\nIn some cases it would be nice to have a static way for users to activate an environment (like python venv `activate` scripts). `spack env activate --sh -v` gets you pretty close to this, you just need to prepend paths to environment variables instead of printing off the expanded paths to export.\r\n\r\nCreating an activate script like that may be an issue if the environment is mutable, but for deployed spack environments which most users can't modify directly then having a sourceable script would be a nice option.\r\n\r\nThe main motivation for this is that on our cluster at European XFEL we've noticed that the `spack env activate` command can be a bit slow the first time it runs on a node, after some investigation this seems to happen when the `/etc/spack/defaults/repos.yaml` configuration file is being read in. My guess is that this is caused by files needing to be transferred to the current node and there being some latency caused by the distributed file system taking a bit of time to move files around.\r\n\r\nAlso, most of our users won't know what spack is/does, so just having a simple file you can source to activate the environment like a python venv's `./bin/activate` script would be pretty convenient.  \r\n\r\n### Description\r\n\r\nRunning `spack env activate --sh .` in the root of an environment currently exports the shell script required to activate the environment for the user's current environment variables, with all of the variables expanded out. Since the variables are expanded this means that it's not possible to just pipe this to a file and then provide it as an activation script for all users since it will override their own environment values.\r\n\r\nIf `spack env activate --sh .` instead outputted the script without expanded variables, then you could just pipe the output like this `spack env activate --sh . > activate` and then users could run `source activate` to activate the environment. Likewise the same could be done for deactivate as well to allow for environment deactivation. \r\n\r\n### Additional information\r\n\r\nI'd be happy to do this myself since it doesn't seem like a complex change but I do have a few questions first:\r\n\r\n1. I feel I might be missing some context here and maybe implementing what I'm requesting is just a bad idea for a reason I haven't thought of, would there be some consequences to doing things this way?\r\n2. Would it make sense to, if this gets implemented, add an option to the environment generation command to create and maintain this activate script? That way it could be kept up to date with changes to the environment, if any paths have to be added or removed.\r\n3. Where should this be implemented? Glanced a bit at the the [activate](https://github.com/spack/spack/blob/a04e0d25258c11215221953abf46b3f137203138/lib/spack/spack/environment.py#L107) function and I think an additional option to return prepended variables instead of expanded ones (called `prepend`?) would work, with that passed to the [shell_modification](https://github.com/spack/spack/blob/a04e0d25258c11215221953abf46b3f137203138/lib/spack/spack/util/environment.py#L539) function to tell it to use the environment variable name instead of the value from `os.environ.get(name, None)`.\r\n\r\n### General information\r\n\r\n- [x] I have run `spack --version` and reported the version of Spack: v0.16.0\r\n- [ ] I have searched the issues of this repo and believe this is not a duplicate: kind of?\r\n\r\nTried looking for similar issues but didn't find anything really. This comment came sort of close as they mention generating \"a loads file that can be sourced to load the environment\" https://github.com/spack/spack/pull/15842#issuecomment-622652363 which is the usecase I had in mind for this.",
    "performed_via_github_app": null
}