{
    "url": "https://api.github.com/repos/spack/spack/issues/5264",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5264/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5264/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5264/events",
    "html_url": "https://github.com/spack/spack/pull/5264",
    "id": 254702292,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM4OTM2NTU0",
    "number": 5264,
    "title": "Minor refactoring of spec.py",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 456121338,
            "node_id": "MDU6TGFiZWw0NTYxMjEzMzg=",
            "url": "https://api.github.com/repos/spack/spack/labels/refactoring",
            "name": "refactoring",
            "color": "f28f2a",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-09-01T17:17:48Z",
    "updated_at": "2018-08-14T14:09:54Z",
    "closed_at": "2018-08-14T14:09:51Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/5264",
        "html_url": "https://github.com/spack/spack/pull/5264",
        "diff_url": "https://github.com/spack/spack/pull/5264.diff",
        "patch_url": "https://github.com/spack/spack/pull/5264.patch"
    },
    "body": "This PR applies a trivial refactoring technique (extract a method from a class) to `spec.py`. The aim is to prepare the stage for bigger refactoring later on, in case they are needed, and give a more modular structure to the code.\r\n\r\nThe rationale is to extract from the `Spec` class methods that don't modify `self` and return a value as a result of the call. In certain cases, like `concretized`, changing the code from:\r\n```python\r\nspec = ...\r\ns = spec.concretized()  # Returns a new object\r\nspec.concretize()  # Modifies self\r\n```\r\nto:\r\n```python\r\nspec = ...\r\ns = concretized(spec)  # Returns a new object\r\nspec.concretize()  # Modifies self\r\n```\r\nmimics what built-in do for `l.sort()` vs. `s = sorted(l)`.\r\n\r\nIn principle extracting methods this way should ease mocking in unit tests, even though - to be fair - it's not probably the case for the four methods extracted here.\r\n\r\nThe long-term idea is that, whenever we feel like time has come to split `spec.py` into smaller pieces, it should be easy to re-organize the code as a sub-package:\r\n```console\r\nspec\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 exceptions.py\r\n\u251c\u2500\u2500 format.py # This 'import .spec' and contains `tree`, `colorized`, maybe `format`\r\n\u2514\u2500\u2500 spec.py  # Core classes, like Spec.\r\n\u2514\u2500\u2500 ...\r\n```\r\nand still maintain the same interface to the clients that `import spack.spec`.\r\n\r\n##### Modifications in details\r\n- [x] removed method `Spec.get_dependency` as it was used only one time in another method of `Spec`\r\n- [x] removed method `Spec._install_status` for the same reason as above\r\n- [x] made `Spec.concretized` a free-standing function\r\n- [x] made `Spec.constrained` a free-standing function\r\n- [x] made `Spec.colorized` a free-standing function\r\n- [x] made `Spec.tree` a free-standing function\r\n- [x] extended docstrings in the process\r\n",
    "performed_via_github_app": null
}