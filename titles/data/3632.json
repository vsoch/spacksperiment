{
    "url": "https://api.github.com/repos/spack/spack/issues/3632",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/3632/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/3632/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/3632/events",
    "html_url": "https://github.com/spack/spack/issues/3632",
    "id": 218071198,
    "node_id": "MDU6SXNzdWUyMTgwNzExOTg=",
    "number": 3632,
    "title": "Cannot download default scalapack provider",
    "user": {
        "login": "BarrySmith",
        "id": 512185,
        "node_id": "MDQ6VXNlcjUxMjE4NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/512185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BarrySmith",
        "html_url": "https://github.com/BarrySmith",
        "followers_url": "https://api.github.com/users/BarrySmith/followers",
        "following_url": "https://api.github.com/users/BarrySmith/following{/other_user}",
        "gists_url": "https://api.github.com/users/BarrySmith/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BarrySmith/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BarrySmith/subscriptions",
        "organizations_url": "https://api.github.com/users/BarrySmith/orgs",
        "repos_url": "https://api.github.com/users/BarrySmith/repos",
        "events_url": "https://api.github.com/users/BarrySmith/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BarrySmith/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446643530,
            "node_id": "MDU6TGFiZWw0NDY2NDM1MzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/fetching",
            "name": "fetching",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 456144594,
            "node_id": "MDU6TGFiZWw0NTYxNDQ1OTQ=",
            "url": "https://api.github.com/repos/spack/spack/labels/virtual-dependencies",
            "name": "virtual-dependencies",
            "color": "0052cc",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-30T03:30:01Z",
    "updated_at": "2017-04-02T19:48:28Z",
    "closed_at": "2017-04-02T19:48:28Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "A fresh clone of spack\r\n\r\n```\r\n~/Src/spack (develop=) \r\n$ ./bin/spack install scalapack\r\n==> Installing intel-mkl\r\n==> Fetching file:///Users/barrysmith/Src/spack/l_mkl_2017.0.098.tgz\r\ncurl: (37) Couldn't open file /Users/barrysmith/Src/spack/l_mkl_2017.0.098.tgz\r\n==> Fetching from file:///Users/barrysmith/Src/spack/l_mkl_2017.0.098.tgz failed.\r\n==> Error: FetchError: All fetchers failed for intel-mkl-2017.0.098-hilljmo3obytjmooovysa6d7otigqjnc\r\n/Users/barrysmith/Src/spack/lib/spack/spack/package.py:948, in do_fetch:\r\n     921      def do_fetch(self, mirror_only=False):\r\n     922          \"\"\"\r\n     923          Creates a stage directory and downloads the tarball for this package.\r\n     924          Working directory will be set to the stage directory.\r\n     925          \"\"\"\r\n     926          if not self.spec.concrete:\r\n     927              raise ValueError(\"Can only fetch concrete packages.\")\r\n     928  \r\n     929          start_time = time.time()\r\n     930          if spack.do_checksum and self.version not in self.versions:\r\n     931              tty.warn(\"There is no checksum on file to fetch %s safely.\" %\r\n     932                       self.spec.format('$_$@'))\r\n     933  \r\n     934              # Ask the user whether to skip the checksum if we're\r\n     935              # interactive, but just fail if non-interactive.\r\n     936              ck_msg = \"Add a checksum or use --no-checksum to skip this check.\"\r\n     937              ignore_checksum = False\r\n     938              if sys.stdout.isatty():\r\n     939                  ignore_checksum = tty.get_yes_or_no(\"  Fetch anyway?\",\r\n     940                                                      default=False)\r\n     941                  if ignore_checksum:\r\n     942                      tty.msg(\"Fetching with no checksum.\", ck_msg)\r\n     943  \r\n     944              if not ignore_checksum:\r\n     945                  raise FetchError(\"Will not fetch %s\" %\r\n     946                                   self.spec.format('$_$@'), ck_msg)\r\n     947  \r\n  >> 948          self.stage.fetch(mirror_only)\r\n     949  \r\n     950          self._fetch_time = time.time() - start_time\r\n     951  \r\n     952          if spack.do_checksum and self.version in self.versions:\r\n     953              self.stage.check()\r\n     954  \r\n     955          self.stage.cache_local()\r\n```\r\n\r\n```\r\n$ cat ~/.spack/packages.yaml\r\n#\r\n#   Spack likes to build all of its packages. The file  ~/.spack/packages.yaml allows you to list\r\n# packages already install on your system for Spack to use instead of compiling them itself.\r\n#\r\n#   In the example below I used the homebrew package manager; you could probably use the MacPorts\r\n# package manager instead\r\n#\r\npackages:\r\n    #  homebrew provided packages\r\n    #  install with: brew install packagename\r\n    autoconf:\r\n        paths:\r\n            autoconf@2.69: /usr/local/bin\r\n        buildable: False\r\n    libtool:  # note it installs it with the name glibtool to avoid conflict with Apple's completely different libtool\r\n        paths:\r\n            libtool@2.4.6: /usr/local/bin\r\n        buildable: False\r\n    cmake:\r\n        paths:\r\n            cmake@3.7.1: /usr/local/bin\r\n        buildable: False\r\n#    mpich:\r\n#        paths:\r\n#            mpich@3.2: /usr/local\r\n#        buildable: False\r\n#    openmpi:\r\n#        paths:\r\n#            openmpi@2.0.1: /usr/local\r\n#        buildable: False\r\n#    python:  # you should also be able to use the Apple provided python; see below\r\n#        paths:\r\n#            python@2.7.12: /usr/local\r\n#        buildable: False\r\n    boost:\r\n        paths:\r\n            boost@1.62.0: /usr/local\r\n        buildable: False\r\n\r\n    #  NVIDIA provided CUDA tools from Nvidia.com\r\n    cuda:\r\n        paths:\r\n            cuda@8.0: /Developer/NVIDIA/CUDA-8.0\r\n        buildable: False\r\n\r\n    # Apple provided packages\r\n    m4:\r\n        paths:\r\n            m4@1.4.6: /usr/bin\r\n        buildable: False\r\n    zlib:\r\n        paths:\r\n            zlib@1.2.8: /usr/\r\n        buildable: False\r\n    python:\r\n        paths:\r\n            python@2.7.1: /usr\r\n        buildable: False        \r\n\r\n    all:\r\n        providers:\r\n            # prefer OpenMPI over MPICH by default\r\n            mpi: [mpich, openmpi]\r\n            # Use Apple BLAS/LAPACK accelerator library instead of installing one\r\n            blas: [veclibfort]\r\n            lapack: [veclibfort]\r\n```\r\n\r\n```\r\n$ cat ~/.spack/darwin/compilers.yaml\r\ncompilers:\r\n- compiler:\r\n    environment: {}\r\n    extra_rpaths: []\r\n    flags: {}\r\n    modules: []\r\n    operating_system: sierra\r\n    paths:\r\n      cc: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang\r\n      cxx: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++\r\n      f77: /usr/local/bin/gfortran\r\n      fc: /usr/local/bin/gfortran\r\n    spec: clang@8.1.0-apple\r\n    target: x86_64\r\n```\r\n\r\nI do not have MKL install on my apple laptop. \r\n\r\n",
    "performed_via_github_app": null
}