{
    "url": "https://api.github.com/repos/spack/spack/issues/1875",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/1875/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/1875/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/1875/events",
    "html_url": "https://github.com/spack/spack/pull/1875",
    "id": 180000018,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODcyNzc3ODQ=",
    "number": 1875,
    "title": "spec : interface for build information",
    "user": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 446754070,
            "node_id": "MDU6TGFiZWw0NDY3NTQwNzA=",
            "url": "https://api.github.com/repos/spack/spack/labels/blas-lapack-scalapack",
            "name": "blas-lapack-scalapack",
            "color": "4477a8",
            "default": false,
            "description": null
        },
        {
            "id": 446630669,
            "node_id": "MDU6TGFiZWw0NDY2MzA2Njk=",
            "url": "https://api.github.com/repos/spack/spack/labels/dependencies",
            "name": "dependencies",
            "color": "c2e0c6",
            "default": false,
            "description": null
        },
        {
            "id": 446634397,
            "node_id": "MDU6TGFiZWw0NDY2MzQzOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/discussion",
            "name": "discussion",
            "color": "a87f5a",
            "default": false,
            "description": null
        },
        {
            "id": 446622613,
            "node_id": "MDU6TGFiZWw0NDY2MjI2MTM=",
            "url": "https://api.github.com/repos/spack/spack/labels/needs-response",
            "name": "needs-response",
            "color": "bfd4f2",
            "default": false,
            "description": null
        },
        {
            "id": 446620033,
            "node_id": "MDU6TGFiZWw0NDY2MjAwMzM=",
            "url": "https://api.github.com/repos/spack/spack/labels/ready",
            "name": "ready",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/spack/spack/milestones/3",
        "html_url": "https://github.com/spack/spack/milestone/3",
        "labels_url": "https://api.github.com/repos/spack/spack/milestones/3/labels",
        "id": 2905687,
        "node_id": "MDk6TWlsZXN0b25lMjkwNTY4Nw==",
        "number": 3,
        "title": "v0.11.0",
        "description": "",
        "creator": {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 1,
        "closed_issues": 57,
        "state": "closed",
        "created_at": "2017-11-12T00:25:40Z",
        "updated_at": "2018-07-05T15:21:20Z",
        "due_on": "2018-01-17T08:00:00Z",
        "closed_at": "2018-01-17T23:02:16Z"
    },
    "comments": 35,
    "created_at": "2016-09-29T09:38:19Z",
    "updated_at": "2017-11-12T00:39:08Z",
    "closed_at": "2017-03-02T18:01:30Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/1875",
        "html_url": "https://github.com/spack/spack/pull/1875",
        "diff_url": "https://github.com/spack/spack/pull/1875.diff",
        "patch_url": "https://github.com/spack/spack/pull/1875.patch"
    },
    "body": "**TLDR** \r\n\r\nThis PR provides a general mechanism to forward queries from `Spec` to `Packages` using the descriptor `ForwardQueryToPackage`. It implements most of the ideas discussed in #1821 (see details below), including a default behavior for the methods `spec.libs` and `spec.cppflags`. \r\n\r\nTo showcase an example some of the packages in the dag:\r\n```console\r\n$ spack spec -Il pexsi\r\nInput spec\r\n--------------------------------\r\n     fse2tj5  pexsi\r\n\r\nNormalized\r\n--------------------------------\r\n     ge7amsh  pexsi\r\n     4av5qrp      ^parmetis\r\n     wji7giq          ^cmake@2.8:\r\n     qfnm56h          ^metis@5:\r\n     2xnea7r          ^mpi\r\n\r\nConcretized\r\n--------------------------------\r\n[+]  m6mbmik  pexsi@0.9.0%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  ua5fwf7      ^parmetis@4.0.3%gcc@4.8~debug~gdb+shared arch=linux-ubuntu14-x86_64\r\n[+]  t5oqkdp          ^cmake@3.6.1%gcc@4.8~doc+ncurses+openssl+ownlibs~qt arch=linux-ubuntu14-x86_64\r\n[+]  qwcc7xb              ^ncurses@6.0%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[-]  23ldpkv              ^openssl@system%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  sj5ayy3          ^metis@5.1.0%gcc@4.8~debug~gdb~idx64~real64+shared arch=linux-ubuntu14-x86_64\r\n[+]  u4ku7al          ^openmpi@2.0.1%gcc@4.8~mxm~pmi~psm~psm2~slurm~sqlite3~thread_multiple~tm~verbs+vt arch=linux-ubuntu14-x86_64\r\n[+]  cbteeox              ^hwloc@1.11.4%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  6ryt5eq                  ^libpciaccess@0.13.4%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  2ffyrzb                      ^libtool@2.4.6%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  zfagq4d                          ^m4@1.4.17%gcc@4.8+sigsegv arch=linux-ubuntu14-x86_64\r\n[+]  m3xfbqd                              ^libsigsegv@2.10%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  4swdmfk                      ^pkg-config@0.29.1%gcc@4.8+internal_glib arch=linux-ubuntu14-x86_64\r\n[+]  bunu7o5                      ^util-macros@1.19.0%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  yhtbrhi      ^superlu-dist@3.3%gcc@4.8 arch=linux-ubuntu14-x86_64\r\n[+]  idsxmtv          ^openblas@0.2.19%gcc@4.8+fpic~openmp+shared arch=linux-ubuntu14-x86_64\r\n```\r\nhave been reworked to make use of the new features.\r\n\r\n##### Analysis and requirements\r\n\r\nThere are a number of things that emerged from #1682 and #1821 concerning build information, that I'll try to recap below for ease of reference : \r\n1. packages know themselves better than anybody else and thus they should handle requests that are based on their state\r\n2. the syntax in #1682 is needlessly redundant (e.g. `spec['blas'].blas_libs` mentions `blas` twice)\r\n3. only `blas` and `lapack` providers are taken care of properly, while normal packages are not\r\n4. use of `__getattr__` to intercept calls to non-existing attributes in `Spec` should be avoided\r\n5. if we add a mechanism to query for build information, then it should be possible to opt-out of it (see case for `dealii` and `trilinos`)\r\n\r\nOn top of that I would add a couple more points : \r\n1. sometimes packages provide more than one service (API, functionality, etc.) and the few needed are only known from the calling scope (e.g. `openmpi` installs `cxx`, `c` and `fortran` APIs and a particular package may need to link with `cxx`)\r\n2. the actions required to compute build properties are the same for many simple and well-behaved packages (e.g. `spec['name'].libs` will require very often to search for `lib{name}.{suffix}` somewhere in `prefix`)\r\n##### Design\r\n\r\nI grabbed the basic idea that @tgamblin proposed in #1821 and expanded it further. What I didn't like there was just the syntax it would have imposed : \r\n\r\n``` python\r\nblas = spec['blas']  # to retrieve the spec providing blas we use __getitem__\r\nblas_libs = spec.libs('blas') # ... but to ask for properties of 'blas' we use function calls\r\n...\r\n```\r\n\r\nso I tried to achieve something like : \r\n\r\n``` python\r\nblas_libs = spec['blas'].libs # ask the blas provider for list of libraries\r\nmpi_cxx_libs = spec['mpi:cxx'].libs # ask the mpi provider just for the libraries needed for the `cxx` API\r\nmpi_cxx_and_fortran_libs = spec['mpi:cxx,fortran'].libs # ask the mpi provider `cxx` and fortran libs\r\nmetis_libs = spec['metis'].libs # I want to be able to do the same thing with a non-virtual package\r\n...\r\n# To opt-out of default behavor\r\nclass Trilinos(Package):\r\n    libs = None\r\n```\r\n\r\nAnd have readable tracebacks in case of failures : \r\n\r\n``` shell\r\n# Here I made openblas fail on purpose\r\nTraceback (most recent call last):\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/build_environment.py\", line 511, in fork\r\n    function()\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/package.py\", line 983, in build_process\r\n    self.install(self.spec, self.prefix)\r\n  File \"/home/mculpo/PycharmProjects/spack/var/spack/repos/builtin/packages/pexsi/package.py\", line 70, in install\r\n    '@LAPACK_LIBS': self.spec['lapack'].libs.joined(),\r\n  File \"/home/mculpo/PycharmProjects/spack/lib/spack/spack/spec.py\", line 650, in __get__\r\n    raise AttributeError(message)\r\nAttributeError: 'openblas' package has no relevant attribute 'libs'\r\n    spec : 'openblas@0.2.19%gcc@6.2.0+fpic~openmp+shared arch=linux-Ubuntu14-x86_64'\r\n    queried as : 'lapack'\r\n    extra parameters : '[]'\r\n```\r\n\r\nThe whole design is based on a few of simple concepts : \r\n- a `Spec` instance has now an internal state to keep track of 'queries' from client code, and a few attributes to retrieve, set or clear the query state\r\n- a descriptor takes care of forwarding queries from `Spec` to `Package` and uses a chain of responsibility (documented in the code) to serve them\r\n- `Spec.__getitem__` automatically set a new query state in the required `spec`. If the `spec` being queried is virtual `__getitem__` returns a copy instead of a reference to deal with the case of packages that provide more than one service.\r\n\r\n##### Modifications\r\n- [x] calls forwarded from Spec to Package are now explicit\r\n- [x] added descriptor within Spec to manage forwarding\r\n- [x] added state in Spec to maintain query information\r\n- [x] modified a few packages (the one involved in spack install pexsi) to showcase changes\r\n- [x] added unit tests for the new logic in `__getitem__`\r\n- [ ] added documentation on `cppflags` and `libs`\r\n",
    "performed_via_github_app": null
}