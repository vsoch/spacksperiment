{
    "url": "https://api.github.com/repos/spack/spack/issues/13483",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/13483/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/13483/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/13483/events",
    "html_url": "https://github.com/spack/spack/issues/13483",
    "id": 513875265,
    "node_id": "MDU6SXNzdWU1MTM4NzUyNjU=",
    "number": 13483,
    "title": "How to add OpenMPI flags through def edit",
    "user": {
        "login": "SheraLee",
        "id": 33297023,
        "node_id": "MDQ6VXNlcjMzMjk3MDIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/33297023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SheraLee",
        "html_url": "https://github.com/SheraLee",
        "followers_url": "https://api.github.com/users/SheraLee/followers",
        "following_url": "https://api.github.com/users/SheraLee/following{/other_user}",
        "gists_url": "https://api.github.com/users/SheraLee/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SheraLee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SheraLee/subscriptions",
        "organizations_url": "https://api.github.com/users/SheraLee/orgs",
        "repos_url": "https://api.github.com/users/SheraLee/repos",
        "events_url": "https://api.github.com/users/SheraLee/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SheraLee/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-29T12:14:52Z",
    "updated_at": "2019-11-12T02:11:04Z",
    "closed_at": "2019-11-12T02:11:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I failed to install my package with openmpi in #13215 , so I tried to set more flags through  `def edit ` to see if it will help. \r\n\r\nHowever,  I am not sure if it is the right thing to do or I should just add more to my configure.ac (we are using Autotools). I am also not sure if I have written my python.py right, especially the  `def edit ` part. \r\n\r\nSorry for submitting a lot of issues recently, and thanks a lot for all the help I have received! You guys are great!\r\n\r\n**python.py**\r\n   ```\r\n git = \"https://github.com/sdsc/p3dfft.3\"\r\n\r\n    version('develop', branch = 'master')\r\n    version('0.0.0', '3c62c2bdf4aa91c3f1ab122efc1b3799')\r\n\r\n    variant('fftw', default = True,\r\n            description='Builds with FFTW library')\r\n    variant('essl', default=False,\r\n            description='Builds with ESSL library')\r\n    variant('mpi', default = True,\r\n            description=\"Enable MPI support.\")\r\n    variant('openmp', default=False,\r\n            description=\"Enable OpenMP support.\")\r\n    variant('measure', default=False,\r\n            description=\"Define if you want to use the measure fftw planner flag\")\r\n    variant('estimate', default=False,\r\n            description=\"Define if you want to use the estimate fftw planner flag\")\r\n    variant('patient', default=False,\r\n            description=\"[Define if you want to use the patient fftw planner flag]\")\r\n\r\n    depends_on('mpi',when = '+mpi')\r\n    depends_on('fftw',when = '+fftw')\r\n    depends_on('essl',when = '+essl')\r\n    depends_on('openmp',when = '+openmp')\r\n\r\n\r\n    def setup_environment(self, spack_env, run_env):\r\n        spec = self.spec\r\n\r\n        spack_env.set('CC', spec['mpi'].mpicc)\r\n        spack_env.set('FC', spec['mpi'].mpifc)\r\n        spack_env.set('CXX', spec['mpi'].mpicxx)\r\n\r\n\r\n    def edit(self, spec, prefix):\r\n         if '^openmpi' in spec :\r\n          if self.compiler.name == 'intel'  :\r\n                        flags=\"-lmpi_mpifh -limf -lifcore\"\r\n                if self.compiler.name == 'pgi'  :\r\n                        flags=\"-lmpi_mpifh -pgf90libs\"\r\n                config['FORTRAN_LIB'] = flags\r\n    def install(self, spec, prefix):\r\n        config_args = ['--prefix={0}'.format(prefix)]\r\n\r\n        if '+fftw' in spec:\r\n            config_args.append('--enable-fftw')\r\n            config_args.append ('--with-fftw-lib= %s' % spec['fftw'].prefix.lib)\r\n            config_args.append ('--with-fftw-inc= %s' % spec['fftw'].prefix.include)\r\n            if '+measure' in spec:\r\n                 config_args.append('--enable-fftwmeasure')\r\n            if '+estimate' in spec:\r\n                 config_args.append('--enable-fftwestimate')\r\n            if '+patient' in spec:\r\n                 config_args.append('--enable-fftwpatient')\r\n\r\n        if '+essl' in spec:\r\n            config_args.append('--enable-essl')\r\n            config_args.append ('--with-essl-lib= %s' % spec['essl'].prefix.lib)\r\n            config_args.append ('--with-essl-inc= %s' % spec['essl'].prefix.include)\r\n\r\n        if '+mkl' in spec:\r\n            config_args.append('--enable-mkl')\r\n            config_args.append ('--with-mkl-lib= %s' % spec['mkl'].prefix.lib)\r\n            config_args.append ('--with-mkl-inc= %s' % spec['mkl'].prefix.include)\r\n\r\n        configure( *config_args)\r\n\r\n        make()\r\n        make('install')\r\n```\r\n\r\n**things I want to add if in configure =.ac:**\r\n```\r\n# check whether to use OpenMPI\r\nAC_MSG_CHECKING([whether to use OpenMPI])\r\nAC_ARG_ENABLE(openmpi, [AC_HELP_STRING([--enable-openmpi], [use the OpenMPI MPI implementation])], ok=$enableval, ok=no)\r\nAC_MSG_RESULT([$ok])\r\ncase $compiler in\r\n    ibm)\r\n    ;;\r\n    intel)\r\n        if test \"$ok\" = \"yes\"; then\r\n\t        AC_SUBST(FORTRAN_LIB,\"-lmpi_mpifh -limf -lifcore\") \r\n        else\r\n\t        AC_SUBST(FORTRAN_LIB,\"-limf -lifcore\") #-lmpichf90 \r\n        fi\r\n    ;;\r\n    pgi)\r\n        if test \"$ok\" = \"yes\"; then\r\n            AC_SUBST(FORTRAN_LIB,\"-lmpi_mpifh -pgf90libs\")\r\n        else\r\n            AC_SUBST(FORTRAN_LIB,\"-lmpichf90 -pgf90libs\")\r\n        fi\r\n    ;;\r\n    cray)\r\n    ;;\r\n    gnu)\r\n        if test \"$ok\" = \"yes\"; then\r\n\t        AC_SUBST(FORTRAN_LIB,\"-lmpi_mpifh -lgfortran\")\r\n        else\r\n\t        AC_SUBST(FORTRAN_LIB,\"-lgfortran\")\r\n        fi\r\n    ;;\r\n    *)\r\nesac\r\n```\r\n\r\nThank you !",
    "performed_via_github_app": null
}