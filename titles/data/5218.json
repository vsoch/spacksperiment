{
    "url": "https://api.github.com/repos/spack/spack/issues/5218",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/5218/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/5218/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/5218/events",
    "html_url": "https://github.com/spack/spack/issues/5218",
    "id": 253039061,
    "node_id": "MDU6SXNzdWUyNTMwMzkwNjE=",
    "number": 5218,
    "title": "Issue with spack module refresh and multiple architectures with shared filesystem",
    "user": {
        "login": "pramodskumbhar",
        "id": 27898197,
        "node_id": "MDQ6VXNlcjI3ODk4MTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/27898197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pramodskumbhar",
        "html_url": "https://github.com/pramodskumbhar",
        "followers_url": "https://api.github.com/users/pramodskumbhar/followers",
        "following_url": "https://api.github.com/users/pramodskumbhar/following{/other_user}",
        "gists_url": "https://api.github.com/users/pramodskumbhar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pramodskumbhar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pramodskumbhar/subscriptions",
        "organizations_url": "https://api.github.com/users/pramodskumbhar/orgs",
        "repos_url": "https://api.github.com/users/pramodskumbhar/repos",
        "events_url": "https://api.github.com/users/pramodskumbhar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pramodskumbhar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 471995122,
            "node_id": "MDU6TGFiZWw0NzE5OTUxMjI=",
            "url": "https://api.github.com/repos/spack/spack/labels/commands",
            "name": "commands",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 446632829,
            "node_id": "MDU6TGFiZWw0NDY2MzI4Mjk=",
            "url": "https://api.github.com/repos/spack/spack/labels/modules",
            "name": "modules",
            "color": "fef2c0",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-25T23:19:05Z",
    "updated_at": "2017-08-27T18:54:48Z",
    "closed_at": "2017-08-27T18:54:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Suppose we have shared file system for `linux-centos7-ppc64le` (power8) and `linux-centos7-x86_64` system. When I check installed packages I see packages from both architectures:\r\n\r\n```\r\n$ spack find\r\n==> 55 installed packages.\r\n-- linux-centos7-ppc64le / gcc@4.8.5 ----------------------------\r\nautoconf@system  cmake@3.8.1  ncurses@system          neuron@master    openmpi@2.0.2      py-appdirs@1.4.3  py-packaging@16.8  .....\r\n\r\n-- linux-centos7-ppc64le / xl@14.1 ------------------------------\r\nautoconf@system  cmake@3.8.1         hdf5@1.8.18    mod2c@develop           neurodamus@develop  openmpi@2.0.2             pkg-config@0.29.1     zlib@1.2.8 ....\r\n\r\n\r\n-- linux-centos7-x86_64 / intel@17.0.1 --------------------------\r\nautoconf@system  cmake@2.8.12  intelmpi@develop  mvapich2@2.2  neurodamus@hippocampus  ....\r\n```\r\nNow when I do `spack module refresh` I end up with:\r\n\r\n```\r\nmus/hippocampus-intel-ocno]\r\nTraceback (most recent call last):\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/bin/spack\", line 81, in <module>\r\n    sys.exit(spack.main.main())\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/main.py\", line 552, in main\r\n    return _main(command, parser, args, unknown)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/main.py\", line 444, in _main\r\n    return _invoke_spack_command(command, parser, args, unknown_args)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/main.py\", line 355, in _invoke_spack_command\r\n    return_val = command(parser, args)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/cmd/module.py\", line 267, in module\r\n    callbacks[args.subparser_name](module_type, specs, args)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/cmd/module.py\", line 251, in refresh\r\n    x.write(overwrite=True)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/lib/spack/spack/modules.py\", line 394, in write\r\n    package.setup_dependent_package(self.pkg.module, self.spec)\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/var/spack/repos/builtin/packages/intelmpi/package.py\", line 37, in setup_dependent_package\r\n    bindir = self.get_bin_dir()\r\n  File \"/gpfs/homeb/pcp0/pcp0043/spack/var/spack/repos/builtin/packages/intelmpi/package.py\", line 20, in get_bin_dir\r\n    raise RuntimeError('No suitable Intel MPI bindir found')\r\nRuntimeError: No suitable Intel MPI bindir found\r\n```\r\nThe `Intel MPI` module is available on `x86_64` login node and not `power8`. It seems like currently `refresh` command is trying to regenerate all modules. Is there any way to say just refresh modules for specific architecture? Or any other solution to avoid this issue?\r\n",
    "performed_via_github_app": null
}