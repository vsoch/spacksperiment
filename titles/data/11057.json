{
    "url": "https://api.github.com/repos/spack/spack/issues/11057",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/11057/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/11057/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/11057/events",
    "html_url": "https://github.com/spack/spack/pull/11057",
    "id": 427033727,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY1NzUzMzM5",
    "number": 11057,
    "title": "Spack stacks: Allow combinatorial Environment specifications.",
    "user": {
        "login": "becker33",
        "id": 13971568,
        "node_id": "MDQ6VXNlcjEzOTcxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13971568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/becker33",
        "html_url": "https://github.com/becker33",
        "followers_url": "https://api.github.com/users/becker33/followers",
        "following_url": "https://api.github.com/users/becker33/following{/other_user}",
        "gists_url": "https://api.github.com/users/becker33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/becker33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/becker33/subscriptions",
        "organizations_url": "https://api.github.com/users/becker33/orgs",
        "repos_url": "https://api.github.com/users/becker33/repos",
        "events_url": "https://api.github.com/users/becker33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/becker33/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 537065486,
            "node_id": "MDU6TGFiZWw1MzcwNjU0ODY=",
            "url": "https://api.github.com/repos/spack/spack/labels/environments",
            "name": "environments",
            "color": "d4c5f9",
            "default": false,
            "description": null
        },
        {
            "id": 512483406,
            "node_id": "MDU6TGFiZWw1MTI0ODM0MDY=",
            "url": "https://api.github.com/repos/spack/spack/labels/impact-high",
            "name": "impact-high",
            "color": "fef2c0",
            "default": false,
            "description": ""
        },
        {
            "id": 1491157493,
            "node_id": "MDU6TGFiZWwxNDkxMTU3NDkz",
            "url": "https://api.github.com/repos/spack/spack/labels/stacks",
            "name": "stacks",
            "color": "92d1db",
            "default": false,
            "description": ""
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "tgamblin",
        "id": 299842,
        "node_id": "MDQ6VXNlcjI5OTg0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tgamblin",
        "html_url": "https://github.com/tgamblin",
        "followers_url": "https://api.github.com/users/tgamblin/followers",
        "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
        "organizations_url": "https://api.github.com/users/tgamblin/orgs",
        "repos_url": "https://api.github.com/users/tgamblin/repos",
        "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tgamblin/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "tgamblin",
            "id": 299842,
            "node_id": "MDQ6VXNlcjI5OTg0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/299842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgamblin",
            "html_url": "https://github.com/tgamblin",
            "followers_url": "https://api.github.com/users/tgamblin/followers",
            "following_url": "https://api.github.com/users/tgamblin/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgamblin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgamblin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgamblin/subscriptions",
            "organizations_url": "https://api.github.com/users/tgamblin/orgs",
            "repos_url": "https://api.github.com/users/tgamblin/repos",
            "events_url": "https://api.github.com/users/tgamblin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgamblin/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2019-03-29T15:08:15Z",
    "updated_at": "2019-08-08T18:09:44Z",
    "closed_at": "2019-07-19T02:28:51Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
        "url": "https://api.github.com/repos/spack/spack/pulls/11057",
        "html_url": "https://github.com/spack/spack/pull/11057",
        "diff_url": "https://github.com/spack/spack/pull/11057.diff",
        "patch_url": "https://github.com/spack/spack/pull/11057.patch"
    },
    "body": "Resolves #8835\r\n\r\nThis PR requires an update after #10017 is merged. I've marked WIP for now.\r\n\r\nAllow users to specify combinatorial sets of packages for Environments.\r\n\r\nThis feature is aimed at facilities deployment people, to enable Spack usage at the facility level.\r\n\r\nFrom the documentation (with only slight formatting changes):\r\n\r\n\"\r\nEntries in the ``specs`` list can be individual abstract specs or a\r\nspec matrix.\r\n\r\nA spec matrix is a yaml object containing multiple lists of specs, and\r\nevaluates to the cross-product of those specs. Spec matrices also\r\ncontain an ``excludes`` directive, which eliminates certain\r\ncombinations from the evaluated result.\r\n\r\nThe following two Environment manifests are identical:\r\n\r\n```yaml\r\nspack:\r\n  specs:\r\n    - zlib %gcc@7.1.0\r\n    - zlib %gcc@4.9.3\r\n    - libelf %gcc@7.1.0\r\n    - libelf %gcc@4.9.3\r\n    - libdwarf %gcc@7.1.0\r\n    - cmake\r\n```\r\n```yaml\r\nspack:\r\n  specs:\r\n    - matrix:\r\n        - [zlib, libelf, libdwarf]\r\n        - ['%gcc@7.1.0', '%gcc@4.9.3']\r\n      exclude:\r\n        - libdwarf%gcc@4.9.3\r\n    - cmake\r\n```\r\n\r\nSpec matrices can be used to install swaths of software across various\r\ntoolchains.\r\n\r\nThe concretization logic for spec matrices differs slightly from the\r\nrest of Spack. If a variant or dependency constraint from a matrix is\r\ninvalid, Spack will reject the constraint and try again without\r\nit. For example, the following two Environment manifests will produce\r\nthe same specs:\r\n\r\n```yaml\r\nspack:\r\n  specs:\r\n    - matrix:\r\n        - [zlib, libelf, hdf5+mpi]\r\n        - [^mvapich2@2.2, ^openmpi@3.1.0]\r\n```\r\n```yaml\r\nspack:\r\n  specs:\r\n    - zlib\r\n    - libelf\r\n    - hdf5+mpi ^mvapich2@2.2\r\n    - hdf5+mpi ^openmpi@3.1.0\r\n```\r\n\r\nThis allows one to create toolchains out of combinations of\r\nconstraints and apply them somewhat indiscriminantly to packages,\r\nwithout regard for the applicability of the constraint.\r\n\r\nThe last type of possible entry in the specs list is a reference.\r\n\r\nThe Spack Environment manifest yaml schema contains an additional\r\nheading ``definitions``. Under definitions is an array of yaml\r\nobjects. Each object has one or two fields. The one required field is\r\na name, and the optional field is a ``when`` clause.\r\n\r\nThe named field is a spec list. The spec list uses the same syntax as\r\nthe ``specs`` entry. Each entry in the spec list can be a spec, a spec\r\nmatrix, or a reference to an earlier named list. References are\r\nspecified using the ``$`` sigil, and are \"splatted\" into place\r\n(i.e. the elements of the referent are at the same level as the\r\nelements listed separately). As an example, the following two manifest\r\nfiles are identical.\r\n\r\n```yaml\r\nspack:\r\n  definitions:\r\n    - first: [libelf, libdwarf]\r\n    - compilers: ['%gcc', '%intel']\r\n    - second:\r\n        - $first\r\n        - matrix:\r\n            - [zlib]\r\n            - [$compilers]\r\n  specs:\r\n    - $second\r\n    - cmake\r\n```\r\n```yaml\r\nspack:\r\n  specs:\r\n    - libelf\r\n    - libdwarf\r\n    - zlib%gcc\r\n    - zlib%intel\r\n    - cmake\r\n```\r\n\r\nN.B. Named a spec list in the definitions section may only refer\r\n   to a named list defined above itself. Order matters.\r\n\r\nIn short files like the example, it may be easier to simply list the\r\nincluded specs. However for more complicated examples involving many\r\npackages across many toolchains, separately factored lists make\r\nEnvironments substantially more manageable.\r\n\r\nAdditionally, the ``-l`` option to the ``spack add`` command allows\r\none to add to named lists in the definitions section of the manifest\r\nfile directly from the command line.\r\n\r\nThe ``when`` directive can be used to conditionally add specs to a\r\nnamed list. The ``when`` directive takes a string of python code\r\nreferring to a restricted set of variables, and evaluates to a\r\nboolean. The specs listed are appended to the named list if the\r\n``when`` string evaluates to ``True``. In the following snippet, the\r\nnamed list ``compilers`` is ``['%gcc', '%clang', '%intel']`` on\r\n``x86_64`` systems and ``['%gcc', '%clang']`` on all other systems.\r\n\r\n```yaml\r\nspack:\r\n  definitions:\r\n    - compilers: ['%gcc', '%clang']\r\n    - when: spack_target == 'x64_64'\r\n      compilers: ['%intel']\r\n```\r\n  N.B. Any definitions with the same named list with true ``when``\r\n   clauses (or absent ``when`` clauses) will be appended together\r\n\r\nThe valid variables for a ``when`` clause are:\r\n\r\n1. ``platform``. The platform string of the default Spack architecture on the system. \r\n\r\n2. ``os``. The os string of the default Spack architecture on the system.\r\n\r\n3.  ``target``. The target string of the default Spack architecture on the system.\r\n\r\n4.  ``architecture`` or ``arch``. The full string of the default Spack architecture on the system.\r\n\r\n5. ``re``. The standard regex module in python.\r\n\r\n6. ``env``. The user environment (usually ``os.environ`` in python).\r\n \r\n7.  ``hostname``. The hostname of the system (if ``hostname`` is an executable in the user's PATH).\r\n\"",
    "performed_via_github_app": null
}