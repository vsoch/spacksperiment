{
    "url": "https://api.github.com/repos/spack/spack/issues/16508",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/16508/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/16508/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/16508/events",
    "html_url": "https://github.com/spack/spack/issues/16508",
    "id": 614178867,
    "node_id": "MDU6SXNzdWU2MTQxNzg4Njc=",
    "number": 16508,
    "title": "Container, spack and conflicts with the host's python",
    "user": {
        "login": "healther",
        "id": 4048699,
        "node_id": "MDQ6VXNlcjQwNDg2OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4048699?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/healther",
        "html_url": "https://github.com/healther",
        "followers_url": "https://api.github.com/users/healther/followers",
        "following_url": "https://api.github.com/users/healther/following{/other_user}",
        "gists_url": "https://api.github.com/users/healther/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/healther/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/healther/subscriptions",
        "organizations_url": "https://api.github.com/users/healther/orgs",
        "repos_url": "https://api.github.com/users/healther/repos",
        "events_url": "https://api.github.com/users/healther/events{/privacy}",
        "received_events_url": "https://api.github.com/users/healther/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 512483297,
            "node_id": "MDU6TGFiZWw1MTI0ODMyOTc=",
            "url": "https://api.github.com/repos/spack/spack/labels/impact-low",
            "name": "impact-low",
            "color": "fef2c0",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "alalazo",
        "id": 4199709,
        "node_id": "MDQ6VXNlcjQxOTk3MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alalazo",
        "html_url": "https://github.com/alalazo",
        "followers_url": "https://api.github.com/users/alalazo/followers",
        "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
        "organizations_url": "https://api.github.com/users/alalazo/orgs",
        "repos_url": "https://api.github.com/users/alalazo/repos",
        "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alalazo/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "alalazo",
            "id": 4199709,
            "node_id": "MDQ6VXNlcjQxOTk3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4199709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alalazo",
            "html_url": "https://github.com/alalazo",
            "followers_url": "https://api.github.com/users/alalazo/followers",
            "following_url": "https://api.github.com/users/alalazo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alalazo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alalazo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alalazo/subscriptions",
            "organizations_url": "https://api.github.com/users/alalazo/orgs",
            "repos_url": "https://api.github.com/users/alalazo/repos",
            "events_url": "https://api.github.com/users/alalazo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alalazo/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-05-07T16:13:26Z",
    "updated_at": "2020-05-14T12:21:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I'm not completely sure if this should be considered a bug in spack or whether the use case below is too strange.\r\n\r\nWe deploy the software we depend on in singularity containers containing different apps (for different use cases). In the last update of the base image we moved to python3-providing one, this exposed the following problem:\r\n\r\n```\r\n$ singularity shell --app simulation /containers/testing/c7215p26_2020-05-06_1.img\r\nSingularity c7215p26_2020-05-06_1.img:~> . /opt/init/spack.sh \r\nFatal Python error: initfsencoding: Unable to get the locale encoding\r\nModuleNotFoundError: No module named 'encodings'\r\n\r\nCurrent thread 0x00007f3ce89d8740 (most recent call first):\r\n```\r\n\r\nThe reason for this is a combination of\r\n- the `spack` binary preferring `python3` unconditionally\r\n- our app setting `PYTHONHOME` \r\n\r\nunsetting `PYTHONHOME` solves the problem. But as we need this, we have a couple of options to solve this problem:\r\n- hiding the python3 binary in the app via adding a `python3 -> python2` symlink\r\n- patching the spack binary to override the automatic detection via an environment variable\r\n\r\nThe latter looks like adding\r\n```\r\nif [ -n \"${SPACK_PYTHON_BINARY+x}\" ]; then\r\n    exec ${SPACK_PYTHON_BINARY} $0 \"$@\"\r\nfi\r\n```\r\nbefore the auto detection in the special no-op things. This overrides the automatic detection by a magic environment variable, which we would set in the app. Is this something you would consider adding to upstream spack? (Naming and things are obviously up for changes)",
    "performed_via_github_app": null
}