{
    "url": "https://api.github.com/repos/spack/spack/issues/22014",
    "repository_url": "https://api.github.com/repos/spack/spack",
    "labels_url": "https://api.github.com/repos/spack/spack/issues/22014/labels{/name}",
    "comments_url": "https://api.github.com/repos/spack/spack/issues/22014/comments",
    "events_url": "https://api.github.com/repos/spack/spack/issues/22014/events",
    "html_url": "https://github.com/spack/spack/issues/22014",
    "id": 818881306,
    "node_id": "MDU6SXNzdWU4MTg4ODEzMDY=",
    "number": 22014,
    "title": "Test dependencies not available when executing `spack test run`",
    "user": {
        "login": "GianlucaFicarelli",
        "id": 26835404,
        "node_id": "MDQ6VXNlcjI2ODM1NDA0",
        "avatar_url": "https://avatars.githubusercontent.com/u/26835404?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GianlucaFicarelli",
        "html_url": "https://github.com/GianlucaFicarelli",
        "followers_url": "https://api.github.com/users/GianlucaFicarelli/followers",
        "following_url": "https://api.github.com/users/GianlucaFicarelli/following{/other_user}",
        "gists_url": "https://api.github.com/users/GianlucaFicarelli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GianlucaFicarelli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GianlucaFicarelli/subscriptions",
        "organizations_url": "https://api.github.com/users/GianlucaFicarelli/orgs",
        "repos_url": "https://api.github.com/users/GianlucaFicarelli/repos",
        "events_url": "https://api.github.com/users/GianlucaFicarelli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GianlucaFicarelli/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 73908754,
            "node_id": "MDU6TGFiZWw3MzkwODc1NA==",
            "url": "https://api.github.com/repos/spack/spack/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true,
            "description": null
        },
        {
            "id": 1433532775,
            "node_id": "MDU6TGFiZWwxNDMzNTMyNzc1",
            "url": "https://api.github.com/repos/spack/spack/labels/triage",
            "name": "triage",
            "color": "ed9793",
            "default": false,
            "description": "The issue needs to be prioritized"
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-01T13:45:22Z",
    "updated_at": "2021-03-02T09:13:54Z",
    "closed_at": "2021-03-02T09:13:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Explain, in a clear and concise way, the command you ran and the result you were trying to achieve.\r\nExample: \"I ran `spack find` to list all the installed packages and ...\" -->\r\nDependencies defined in a python package using `depends_on('<py-package>', type='test')` are not considered when running `spack test run`.\r\nInstead, the same dependency is available when using `type='run'`.\r\n\r\nAccording to the documentation [here](https://spack.readthedocs.io/en/latest/packaging_guide.html#adding-install-tests)\r\n> These tests run in an environment that provides access to the package and all of its dependencies, including `test`-type dependencies.\r\n\r\nSome additional context: I'm trying to execute `pip check` to verify that the dependencies defined in `setup.py` are satisfied in Spack as well.\r\nThis should be useful to identify some inconsistencies between the dependencies defined in `setup.py` and in `package.py`.\r\nPlease advice if thre is another way to do it, or if instead a check like this could be made part of the standard tests of python packages (together with the `import checking` recently added).\r\n\r\n\r\n### Steps to reproduce the issue\r\n\r\n- Add a test dependency and the `test` method to the python package using `spack edit py-jsmin` (`py-jsmin` is just used as an example because it doesn't have any complex dependency, but the same commands can be applied to any other python package):\r\n  ```python\r\n    depends_on('py-pip', type='test')\r\n\r\n    def test(self):\r\n        super().test()\r\n        self.run_test(\r\n            python.path, ['-mpip', 'check'], purpose='checking dependencies'\r\n        )\r\n   ```\r\n- Install the package using `spack install py-jsmin`\r\n- Run the tests using `spack test run py-jsmin`\r\n\r\n### Error Message\r\n\r\n<!-- If Spack reported an error, provide the error message. If it did not report an error but the output appears incorrect, provide the incorrect output. If there was no error message and no output but the result is incorrect, describe how it does not match what you expect. -->\r\nThe test fails with the message `No module named pip`:\r\n```console\r\n$ spack test run py-jsmin\r\n\r\n==> Spack test u4ljxk3w6bigt55f6tqlbxhsugu3gvt3\r\n==> Testing package py-jsmin-2.2.2-k4hhyqf\r\n==> Error: TestFailure: 1 tests failed.\r\n\r\n\r\nCommand exited with status 1:\r\n    '/path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3.8' '-mpip' 'check'\r\n/path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3.8: No module named pip\r\n\r\n\r\n\r\n1 error found in test log:\r\n     3    ==> [2021-03-01-14:19:17.000394] checking import of jsmin\r\n     4    ==> [2021-03-01-14:19:17.000591] '/path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3\r\n          .8' '-c' 'import jsmin'\r\n     5    PASSED\r\n     6    ==> [2021-03-01-14:19:17.024497] checking dependencies\r\n     7    ==> [2021-03-01-14:19:17.024770] '/path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3\r\n          .8' '-mpip' 'check'\r\n     8    /path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3.8: No module named pip\r\n  >> 9    FAILED: Command exited with status 1:\r\n     10       '/path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3.8' '-mpip' 'check'\r\n     11   /path/to/spack/opt/spack/linux-rhel7-skylake_avx512/gcc-9.3.0/python-3.8.8-2ksnrjibwvlao6hvsx6674u5usahu4ek/bin/python3.8: No module named pip\r\n     12   \r\n     13     File \"/path/to/spack/bin/spack\", line 71, in <module>\r\n     14       sys.exit(spack.main.main())\r\n     15     File \"/path/to/spack/lib/spack/spack/main.py\", line 762, in main\r\n\r\n\r\n\r\n/path/to/spack/lib/spack/spack/build_environment.py:872, in _setup_pkg_and_run:\r\n        869        tb_string = traceback.format_exc()\r\n        870\r\n        871        # build up some context from the offending package so we can\r\n  >>    872        # show that, too.\r\n        873        package_context = get_package_context(tb)\r\n        874\r\n        875        logfile = None\r\n\r\n```\r\n\r\n### Information on your system\r\n\r\n<!-- Please include the output of `spack debug report` -->\r\n* **Spack:** 0.16.1-1534-890a93bbcd\r\n* **Python:** 3.8.3\r\n* **Platform:** linux-rhel7-skylake_avx512\r\n* **Concretizer:** original\r\n\r\n<!-- If you have any relevant configuration detail (custom `packages.yaml` or `modules.yaml`, etc.) you can add that here as well. -->\r\n\r\n### Additional information\r\n\r\n<!-- These boxes can be checked by replacing [ ] with [x] or by clicking them after submitting the issue. -->\r\n- [x] I have run `spack debug report` and reported the version of Spack/Python/Platform\r\n- [x] I have searched the issues of this repo and believe this is not a duplicate\r\n- [x] I have run the failing commands in debug mode and reported the output\r\n\r\n<!-- We encourage you to try, as much as possible, to reduce your problem to the minimal example that still reproduces the issue. That would help us a lot in fixing it quickly and effectively!\r\n\r\nIf you want to ask a question about the tool (how to use it, what it can currently do, etc.), try the `#general` channel on our Slack first. We have a welcoming community and chances are you'll get your reply faster and without opening an issue.\r\n\r\nOther than that, thanks for taking the time to contribute to Spack! -->\r\n",
    "performed_via_github_app": null
}